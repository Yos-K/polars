var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_and_args","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_as_series","max_as_series","max_as_series","max_as_series","mean","mean","median","median","median","median_as_series","median_as_series","median_as_series","min","min","min_as_series","min_as_series","min_as_series","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_as_series","std_as_series","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","sum_as_series","sum_as_series","sum_as_series","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","upstream_traits","value_unchecked","var","var_as_series","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","PolarsAsRef","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Flat","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Nested","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Structure","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_decimal","is_empty","is_empty","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_as_series","merge_dtypes","merge_map","microseconds","milliseconds","min_as_series","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","performance","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Duplicate","Err","ErrString","InvalidOperation","Io","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","source","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wrap_msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_lengths","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","AggregationContext","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","Count","Count","Cross","CrossJoin","CsvEncoding","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","Enum","Enum","Eq","EqValidity","Err","Error","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","FLOAT_RE","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Flat","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","GetAnyValue","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HashMap","HashMap","Higher","IDX_DTYPE","INTEGER_RE","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","Io","IpcCompression","IpcReader","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinDispatch","JoinOptions","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Nested","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Outer","Output","Over","OwnedObject","ParallelStrategy","ParquetCompression","ParquetReader","ParquetWriteOptions","ParquetWriter","PartitionedAggregation","PathIterator","Physical","Physical","PhysicalExpr","PhysicalIoHelper","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","RevMapping","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingGroupOptions","RollingOptions","RollingOptionsFixedWindow","RollingOptionsImpl","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIter","RowGroups","Saturday","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","StartBy","StaticArray","Std","Std","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","Structure","SubPlan","Sum","Sum","SumHorizontal","Sunday","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","ToDummies","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UpperBound","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_finish_left_join","_join_suffix_name","_left_join_from_series","_outer_join_from_series","_sum_as_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_comment_prefix","_with_eager","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_expression","as_fd","as_list","as_partitioned_aggregator","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_stats_evaluator","as_stats_evaluator","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","by","by","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","center","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns_to_dummies","compare","compare","compression","compression","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","df","df","diff","diff","diff","div","div","divide","dot","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","duration","eager","eager","encode_hex","encode_hex_upper","ends_with","ends_with_chunked","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","finalize","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_path","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_null","full_null","fun","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_header","has_validity","has_validity","has_window_function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_schema","infer_schema_len","infer_schema_len","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_series","into_series","into_thrift","into_vec","is_between","is_between","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_literal","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_as_series","max_as_series","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_as_series","median_as_series","melt","memory_map","memory_mapped","merge","merge_dtypes","merges_join_keys","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_as_series","min_as_series","min_max","min_periods","min_periods","min_periods","min_periods","minute","minute","minute","minute","minutes","minutes","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","null","null","null","null","null_count","null_count","null_count","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","outer_join","outer_join","output_schema","over","over_with_options","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parsed_int","partial_cmp","partial_cmp","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","predicates","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_as_series","product","profile","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quarter","quarter","quarter","queue","quote_char","quote_style","raise_if_empty","raise_if_empty","rank","rank","read","read_buf","read_impl","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_mean","rolling_mean","rolling_median","rolling_min","rolling_min","rolling_quantile","rolling_quantile","rolling_std","rolling_std","rolling_sum","rolling_sum","rolling_var","rolling_var","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_as_series","std_as_series","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_as_series","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dot","to_dummies","to_dummies","to_field","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_serialize","try_unwrap","tu","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","tz","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","utf8","utils","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_as_series","var_as_series","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","weights","weights","when","when","when","window_size","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_dtype","with_dtype_overwrite","with_dtypes","with_dtypes_slice","with_encoding","with_encoding","with_end_of_line_char","with_end_of_line_char","with_extension","with_extension","with_float_precision","with_fractional_seconds","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","by_column","cache_hits","contexts","df","err","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","schema","schema","schema","schema","schema","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","super_type","include_nulls","groups","rolling","coalesce","data_type","high","low","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptions","RollingOptionsImpl","SeriesOpsTime","StringMethods","TimeMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","borrow","borrow_mut","by","by","center","center","clone","clone_into","closed_window","closed_window","day","day","days","default","deref","deref_mut","drop","eq","fmt","fn_params","fn_params","from","hour","hour","hours","init","into","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_mean","rolling_min","rolling_quantile","rolling_std","rolling_sum","rolling_var","second","second","seconds","string","to_owned","try_from","try_into","tu","type_id","tz","vzip","warn_if_unsorted","week","week","weekday","weekday","weights","weights","window_size","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Flat","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Nested","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Structure","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","BatchedCsvReaderMmap","BatchedCsvReaderRead","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","next_batches","next_batches","next_batches","next_batches","to_batched_owned_mmap","to_batched_owned_read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","infer_file_schema","infer_file_schema_inner","is_compressed","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_as_series","mean","mean_as_series","median","median_as_series","min","min_as_series","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_as_series","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[864,"polars::chunked_array::arithmetic"],[892,"polars::chunked_array::builder"],[1149,"polars::chunked_array::builder::list"],[1166,"polars::chunked_array::collect"],[1180,"polars::chunked_array::float"],[1182,"polars::chunked_array::iterator"],[1252,"polars::chunked_array::iterator::par"],[1254,"polars::chunked_array::object"],[1325,"polars::chunked_array::object::builder"],[1348,"polars::chunked_array::object::registry"],[1376,"polars::chunked_array::ops"],[1575,"polars::chunked_array::ops::arity"],[1610,"polars::chunked_array::ops::float_sorted_arg_max"],[1612,"polars::chunked_array::ops::gather"],[1615,"polars::chunked_array::ops::search_sorted"],[1644,"polars::chunked_array::ops::sort"],[1651,"polars::chunked_array::ops::sort::arg_bottom_k"],[1652,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1659,"polars::chunked_array::ops::sort::options"],[1672,"polars::chunked_array::temporal"],[1679,"polars::chunked_array::temporal::conversion"],[1682,"polars::chunked_array::upstream_traits"],[1683,"polars::datatypes"],[2985,"polars::datatypes::categorical"],[3002,"polars::datatypes::categorical::revmap"],[3008,"polars::datatypes::categorical::string_cache"],[3027,"polars::docs"],[3030,"polars::error"],[3115,"polars::error::constants"],[3118,"polars::frame"],[3373,"polars::frame::explode"],[3402,"polars::frame::group_by"],[3638,"polars::frame::group_by::GroupByMethod"],[3639,"polars::frame::group_by::GroupsProxy"],[3641,"polars::frame::group_by::aggregations"],[3654,"polars::frame::group_by::expr"],[3657,"polars::frame::row"],[3764,"polars::functions"],[3766,"polars::prelude"],[8300,"polars::prelude::AggExpr"],[8307,"polars::prelude::BooleanFunction"],[8310,"polars::prelude::DslPlan"],[8369,"polars::prelude::Expr"],[8403,"polars::prelude::FunctionExpr"],[8424,"polars::prelude::GroupByMethod"],[8425,"polars::prelude::GroupsProxy"],[8427,"polars::prelude::JoinType"],[8428,"polars::prelude::LiteralValue"],[8431,"polars::prelude::aggregations"],[8444,"polars::prelude::arity"],[8479,"polars::prelude::array"],[8498,"polars::prelude::binary"],[8514,"polars::prelude::cat"],[8515,"polars::prelude::chunkedarray"],[8608,"polars::prelude::chunkedarray::string"],[8646,"polars::prelude::chunkedarray::string::infer"],[8676,"polars::prelude::cloud"],[8723,"polars::prelude::cloud::options"],[8731,"polars::prelude::datatypes"],[8989,"polars::prelude::datatypes::categorical"],[9006,"polars::prelude::datatypes::categorical::revmap"],[9012,"polars::prelude::datatypes::categorical::string_cache"],[9016,"polars::prelude::datetime"],[9019,"polars::prelude::default_arrays"],[9025,"polars::prelude::dt"],[9077,"polars::prelude::expr"],[9080,"polars::prelude::fixed_size_list"],[9100,"polars::prelude::float_sorted_arg_max"],[9102,"polars::prelude::gather"],[9105,"polars::prelude::mode"],[9106,"polars::prelude::nan_propagating_aggregate"],[9110,"polars::prelude::null"],[9140,"polars::prelude::read_impl"],[9200,"polars::prelude::search_sorted"],[9206,"polars::prelude::series"],[9228,"polars::prelude::slice"],[9231,"polars::prelude::sort"],[9238,"polars::prelude::sort::arg_bottom_k"],[9239,"polars::prelude::sort::arg_sort_multiple"],[9246,"polars::prelude::sort::options"],[9259,"polars::prelude::strings"],[9312,"polars::prelude::udf"],[9318,"polars::prelude::utf8"],[9322,"polars::prelude::utils"],[9325,"polars::series"],[9726,"polars::series::arithmetic"],[9747,"polars::series::arithmetic::checked"],[9753,"polars::series::ops"],[9779,"polars::series::unstable"],[9803,"dyn_clone::sealed"],[9804,"num_traits"],[9805,"num_traits::cast"],[9806,"core::result"],[9807,"core::option"],[9808,"polars_arrow::array"],[9809,"alloc::boxed"],[9810,"core::iter::traits::iterator"],[9811,"polars_core::chunked_array::list::iterator"],[9812,"core::ops::function"],[9813,"core::marker"],[9814,"alloc::borrow"],[9815,"core::ops::function"],[9816,"core::slice::iter"],[9817,"core::iter::adapters::map"],[9818,"alloc::vec"],[9819,"core::iter::traits::double_ended"],[9820,"polars_arrow::offset"],[9821,"core::iter::traits::collect"],[9822,"core::fmt"],[9823,"core::fmt"],[9824,"polars_arrow::bitmap::immutable"],[9825,"core::convert"],[9826,"core::borrow"],[9827,"rayon::iter"],[9828,"core::marker"],[9829,"core::iter::traits::exact_size"],[9830,"bitflags::iter"],[9831,"bitflags::iter"],[9832,"rayon::iter"],[9833,"core::marker"],[9834,"ahash::random_state"],[9835,"polars_utils::hashing"],[9836,"ndarray::data_repr"],[9837,"ndarray::dimension::dim"],[9838,"ndarray"],[9839,"ndarray"],[9840,"core::any"],[9841,"core::ops::function"],[9842,"core::clone"],[9843,"polars_core::series::implementations::null"],[9844,"polars_arrow::array::boolean"],[9845,"polars_arrow::array::fixed_size_list"],[9846,"core::any"],[9847,"polars_arrow::bitmap::utils::zip_validity"],[9848,"core::hash"],[9849,"core::error"],[9850,"polars_arrow::array::primitive"],[9851,"polars_row::row"],[9852,"chrono::naive::datetime"],[9853,"chrono_tz::timezones"],[9854,"chrono::naive::time"],[9855,"bytemuck::zeroable"],[9856,"core::convert"],[9857,"polars_arrow::types"],[9858,"chrono::time_delta"],[9859,"chrono::naive::date"],[9860,"smartstring::config"],[9861,"smartstring"],[9862,"core::cmp"],[9863,"polars_arrow::datatypes::physical_type"],[9864,"polars_parquet::parquet::error"],[9865,"simdutf8::basic"],[9866,"planus::errors"],[9867,"alloc::collections"],[9868,"std::io::error"],[9869,"core::fmt"],[9870,"core::ops::range"],[9871,"polars_utils::idx_vec"],[9872,"rayon::iter::plumbing"],[9873,"polars_plan::logical_plan::aexpr"],[9874,"core::iter::adapters::copied"],[9875,"core::iter::adapters::zip"],[9876,"polars_utils::float"],[9877,"polars_arrow::types::native"],[9878,"polars_io::mmap"],[9879,"core::alloc"],[9880,"polars_plan::logical_plan::visitor"],[9881,"std::io"],[9882,"std::os::fd::owned"],[9883,"std::os::fd::owned"],[9884,"polars_io::predicates"],[9885,"core::mem::maybe_uninit"],[9886,"polars_io::csv::write"],[9887,"std::io"],[9888,"polars_io::parquet::write"],[9889,"hashbrown::map"],[9890,"core::cmp"],[9891,"std::path"],[9892,"core::default"],[9893,"polars_plan::dot"],[9894,"alloc::sync"],[9895,"core::iter::traits::collect"],[9896,"core::cmp"],[9897,"crossterm::command"],[9898,"polars_io::predicates"],[9899,"polars_plan::dsl::function_expr::binary"],[9900,"polars_plan::dsl::function_expr::range"],[9901,"polars_plan::dsl::function_expr::cat"],[9902,"polars_plan::dsl::function_expr::datetime"],[9903,"polars_plan::dsl::function_expr::strings"],[9904,"polars_plan::dsl::function_expr::struct_"],[9905,"polars_plan::dsl::function_expr::array"],[9906,"polars_plan::dsl::function_expr::list"],[9907,"std::ffi::os_str"],[9908,"alloc::ffi::c_str"],[9909,"core::ffi::c_str"],[9910,"std::path"],[9911,"polars_arrow::array::struct_::mutable"],[9912,"polars_arrow::buffer::immutable"],[9913,"polars_arrow::array::list"],[9914,"polars_plan::logical_plan::options"],[9915,"core::cmp"],[9916,"polars_io::mmap"],[9917,"polars_arrow::array::struct_::iterator"],[9918,"parquet_format_safe::parquet_format"],[9919,"polars_io::parquet::read_impl"],[9920,"polars_plan::logical_plan::alp"],[9921,"polars_utils::arena"],[9922,"polars_plan::logical_plan::aexpr"],[9923,"core::error"],[9924,"parquet_format_safe::thrift::varint::decode"],[9925,"std::io"],[9926,"std::io"],[9927,"core::alloc"],[9928,"core::num::nonzero"],[9929,"alloc::collections::btree::map"],[9930,"std::io"],[9931,"polars_arrow::array::utf8"],[9932,"polars_arrow::array::binary"]],"if":"``````{{}b}`````````{{}d}```````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}e}{}l{nA`}}{{{j{Ab}}{j{Ab}}}}{{{j{Ab}}Ad}}1{{{j{Af}}{Aj{Ah}}}}{{{j{Af}}{j{Af}}}}{{{j{c}}{j{c}}}{}l}50{{{j{Al}}{j{Al}}}}02{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{{Bf{c}}}}Bh}AnBj}{{{j{Al}}Bh}An}{{{j{c}}Bh}Anl}{{{j{h}}Bh}An}{{{j{Ab}}Bh}An}{{{j{Bl}}Bh}An}{{{j{Af}}Bh}An}{{{j{Al}}}d}{{}Bn}{{{j{Al}}}{{C`{d}}}}{{{j{Bl}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{Bl}}Ad}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}Ad}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}64{{{j{c}}{j{c}}}b{{D`{}{{Cl{Cn}}}}}}{{{j{Al}}c}{{j{Al}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}Df}}{{{j{c}}e}{{j{c}}}l{{Dd{C`}{{Db{C`}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{{C`{An}}}{{Db{{C`{An}}}}}}Df}}{{{j{Af}}c}{{j{Af}}}{{Dd{{C`{{Aj{Ah}}}}}{{Db{{C`{{Dh{{Aj{Ah}}}}}}}}}}Df}}{{{j{{Bf{c}}}}e}{{j{{Bf{c}}}}}Bj{{Dd{{C`{c}}}{{Db{{C`{c}}}}}}Df}}{{{j{Ab}}c}{{j{Ab}}}{{Dd{{C`{Ad}}}{{Db{{C`{{Dh{Ad}}}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{Bl}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{h}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}c}{{j{Bl}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{Dn}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{E`}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{C`}{{Db{{C`{e}}}}}}}D`}{{{j{c}}e}{{j{c}}}l{{Dd{}{{Db{}}}}Df}}{{{j{Al}}Dd}{{j{Al}}}}{{{j{Ab}}Dd}{{j{Ab}}}}{{{j{c}}Dd}{{j{c}}}l}{{{j{Af}}Dd}{{j{Af}}}}{{{j{Al}}Dd}{{j{c}}}D`}{{{j{Ab}}Dd}{{j{c}}}D`}{{{j{c}}Dd}{{j{e}}}lD`}{{{j{Af}}Dd}{{j{c}}}D`}{{{j{Ab}}c}{{j{Ab}}}{{Dl{Ad}{{Db{Ad}}}}}}{{{j{Af}}c}{{j{Af}}}{{Dl{{Aj{Ah}}}{{Db{{Aj{Ah}}}}}}}}{{{j{c}}e}bl{{Dd{}{{Db{}}}}Df}}{{{j{c}}Ebg}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{Ab}}c}{{j{Ab}}}{{Dl{AdEd}}}}{{{j{h}}Dd}{{Bb{{j{h}}B`}}}}{{{j{Bl}}Dd}{{Bb{{j{Bl}}B`}}}}{{{j{{Bf{c}}}}g{Aj{e}}}bBj{}{{Dd{{C`{c}}e}{{Db{e}}}}}}{{{j{c}}g{Aj{e}}}bl{}{{Dd{C`e}{{Db{e}}}}}}{{{j{h}}e{Aj{c}}}b{}{{Dd{{C`{An}}c}{{Db{c}}}}}}{{{j{Ab}}e{Aj{c}}}b{}{{Dd{{C`{Ad}}c}{{Db{c}}}}}}{{{j{Al}}e{Aj{c}}}b{}{{Dd{{C`{d}}c}{{Db{c}}}}}}{{{j{Af}}e{Aj{c}}}b{}{{Dd{{C`{{Aj{Ah}}}}c}{{Db{c}}}}}}{{{j{c}}e}{{j{c}}}l{{Dd{}{{Db{}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{An}{{Db{An}}}}Df}}{{{j{Ab}}c}{{j{Ab}}}{{Dd{Ad}{{Db{{Dh{Ad}}}}}}Df}}{{{j{Al}}c}{{j{Al}}}{{Dd{d}{{Db{d}}}}Df}}{{{j{{Bf{c}}}}e}{{j{{Bf{c}}}}}Bj{{Dd{c}{{Db{c}}}}Df}}{{{j{Af}}c}{{j{Af}}}{{Dd{{Aj{Ah}}}{{Db{{Dh{{Aj{Ah}}}}}}}}Df}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{Af}}Ef}{{j{Eh}}}}{{{j{Ab}}Ef}{{j{Eh}}}}{{{j{Ej}}Ef}{{j{Eh}}}}{{{j{c}}Ef}{{j{Eh}}}l}{{{j{Al}}Ef}{{j{Eh}}}}{{{j{Ab}}{Aj{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ej}}{Aj{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Al}}{Aj{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{c}}{Aj{An}}El}{{Bb{{j{Eh}}B`}}}l}{{{j{Af}}{Aj{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Af}}}{{Bb{{j{Eh}}B`}}}}{{{j{{Bf{c}}}}}{{Bb{{j{Eh}}B`}}}Bj}{{{j{Ab}}}{{Bb{{j{Eh}}B`}}}}{{{j{Al}}}{{Bb{{j{Eh}}B`}}}}{{{j{c}}}{{Bb{{j{Eh}}B`}}}l}`{{{j{Bl}}}{{j{Bl}}}}{{{j{Af}}}{{j{Af}}}}{{{j{Ab}}}{{j{Af}}}}{{{j{h}}}{{j{h}}}}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}EbD`}{{{j{Ab}}}{{j{Ab}}}}0{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}D`D`{{Dl{{C`{Dj}}C`C`}{{Db{{C`{An}}}}}}}}{{{j{c}}{j{c}}}{}En}{{{j{Al}}{j{Al}}}}0{{BnBn}Bn}{{BnBn}b}23210{BnAh}043321{ce{}{}}00000``{{{j{Af}}Eb}{{Bb{AnB`}}}}{{{j{Ej}}Eb}{{Bb{AnB`}}}}{{{j{Bl}}Eb}{{Bb{AnB`}}}}{{{j{Al}}Eb}{{Bb{AnB`}}}}{{{j{c}}Eb}{{Bb{AnB`}}}l}{{{j{h}}Eb}{{Bb{AnB`}}}}{{{j{Ab}}Eb}{{Bb{AnB`}}}}{{{j{c}}e}{{j{g}}}l{{Dd{}{{Db{}}}}Df}l}7641523{{{j{c}}An}{{Bb{AnB`}}}F`}{{{j{c}}e}{{Bb{AnB`}}}F`A`}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}D`}{{{j{c}}}{{Fj{{Cf{Cd}}}}}D`}0{{{j{c}}}{{j{c}}}D`}0{BnBn}{{ce}b{}{}}0``1{{{j{c}}}{{Bb{AjB`}}}l}{{BnBn}d}{{{j{c}}}{{`{Fl}}}l}{{}{{j{c}}}D`}{{}Bn}{Fdc{}}00000{{BnBn}Bn}{{{j{c}}e}{}l{nA`}}{{{j{c}}{j{c}}}{}l}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}}bD`}{Fdb}00{{{j{c}}}EbD`}8;{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{c}}e}{{j{Al}}}lA`}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Ab}}Ad}{{j{Al}}}}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{Ab}}{j{Ab}}}{{j{Al}}}}{{{j{Af}}{j{Af}}}{{j{Al}}}}{{{j{Af}}{Aj{Ah}}}{{j{Al}}}}468753210{{{j{h}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{Ab}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{Bl}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{c}}{j{c}}}bl}{{Bnc}b{{Gd{}{{Cb{Bn}}}}}}{{{j{Al}}d}{{Bb{{j{Al}}B`}}}}{{{j{Af}}{Aj{Ah}}}{{Bb{{j{Af}}B`}}}}{{{j{c}}}{{Bb{{j{c}}B`}}}l}{{{j{h}}{j{Al}}}{{Bb{{j{h}}B`}}}}{{{j{Af}}{j{Al}}}{{Bb{{j{Af}}B`}}}}{{{j{{Bf{c}}}}{j{Al}}}{{Bb{{j{{Bf{c}}}}B`}}}Bj}{{{j{Bl}}{j{Al}}}{{Bb{{j{Bl}}B`}}}}{{{j{Ej}}{j{Al}}}{{Bb{{j{Ej}}B`}}}}{{{j{Ab}}{j{Al}}}{{Bb{{j{Ab}}B`}}}}{{{j{c}}{j{Al}}}{{Bb{{j{c}}B`}}}l}{{{j{Al}}{j{Al}}}{{Bb{{j{Al}}B`}}}}{{{j{c}}}{{C`{Fd}}}D`}`{{{j{Ab}}Gf}{{Bb{bGh}}}}{{{j{Al}}Gf}{{Bb{bGh}}}}{{{j{Af}}Gf}{{Bb{bGh}}}}{{{j{{Bf{c}}}}Gf}{{Bb{bGh}}}Bj}{{{j{h}}Gf}{{Bb{bGh}}}}{{{j{c}}Gf}{{Bb{bGh}}}l}{{{j{Bl}}Gf}{{Bb{bGh}}}}{{BnGf}{{Bb{bGh}}}}0000{{{j{c}}e}bD`{{Dl{C`}}}}{{{j{Bl}}c}b{{Dl{{C`{Dj}}}}}}{{{j{h}}c}b{{Dl{{C`{Dj}}}}}}{c{{j{e}}}Cd{{D`{}{{Gj{c}}}}}}{cc{}}00{Ah{{C`{Bn}}}}{AhBn}00{{Adc}{{j{e}}}Gd{{D`{}{{Gj{}}}}D`}}{{{j{c}}e}{{j{c}}}{{D`{}{{Gj{}}}}D`}Gd}{{Ad{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{Ad{Fj{{Cf{Cd}}}}Eb}{{j{c}}}D`}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}0{c{{j{e}}}{{Gd{}{{Cb{{Gb{Fj{C`{Gn}}}}}}}}}l}{c{{j{Al}}}{{Gd{}{{Cb{d}}}}}}{e{{j{Af}}}{{H`{{Aj{Ah}}}}}{{Gd{}{{Cb{c}}}}}}{e{{j{Ab}}}{{Hb{Ad}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{Al}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{e{{j{h}}}{{Hd{An}}}{{Gd{}{{Cb{c}}}}}}{c{{j{h}}}{{Gd{}{{Cb{{C`{An}}}}}}}}{e{{j{Ab}}}{{H`{Ad}}}{{Gd{}{{Cb{c}}}}}}{e{{j{{Bf{c}}}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{Af}}}{{Hb{{Aj{Ah}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{e}}}{{Gd{}{{Cb{C`}}}}}l}{c{{j{h}}}{{Gd{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{cBn{{Gd{}{{Cb{Bn}}}}}}{{cFdFd{C`{Eb}}Ad}{{j{Bl}}}{{Gd{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{{Ade}{{j{{Bf{c}}}}}Bj{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ade}{{j{Af}}}{{Hb{{Aj{Ah}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ade}{{j{Ab}}}{{Hb{Ad}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Adc}{{j{Al}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{Adc}{{j{e}}}{{Ch{}{{Cb{C`}}}}}l}:9{e{{j{Ej}}}{{H`{{Aj{Ah}}}}}{{Gd{}{{Cb{c}}}}}}{c{{j{Al}}}{{Gd{}{{Cb{d}}}}}}:{e{{j{Af}}}{{H`{{Aj{Ah}}}}}{{Gd{}{{Cb{c}}}}}}?{e{{j{Ej}}}{{Hb{{Aj{Ah}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{Ab}}}{{Hb{Ad}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{h}}}{{Hd{An}}}{{Gd{}{{Cb{c}}}}}}{c{{j{Al}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{e{{j{Ab}}}{{H`{Ad}}}{{Gd{}{{Cb{c}}}}}}{{Adc}{{j{Al}}}{{Ch{}{{Cb{d}}}}}}{{Ade}{{j{Af}}}{{Hb{{Aj{Ah}}}}}{{Ch{}{{Cb{c}}}}}}{{Ade}{{j{Ab}}}{{Hb{Ad}}}{{Ch{}{{Cb{c}}}}}}{{Adc}{{j{e}}}{{Ch{}{{Cb{}}}}}l}{{Ade}{{j{{Bf{c}}}}}Bj{{Ch{}{{Cb{c}}}}}}{Ad{{C`{Bn}}}}{c{{j{Al}}}{{Hf{}{{Cb{d}}}}}}{c{{j{e}}}{{Hf{}{{Cb{C`}}}}}l}{e{{j{Af}}}{{Hb{{Aj{Ah}}}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{e{{j{Af}}}{{H`{{Aj{Ah}}}}HhHj}{{Hf{}{{Cb{c}}}}}}{c{{j{Al}}}{{Hf{}{{Cb{{C`{d}}}}}}}}{e{{j{Ab}}}{{Hb{Ad}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{c{{j{h}}}{{Hf{}{{Cb{{C`{An}}}}}}}}{e{{j{Ab}}}{{H`{Ad}}HhHj}{{Hf{}{{Cb{c}}}}}}{{Ad{Aj{c}}}{{j{Af}}}{{Hb{{Aj{Ah}}}}}}{{Ad{Aj{c}}}{{j{Ab}}}{{Hb{Ad}}}}{{AdAj}{{j{c}}}l}{{Ad{Aj{d}}}{{j{Al}}}}{{Ad{Aj{c}}}{{j{{Bf{c}}}}}Bj}{{Ad{Aj{C`}}}{{j{c}}}l}{{Ad{Aj{{C`{c}}}}}{{j{{Bf{c}}}}}Bj}{{Ad{Aj{{C`{c}}}}}{{j{Af}}}{{Hb{{Aj{Ah}}}}}}{{Ad{Aj{{C`{c}}}}}{{j{Ab}}}{{Hb{Ad}}}}{{Ad{Aj{{C`{d}}}}}{{j{Al}}}}{c{{j{Al}}}{{Hl{}{{Cb{{C`{d}}}}}}}}{c{{j{e}}}{{Hl{}{{Cb{C`}}}}}l}{{AdFj}{{j{c}}}l}{{AdFj{C`{Gn}}}{{j{c}}}l}{{AdAnFd}{{j{h}}}}{{AddFd}{{j{Al}}}}{{AdcFd}{{j{{Bf{c}}}}}Bj}{{AdAdFd}{{j{Ab}}}}{{AdAnFd}{{j{Bl}}}}{{Ad{Aj{Ah}}Fd}{{j{Ej}}}}{{Ad{Aj{Ah}}Fd}{{j{Af}}}}{{AdFd}{{j{c}}}l}{{AdFd}{{j{Af}}}}{{AdFd}{{j{Bl}}}}{{AdFd}{{j{Al}}}}{{AdFd}{{j{Ab}}}}{{AdFd}{{j{h}}}}{{AdFd}{{j{{Bf{c}}}}}Bj}6{{AdFd}{{j{Ej}}}}{{{j{c}}Fd}{{j{c}}}D`}{{AdFdEb}{{j{h}}}}{{AdFdEbFd}{{j{Bl}}}}{{{j{c}}Fd}C`D`}{{{j{Al}}Fd}{{Bb{HnB`}}}}{{{j{{Bf{c}}}}Fd}{{Bb{HnB`}}}Bj}{{{j{c}}Fd}{{Bb{HnB`}}}l}{{{j{Ej}}Fd}{{Bb{HnB`}}}}{{{j{h}}Fd}{{Bb{HnB`}}}}{{{j{Ab}}Fd}{{Bb{HnB`}}}}{{{j{Af}}Fd}{{Bb{HnB`}}}}{{{j{Bl}}Fd}{{Bb{HnB`}}}}{{{j{h}}Fd}Hn}{{{j{Ab}}Fd}Hn}{{{j{{Bf{c}}}}Fd}HnBj}{{{j{Bl}}Fd}Hn}{{{j{Af}}Fd}Hn}{{{j{Ej}}Fd}Hn}{{{j{Al}}Fd}Hn}{{{j{c}}Fd}Hnl}{{{j{h}}Fd}{{C`{An}}}}{{{j{Bl}}Fd}{{C`{An}}}}{{{j{c}}}BnD`}{{{j{h}}}An}{{{j{Bl}}}An}{{{j{{Bf{c}}}}Fd}{{C`{I`}}}Bj}0{BnIb}{{{j{c}}Fd}C`D`}{{{j{Ab}}}Fd}{{{j{h}}}Fd}{{{j{Bl}}}Fd}{{{j{Ej}}}Fd}{{{j{h}}dd}{{Bb{BhB`}}}}{{{j{Af}}dd}{{Bb{BhB`}}}}{{{j{Ej}}dd}{{Bb{BhB`}}}}{{{j{Bl}}dd}{{Bb{BhB`}}}}{{{j{Ab}}dd}{{Bb{BhB`}}}}{{{j{c}}dd}{{Bb{BhB`}}}l}{{{j{Al}}dd}{{Bb{BhB`}}}}{{{j{{Bf{c}}}}dd}{{Bb{BhB`}}}Bj}{{{j{c}}FddFd}BhEn}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{Ab}}Ad}{{j{Al}}}}{{{j{Af}}{Aj{Ah}}}{{j{Al}}}}{{{j{Af}}{j{Af}}}{{j{Al}}}}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Ab}}{j{Ab}}}{{j{Al}}}}{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{c}}e}{{j{Al}}}lA`}{{{j{h}}{j{h}}}{{j{Al}}}}712458306{{{j{c}}}dD`}{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{}Fd}00{{FdId{C`{If}}}{{j{c}}}l}{{{j{h}}}Eb}{{{j{Bl}}}Eb}{{BnBn}b}{{BnBn}Bn}{{BnBn}d}{ce{}{}}00{{{j{Ih}}}{{Il{IjIh}}}}{{{j{In}}J`{C`{Ed}}}{{Il{JbIn}}}}{{{j{Jd}}{C`{Fd}}Fd}{{Bb{{Il{JfJd}}B`}}}}{{{j{Jd}}{C`{Fd}}Fd}{{Il{JfJd}}}}{{{j{In}}J`}{{Il{JhIn}}}}{{{j{{Bf{c}}}}}{}Bj}{{{j{Af}}}}{{{j{h}}}}{{{j{Ab}}}}{{{j{c}}}{}l}{{{j{Al}}}}{{{j{Bl}}}}{{{j{Ej}}}}{Bn}{{{j{c}}}{{`{HhHjJjFlHl}}}l}{{{j{c}}}AnD`}{{{j{Jd}}}An}{{{j{In}}}{{Il{JlIn}}}}{Bnd}{{{j{c}}}dD`}1{{{j{c}}}{{j{Al}}}Jn}000{{{j{c}}}{{j{Al}}}D`}02{{{j{c}}}IbD`}{{{j{c}}}{{`{K`}}}D`}{Bn{{Kb{Bn}}}}{Bn{{Kd{Bn}}}}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{{C`{Gn}}}}}}}}}D`}`{{{j{c}}}C`D`}{{{j{c}}}{{C`{Fd}}}D`}{{{j{c}}}{{Kf{c}}}D`}{{{j{c}}{j{c}}}{}l}0{{{j{c}}}{}l}000{{{j{c}}}FdD`}{{{j{c}}e}{{j{c}}}l{nKh}}00{{{j{c}}Fd}{{j{c}}}D`}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{c}}e}{{j{Al}}}lA`}{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Ab}}{j{Ab}}}{{j{Al}}}}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{Af}}{Aj{Ah}}}{{j{Al}}}}{{{j{Af}}{j{Af}}}{{j{Al}}}}{{{j{Ab}}Ad}{{j{Al}}}}867452310{{{j{c}}}C`l}{{{j{Al}}}{{C`{d}}}}{{{j{Af}}}An}{{{j{Al}}}An}{{{j{Ab}}}An}{{{j{c}}}Anl}{{{j{Al}}}{{C`{Kj}}}}{{{j{c}}}{{C`{Kj}}}l}{{{j{E`}}}{{C`{Kj}}}}{{{j{c}}}{{C`{Kj}}}En}{{{j{Dn}}}{{C`{Id}}}}{{{j{Dn}}}An}{{{j{E`}}}An}{{{j{c}}}AnEn}=<8;:9{{{j{c}}}{{C`{Gb}}}l}{{AdAj}{{j{c}}}l}{{Ad{Aj{Ah}}FdFd}{{j{Al}}}}{{{j{c}}e}{}l{nA`}}{{{j{c}}{j{c}}}{}l}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{Af}}}{{Bb{FdB`}}}}{{{j{Ab}}}{{Bb{FdB`}}}}{{{j{c}}}{{Bb{FdB`}}}l}{{{j{c}}}AdD`}{{Adc}{{j{Kl}}}{{Hb{{Aj{If}}}}}}{{Adc}{{j{Ih}}}{{Hb{{Aj{Kn}}}}}}{{Adc}{{j{L`}}}{{Hb{{Aj{{C`{Lb}}}}}}}}{{Adc}{{j{Ab}}}{{Hb{{Aj{{C`{{Dh{Ad}}}}}}}}}}{{Ad{Ld{Kn}}}{{j{Ih}}}}{{Adc}{{j{Ab}}}{{Hb{{Aj{Ad}}}}}}{{Ad{Ld{Lf}}}{{j{Eh}}}}{{Adc}{{j{Ab}}}{{Hb{{Aj{{C`{Ed}}}}}}}}{{Adc}{{j{Af}}}{{Hb{{Aj{{Aj{Ah}}}}}}}}{{Adc}{{j{Dn}}}{{Hb{{Aj{Id}}}}}}{{Adc}{{j{Al}}}{{Hb{{Aj{d}}}}}}{{Adc}{{j{Af}}}{{Hb{{Aj{{C`{{Aj{Ah}}}}}}}}}}{{Adc}{{j{Dn}}}{{Hb{{Aj{{C`{Id}}}}}}}}{{Ade}{{j{{Bf{c}}}}}Bj{{Hb{{Aj{{C`{c}}}}}}}}{{Adc}{{j{Eh}}}{{Hb{{Aj{Lf}}}}}}{{Adc}{{j{Kl}}}{{Hb{{Aj{{C`{If}}}}}}}}{{Ad{Ld{Fn}}}{{j{In}}}}{{Adc}{{j{Lh}}}{{Hb{{Aj{Lj}}}}}}{{Adc}{{j{Ab}}}{{Hb{{Aj{{Dh{Ad}}}}}}}}{{Adc}{{j{Al}}}{{Hb{{Aj{{C`{d}}}}}}}}{{Ad{Aj{c}}}{{j{{Bf{c}}}}}Bj}{{Adc}{{j{In}}}{{Hb{{Aj{{C`{Fn}}}}}}}}{{Adc}{{j{Af}}}{{Hb{{Aj{{Dh{{Aj{Ah}}}}}}}}}}{{Adc}{{j{L`}}}{{Hb{{Aj{Lb}}}}}}{{Adc}{{j{Ll}}}{{Hb{{Aj{{C`{Ln}}}}}}}}{{Adc}{{j{Af}}}{{Hb{{Aj{{C`{{Fj{Ah}}}}}}}}}}{{Adc}{{j{Lh}}}{{Hb{{Aj{{C`{Lj}}}}}}}}{{Adc}{{j{E`}}}{{Hb{{Aj{Kj}}}}}}{{Adc}{{j{Af}}}{{Hb{{Aj{{C`{{Dh{{Aj{Ah}}}}}}}}}}}}{{Ad{Ld{If}}}{{j{Kl}}}}{{Adc}{{j{Af}}}{{Hb{{Aj{{Fj{Ah}}}}}}}}{{Adc}{{j{E`}}}{{Hb{{Aj{{C`{Kj}}}}}}}}{{Adc}{{j{Ll}}}{{Hb{{Aj{Ln}}}}}}{{Adc}{{j{In}}}{{Hb{{Aj{Fn}}}}}}{{Adc}{{j{Eh}}}{{Hb{{Aj{{C`{Lf}}}}}}}}{{Adc}{{j{M`}}}{{Hb{{Aj{{C`{Ah}}}}}}}}{{Adc}{{j{Ab}}}{{Hb{{Aj{Ed}}}}}}{{Adc}{{j{Ab}}}{{Hb{{Aj{{C`{Ad}}}}}}}}{{Adc}{{j{Ih}}}{{Hb{{Aj{{C`{Kn}}}}}}}}{{Adc}{{j{M`}}}{{Hb{{Aj{Ah}}}}}}{Ad{{j{{Bf{c}}}}}Bj}{{{j{Af}}FdFd}{{j{Af}}}}{{{j{c}}FdFd}{{j{c}}}l}{{{j{Ej}}FdFd}{{j{Ej}}}}{{{j{{Bf{c}}}}FdFd}{{j{{Bf{c}}}}}Bj}{{{j{h}}FdFd}{{j{h}}}}{{{j{Bl}}FdFd}{{j{Bl}}}}{{{j{Ab}}FdFd}{{j{Ab}}}}{{{j{Al}}FdFd}{{j{Al}}}}{{Ad{Fj{c}}}{{j{{Bf{c}}}}}Bj}{{Ad{Fj{c}}Gn}{{j{{Bf{c}}}}}Bj}{{AdFj}{{j{c}}}l}{{{j{c}}}{{j{c}}}Jn}{{{j{Al}}}}0{BnBn}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{Af}}{Aj{Ah}}}{{j{Al}}}}{{{j{Ab}}{j{Ab}}}{{j{Al}}}}{{{j{c}}e}{{j{Al}}}lA`}{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{Af}}{j{Af}}}{{j{Al}}}}{{{j{Ab}}Ad}{{j{Al}}}}68012{{{j{Bl}}{j{Bl}}}}568{{{j{c}}}FdD`}`{{{j{Bl}}}{{Bb{{G`{Fn}}B`}}}}{{{j{h}}}{{Bb{{G`{Fn}}B`}}}}{{{j{Ab}}}{{Bb{{G`{Fn}}B`}}}}`{{{j{h}}}{{`{{Mb{}{{Cb{{C`{An}}}}}}}}}}{{{j{Ab}}}{{`{{Mb{}{{Cb{{C`{Ad}}}}}}}}}}{{{j{Ab}}}{{`{Md}}}}{{{j{h}}}{{`{Md}}}}{{{j{c}}}Anl}{{{j{c}}}bD`}{{{j{c}}KjMf}{{Bb{{C`{Kj}}B`}}}En}{{{j{Dn}}KjMf}{{Bb{{C`{Id}}B`}}}}{{{j{E`}}KjMf}{{Bb{{C`{Kj}}B`}}}}{{{j{Dn}}KjMf}{{Bb{AnB`}}}}{{{j{c}}KjMf}{{Bb{AnB`}}}En}{{{j{E`}}KjMf}{{Bb{AnB`}}}}{{AdFdKj}{{Bb{{j{Al}}B`}}}}{{AdFdKjKj}{{Bb{{j{c}}B`}}}l}{{AdFd}{{j{c}}}l}{{AdFdKjKj}{{j{c}}}l}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}MhD`}{{{j{h}}}An}{{{j{Eh}}}An}{{{j{M`}}}An}{{{j{In}}}An}{{{j{Kl}}}An}{{{j{L`}}}An}{{{j{Lh}}}An}{{{j{E`}}}An}{{{j{Dn}}}An}{{{j{Ll}}}An}{{{j{Ih}}}An}69012:37584{{{j{c}}{j{c}}}{}l}0{{{j{c}}e}{}l{nA`}}0{{{j{c}}An}{{Bb{AnB`}}}Bd}{{BnBn}b}{{{j{c}}Ad}bD`}{{{j{Al}}}{{j{Al}}}}{{{j{Bl}}}{{j{Bl}}}}{{{j{Af}}}{{j{Af}}}}{{{j{{Bf{c}}}}}{{j{{Bf{c}}}}}Bj}{{{j{c}}}{{j{c}}}l}{{{j{Ej}}}{{j{Ej}}}}{{{j{h}}}{{j{h}}}}{{{j{Ab}}}{{j{Ab}}}}{{{j{c}}DdMj}{{Bb{AnB`}}}l}{{{j{c}}Fde}{{Bb{{j{c}}B`}}}Jn{{Dl{{j{c}}}{{Db{C`}}}}}}{{{j{c}}Kjdd{C`{If}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}Fddd{C`{If}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}{Aj{Lf}}e}{{Bb{AnB`}}}Ml{{Gd{}{{Cb{C`}}}}}}{{{j{Ab}}{Aj{Lf}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{Ad}}}}}}}}{{{j{Al}}{Aj{Lf}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{{{j{c}}eC`}{{Bb{{j{c}}B`}}}l{{Gd{}{{Cb{Lf}}}}}}{{{j{Af}}c{C`{{Aj{Ah}}}}}{{Bb{{j{Af}}B`}}}{{Gd{}{{Cb{Lf}}}}}}{{{j{Al}}c{C`{d}}}{{Bb{{j{Al}}B`}}}{{Gd{}{{Cb{Lf}}}}}}{{{j{Ab}}c{C`{Ad}}}{{Bb{{j{Ab}}B`}}}{{Gd{}{{Cb{Lf}}}}}}{{{j{Af}}ce}{{Bb{{j{Af}}B`}}}{{Gd{}{{Cb{Lf}}}}}{{Dd{{C`{{Aj{Ah}}}}}{{Db{{C`{{Fj{Ah}}}}}}}}}}{{{j{Ab}}ce}{{Bb{{j{Ab}}B`}}}{{Gd{}{{Cb{Lf}}}}}{{Dd{{C`{Ad}}}{{Db{{C`{Ed}}}}}}}}{{{j{c}}eg}{{Bb{{j{c}}B`}}}l{{Gd{}{{Cb{Lf}}}}}{{Dd{C`}{{Db{C`}}}}}}{{{j{Al}}ce}{{Bb{{j{Al}}B`}}}{{Gd{}{{Cb{Lf}}}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}}}{{{j{c}}{j{Al}}C`}{{Bb{{j{c}}B`}}}l}{{{j{Af}}{j{Al}}{C`{{Aj{Ah}}}}}{{Bb{{j{Af}}B`}}}}{{{j{Al}}{j{Al}}{C`{d}}}{{Bb{{j{Al}}B`}}}}{{{j{Ab}}{j{Al}}{C`{Ad}}}{{Bb{{j{Ab}}B`}}}}{{BnBnd}b}{{{j{h}}}b}{{{j{h}}Eb}b}{{{j{c}}Lf}bD`}{{{j{c}}Ib}bD`}{{BnIb}b}{{{j{{Bf{c}}}}Fn}{{j{{Bf{c}}}}}Bj}{{{j{Af}}Fn}{{j{Af}}}}{{{j{Ej}}Fn}{{j{Ej}}}}{{{j{Bl}}Fn}{{j{Bl}}}}{{{j{Al}}Fn}{{j{Al}}}}{{{j{Ab}}Fn}{{j{Ab}}}}{{{j{c}}Fn}{{j{c}}}l}{{{j{h}}Fn}{{j{h}}}}{{{j{Af}}Fn{C`{{Aj{Ah}}}}}{{j{Af}}}}{{{j{Ab}}Fn{C`{Ad}}}{{j{Ab}}}}{{{j{c}}FnC`}{{j{c}}}l}{{{j{{Bf{c}}}}Fn{C`{{Bf{c}}}}}{{j{{Bf{c}}}}}Bj}{{{j{Al}}Fn{C`{d}}}{{j{Al}}}}{{{j{Bl}}Fn{C`{An}}}{{j{Bl}}}}{{{j{Ej}}Fn{C`{{Aj{Ah}}}}}{{j{Ej}}}}{{{j{h}}Fn{C`{An}}}{{j{h}}}}{{{j{c}}}bD`}{{{j{c}}FnFd}{{j{c}}}D`}{{{j{Ej}}d}{{j{Ej}}}}{{{j{Al}}d}{{j{Al}}}}{{{j{Ab}}d}{{j{Ab}}}}{{{j{c}}d}{{j{c}}}l}{{{j{Af}}d}{{j{Af}}}}{{{j{c}}Ef}{{j{c}}}l}{{{j{Af}}Ef}{{j{Af}}}}{{{j{Al}}Ef}{{j{Al}}}}{{{j{Ab}}Ef}{{j{Ab}}}}{{{j{Ej}}Ef}{{j{Ej}}}}{{{j{c}}Ah}{{C`{Kj}}}l}{{{j{c}}Ah}AnEn}{{{j{E`}}Ah}An}{{{j{Dn}}Ah}An}{{{j{c}}{j{c}}}{}l}0{{{j{c}}e}{}l{nA`}}0{{BnBn}Bn}{{BnBn}b}{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{Al}}}{{C`{Lf}}}}{{{j{c}}}C`l}{{{j{Ab}}}An}{{{j{Al}}}An}{{{j{c}}}Anl}{{{j{Af}}}An}8{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{{j{c}}{j{Eh}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}e}{{Bb{{j{c}}B`}}}D`{{Hb{{Aj{Lf}}}}Mn}}{{{j{c}}{Aj{N`}}Ib}{{j{c}}}D`}{{{j{c}}{Aj{N`}}}{{j{c}}}D`}{{{j{c}}e}{{j{c}}}D`{{Hb{{Aj{Lf}}}}Mn}}{{{j{c}}{j{Eh}}}{{j{c}}}{D`Nb}}{{{j{Ab}}{j{Eh}}}{{j{Ab}}}}{{{j{Af}}{j{Eh}}}{{j{Af}}}}`{{{j{c}}dNd}{{Fj{{Fj{Nf}}}}}D`}{{{j{c}}}{{j{c}}}Jn}{{{j{Ab}}Fd}{{Bb{AnB`}}}}{{{j{h}}Eb}b}{{{j{Bl}}Eb}b}{{{j{h}}}{{Bb{{Nn{Nh{Nl{{Nj{Fd}}}}}}B`}}}}{{{j{c}}}{{Bb{{Nn{O`{Nl{{Nj{Fd}}}}}}B`}}}l}{ce{}{}}0{{{j{Af}}}{{j{Ab}}}}{{{j{c}}}{{Fj{C`}}}l}{{{j{c}}}{{Ob{Fj{Fj{C`}}}}}l}{{BnBn}b}{{{j{c}}{j{c}}}{}l}0{{{j{c}}}{}l}000{{{j{h}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{h}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}c}{{Bb{{j{Bl}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{Bl}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}Df}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{c{{Bb{e}}}{}{}}00{{Adg}{{Bb{{j{i}}e}}}Cd{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{{D`{}{{Gj{c}}}}D`}}111{{{j{h}}{j{c}}e}{{Bb{{j{h}}B`}}}D`{{Dl{{C`{Dj}}C`}{{Db{{Bb{{C`{An}}B`}}}}}}}}{cOd{}}00{{BnBn}Bn}{{{j{c}}}{{Bb{{j{c}}B`}}}l}{{{j{Af}}}{{Bb{{j{Af}}B`}}}}{{{j{Ab}}}{{Bb{{j{Ab}}B`}}}}{{{j{Al}}}{{Bb{{j{Al}}B`}}}}{{{j{{Bf{c}}}}}{{Bb{{j{{Bf{c}}}}B`}}}Bj}{{{j{c}}An}{{Bb{{j{c}}B`}}}D`}{{{j{c}}}bD`}`{{{j{c}}Fd}{}D`}{{{j{c}}Ah}{{C`{Kj}}}l}{{{j{c}}Ah}AnEn}{{{j{Dn}}Ah}An}{{{j{E`}}Ah}An}{{{j{E`}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{{Bf{c}}}}Nd{Fj{If}}}{{Bb{bB`}}}Bj}{{{j{M`}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ll}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ab}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Jd}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ej}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Eh}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Kl}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Lh}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Dn}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Af}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{L`}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Al}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{In}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ih}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{M`}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Lh}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Jd}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{{Bf{c}}}}Nd{Aj{If}}}{{Bb{bB`}}}Bj}{{{j{Ej}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Ih}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{L`}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{In}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Eh}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Kl}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Ab}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{E`}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Dn}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Ll}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Al}}Nd{Aj{If}}}{{Bb{bB`}}}}{{{j{Af}}Nd{Aj{If}}}{{Bb{bB`}}}}{ce{}{}}00{{{j{Bl}}}Fd}{{Adc}{{j{e}}}Cd{{D`{}{{Gj{c}}}}D`}}{{{j{c}}{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{{j{c}}Ad}{{j{c}}}D`}{{{Aj{Of}}e}c{}{{Oh{{j{Eh}}}{{Db{c}}}}}}{{{j{c}}Ib}{{j{c}}}D`}{{{j{c}}}{}l}0{{{j{c}}{j{c}}}{}l}011001111001111001111001111001111{{{j{h}}{j{c}}e}{{j{h}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{Bl}}{j{c}}e}{{j{Bl}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{c}}{j{Al}}{j{c}}}{{Bb{{j{c}}B`}}}D`}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````````````{{cf}b{}}000{{A@bCd}b}{A@bb}{A@db}{{A@fc}b{{Ch{}{{Cb{{C`{d}}}}}}Hl}}{{{A@h{c}}e}bl{{Ch{}{{Cb{C`}}}}Hl}}{{{A@h{c}}e}bl{{Ch{}{{Cb{}}}}Hl}}{A@jb}{A@lb}65{A@nb}{AA`b}{A@fb}{AAbb}{{{A@h{c}}}bl}{{{AAd{c}}}b{AAfMn}}{AAhb}{AAjb}{{{AAl{c}}}bl}{{A@b{C`{Cd}}}b}{{A@b{C`{An}}}{{Bb{bB`}}}}{{A@j{C`{An}}}{{Bb{bB`}}}}{{{A@h{c}}{C`{Aj}}}bl}{{{AAd{c}}{C`{e}}}b{AAfMn}{{Hb{c}}}}{{A@l{C`{c}}}b{}}{{A@jAn}{{Bb{bB`}}}}{{A@bAn}{{Bb{bB`}}}}{{A@dAn}{{Bb{bB`}}}}{{A@nAn}{{Bb{bB`}}}}{{AA`An}{{Bb{bB`}}}}{{A@fAn}{{Bb{bB`}}}}{{AAbAn}{{Bb{bB`}}}}{{{A@h{c}}An}{{Bb{bB`}}}l}{{{A@h{c}}Aj}bl}{{A@nc}b{{Ch{}{{Cb{{C`{Ad}}}}}}Hl}}{{AA`c}b{{Ch{}{{Cb{{C`{{Aj{Ah}}}}}}}}Hl}}{{A@lc}b{}}{{{AAd{c}}e}b{AAfMn}{{Hb{c}}}}{{AAhd}b}{{{AAl{c}}}bl}{{A@nc}b{{Ch{}{{Cb{Ad}}}}}}{{AA`c}b{{Ch{}{{Cb{{Aj{Ah}}}}}}}}{ce{}{}}000000000000000000000`{{{AAd{c}}}{{AAd{c}}}{AAfMn}}{AAhAAh}{AAjAAj}{{{AAl{c}}}{{AAl{c}}}{AAnl}}{{ce}b{}{}}000{{}A@b}{{}A@d}{Fdc{}}000000000000000000000{Fdb}0000000000{A@nd}{AA`d}{A@fd}{{{A@h{c}}}dl}{A@jd}{A@nMh}{AA`Mh}{A@fMh}{{{A@h{c}}}Mhl}{A@jMh}{A@l{{j{c}}}D`}{A@b{{j{h}}}}{A@d{{j{h}}}}{AAb{{j{h}}}}{A@j{{j{h}}}}{{{AAd{Ad}}}{{j{Ab}}}}{{{AAd{{Aj{Ah}}}}}{{j{Af}}}}{AAh{{j{Al}}}}{AAjAB`}{{{AAl{c}}}{{j{c}}}l}`{cc{}}0000000000{{Ade}ABb{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ade}ABb{}{{Ch{}{{Cb{c}}}}}}{{Ad{Aj{c}}}ABb{}}{{Ad{Aj{{C`{c}}}}}ABb{}}{{EbFdFdAd}{{Bb{{Cf{A@j}}B`}}}}{{}Fd}0000000000{A@n{{Cf{Cd}}}}{AA`{{Cf{Cd}}}}{A@f{{Cf{Cd}}}}{{{A@h{c}}}{{Cf{Cd}}}l}{A@j{{Cf{Cd}}}}{ce{}{}}0000000000`{{AdFd{C`{Eb}}}A@b}{{AdFd{C`{Eb}}}A@d}{{AdFdFd}A@n}{{AdFdFd}AA`}{{AdFdFd}A@f}{{AdFd}AAb}{{AdFdFdEb}{{A@h{c}}}l}{{AdFd}{{AAd{c}}}{AAfMn}}{{AdFd}AAh}{{AdFd}AAj}{{AdFd}{{AAl{c}}}l}{{AdFdFdEbEb}{{A@h{c}}}l}{A@lb}{AAhb}{AAjb}{{{AAl{c}}}bl}{ce{}{}}000{c{{Bb{e}}}{}{}}000000000000000000000{cOd{}}000000000022222222222````````{A@jb}{{A@j{C`{An}}}{{Bb{bB`}}}}{{A@jAn}{{Bb{bB`}}}}`{A@jd}{A@jMh}{A@j{{j{h}}}}{{EbFdFdAd}{{Bb{{Cf{A@j}}B`}}}}{A@j{{Cf{Cd}}}}``{{ABdAd}{{j{c}}}D`}{{ABf{j{c}}}{{j{c}}}D`}10{{ABfAdEb}{{j{c}}}D`}0{{ABdAd}{{Bb{{j{c}}e}}}D`{}}{{ABf{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABfAdEb}{{Bb{{j{c}}e}}}D`{}}0`{ABhABh}`````{ce{}{}}0000000{Fdc{}}0000000{Fdb}000{cc{}}000{{}Fd}00044444444{ABjABl}{{ABnEb}AC`}{ABlC`}{AC`C`}{ACbC`}{{{ACd{c}}}C`Ch}32{{{ACd{c}}}C`Fl}`{ABl{{Gb{Fd{C`{Fd}}}}}}{AC`{{Gb{Fd{C`{Fd}}}}}}{{{ACd{c}}}{{Gb{Fd{C`{Fd}}}}}Ch}{c{{Bb{e}}}{}{}}0000000{cOd{}}000{ce{}{}}000``````{{cf}b{}}{e{{ACf{c}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{ACf{c}}}Bj{{Gd{}{{Cb{c}}}}}}{{AChe}g{}{{Gd{}{{Cb{c}}}}}{}}0{I`ACj}{{{ACf{c}}}ACjBj}066`{{{ACf{c}}}{{ACf{c}}}{AAnBj}}{{ce}b{}{}}{{{ACf{c}}}AChBj}{Fdc{}}0{Fdb}{{I`I`}d}0{{{ACf{c}}Gf}{{Bb{bGh}}}{AClBj}}{cc{}}{{FdACh}{{ACf{c}}}Bj}{{{ACf{c}}Fd}{{C`{c}}}Bj}{{}ACh}{{Gn{ACf{c}}{ACf{c}}}{{ACf{c}}}Bj}{{AChGn}{{ACf{c}}}Bj}{{Gn{ACf{c}}}{{ACf{c}}}Bj}0{{}Fd}{ce{}{}}{{{ACf{c}}}{}Bj}{{{ACf{c}}Fd}dBj}{{cFd}d{}}1{{{ACf{c}}}{{AD`{ACn}}}Bj}{{{ACf{c}}}{{AD`{c{Fb{c}}ACn}}}Bj}{{{ACf{c}}}FdBj}0`{{{ACf{c}}{C`{Gn}}}bBj}{{{ACf{c}}FdFd}bBj}{{cFdFd}e{}{}}01{I`{{Cf{I`}}}}{{{ACf{c}}}{{Cf{Cd}}}Bj};{g{{Bb{{ACf{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{{C`{c}}e}}}}}}}}{g{{Bb{{ACf{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}{{AChg}{{Bb{ie}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{}}0{c{{Bb{e}}}{}{}}0{cOd{}}{I`Ad}{{}Ad}{{{ACf{c}}}{{C`{Gn}}}Bj}{{{ACf{c}}Fd}cBj}{{{ACf{c}}Fd}{}Bj}1{{{ACf{c}}}{{ADb{{Fj{c}}}}}Bj}{{{ACf{c}}}{}Bj}{{{ACf{c}}}{{Fb{c}}}Bj}{ce{}{}}{{{ACf{c}}{C`{Gn}}}{{ACf{c}}}Bj}{{{ACf{c}}{C`{Gn}}}{{Cf{Cd}}}Bj}1`{{{ADd{c}}}bBj}0{{{ADd{c}}{C`{c}}}bBj}{{{ADd{c}}c}bBj}{{{ADd{c}}ACj}bBj}{{{ADd{c}}ACj}{{Bb{bB`}}}Bj}77{{}{{ADd{c}}}Bj}{Fdc{}}0{Fdb}{{{ADd{c}}}{{j{{Bf{c}}}}}Bj}{cc{}}{{}Fd}={{AdFd}{{ADd{c}}}Bj}{{{ADd{c}}}AnBj}{c{{Bb{e}}}{}{}}0{cOd{}}{ce{}{}}````{ADfb}{{ADf{C`{ACj}}}b}{{ADfACj}b}33`<<;{{ADhGf}{{Bb{bGh}}}}:{{AdFd}{{Cf{ADf}}}}{{}{{ADb{Dd}}}}{{}ACh}<7{{}d}`{{{Cf{Dd}}{ADb{Dd}}ACh}b}{ADfAn}<<;:``````````````````````````````````````````````{{cf}b{}}00{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{ADnDd}ADn}{{ADnDd}{{j{c}}}D`}{{{ADl{}{{ADj{c}}}}i{Aj{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{AE`Ef}{{j{Eh}}}}{{AE`{Aj{An}}El}{{Bb{{j{Eh}}B`}}}}{AEb{{Bb{{j{Eh}}B`}}}}`{ce{}{}}00000{{AEdEb}{{Bb{AnB`}}}}0{EfEf}{ElEl}{AEfAEf}{{ce}b{}{}}00{{}Ef}{{}El}{Fdc{}}00000``{Fdb}00{{EfEf}d}{{ElEl}d}{{AEfAEf}d}{{{AEh{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000{AEj{{Bb{AnB`}}}}{AEj{{Bb{{Gb{An{G`{Fn}}}}B`}}}}`{{AElc}{{Bb{AElB`}}}{}}{{AEn{j{Al}}}{{Bb{{j{c}}B`}}}D`}`{{EfGf}{{Bb{bGh}}}}{{ElGf}{{Bb{bGh}}}}{{AEfGf}{{Bb{bGh}}}}{cc{}}{ElEf}{EfEl}22`{{AdcFd}AF`{}}{{AdFd}AFb}`{{AFdFd}{{Bb{HnB`}}}}{{AFdFd}Hn}??{{Efc}bAFf}{{Elc}bAFf}{{AEfc}bAFf}{{}Fd}00{ce{}{}}00{AFh{{Bb{{j{Al}}B`}}}}{AFj{{Bb{{j{Al}}B`}}}}{{{AEh{}{{Cb{c}}}}e}c{}{}}0``{AFl{{C`{c}}}{}}{AFl{{C`{Kj}}}}{AFn{{C`{c}}}{}}2{AFl{{C`{{Gb{cc}}}}}{}}``{AEb{{Bb{FdB`}}}}{{}Ef}{{}El}{{AG`FdFd}{{j{c}}}D`}88``{AEj{{Bb{{G`{Fn}}B`}}}}{{AFnKjMf}{{Bb{{C`{c}}B`}}}{}}{AGbAn}0{AGdAGd}{{AGfDdMj}{{Bb{AnB`}}}}{{AGhc{C`{e}}}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lf}}}}}{}}{{AGhci}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lf}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}`{{AGh{j{Al}}{C`{c}}}{{Bb{AGhB`}}}{}}{{AGjFn}{{j{c}}}D`}{{AGlFnc}{{j{e}}}{}D`}{{AGnFdFd}AGn}0`{{AE`d}{{j{c}}}D`}{{AE`Ef}{{j{c}}}D`}{{AH`Ah}{{C`{Kj}}}}{AFl{{C`{c}}}{}}{{AHbc}{{Bb{AHbB`}}}Mn}{{AHdc}AHdMn}{AHf{{Fj{{Aj{Ah}}}}}}{ce{}{}}00{c{{Bb{e}}}{}{}}00000{cOd{}}00{AEb{{Bb{{j{c}}B`}}}D`}8333{{Efd}Ef}{{Eld}El}101010{{Elc}El{{Gd{}{{Cb{d}}}}}}{ElEl}`{{AHh{j{Al}}{j{c}}}{{Bb{{j{c}}B`}}}D`}``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AHj{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAd}{{j{k}}}D`D`{CdAHl}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAd}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AHn{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAd}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AI`{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAHl}AI`{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AIb{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIbD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAHl}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}}Fdl}0{{IbIb}Ib}{{{j{Eh}}Lf}{{Bb{bB`}}}}{{{AId{Lf}}Lf}{{Bb{bB`}}}}````{{cf}b{}}{{AIfcd}LfAHl}{ce{}{}}0{AIfAIf}{{ce}b{}{}}{{}AIf}{Fdc{}}0{Fdb}{{AIfAIf}d}{{ce}d{}{}}00{{AIfGf}{{Bb{bGh}}}}{cc{}}{{AIfc}bAFf}{{}Fd};{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}<{c{{Bb{e}}}{}{}}0{cOd{}}>`{{Fd{Fj{d}}}b}```{{AGnFdFd}AGn}0{{Fd{Aj{An}}El}{{Bb{{AIh{{j{Eh}}}}B`}}}}{{{Aj{An}}{Aj{d}}d}{{Bb{AIjB`}}}}{{Ad{Aj{An}}{Aj{d}}d}{{Bb{{j{Ej}}B`}}}}{{Ad{Aj{An}}}{{Bb{{j{Ej}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Aj{An}}}{{Bb{AIjB`}}}}{{{Aj{An}}}{{Bb{{j{Ej}}B`}}}}0```````````77`{AIlFn}00{Ad{{Bb{EdB`}}}}{Ad{{Bb{AInB`}}}}{AJ`Fn}333``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000000000000000000000000{{AJbc}AJb{{Dl{An}{{Db{An}}}}}}{AJdd}{Hn{{`{{Ch{}{{Cb{Hn}}}}}}}}{{Hn{Fj{Hn}}}b}{{{Il{JfJd}}{Il{JfJd}}}}{{HnHn}Hn}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{j{Ab}}An}{{Bb{AnB`}}}}{{{j{Af}}An}{{Bb{AnB`}}}}{{{j{Al}}An}{{Bb{AnB`}}}}{{AJbBh}An}{{AJf{C`{Ad}}}b}{{AJdAJd}{{Bb{bB`}}}}{AJfb}{{AJfAd}b}{{AJdEf}{{j{Eh}}}}{eAJh{}{{Gd{}{{Cb{c}}}}}}0{{AChe}AJj{}{{Gd{}{{Cb{c}}}}}}0{HnHn}{{{Il{IjIh}}}{{`{Hl}}}}{{{Il{JbIn}}}{{`{Hl}}}}{AJlEb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{{Aj{c}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Il{JlIn}}}{{`{Hl}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000{Eb{{Cf{Eb}}}}{{{AKh{Ad}}}AKj}{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKnEb}{{Bb{AnB`}}}}{{{Il{IjIh}}Eb}{{Bb{AnB`}}}}{{{Il{JlIn}}Eb}{{Bb{AnB`}}}}{{{Il{JfJd}}Eb}{{Bb{AnB`}}}}{{{Il{JhIn}}Eb}{{Bb{AnB`}}}}{{{Il{JbIn}}Eb}{{Bb{AnB`}}}}{{AJdEb}{{Bb{AnB`}}}}{{AJbEb}{{Bb{AnB`}}}}{{HnEb}Hn}{{{Il{JbIn}}J`}{{Il{JbIn}}}}{{{Il{JhIn}}J`}{{Il{JhIn}}}}`{{{j{c}}An}{{Bb{AnB`}}}{}}00000000{{{j{Dn}}An}{{Bb{AnB`}}}}{{{j{E`}}An}{{Bb{AnB`}}}}{AJb{{Fj{{Cf{Cd}}}}}}{{{Il{ce}}}{{Il{ce}}}D`D`}{AL`AL`}{AKjAKj}{AJdAJd}{AJbAJb}{ALbALb}{HnHn}{EbEb}{MhMh}{J`J`}{M`M`}{L`L`}{EhEh}{KlKl}{LlLl}{LhLh}{IhIh}{InIn}{DnDn}{E`E`}{IjIj}{JfJf}{JbJb}{JhJh}{ALdALd}{JlJl}{AbAb}{AfAf}{EjEj}{AlAl}{AChACh}{ALfALf}{{ce}b{}{}}0000000000000000000000000000000{{MhEb}b}{ALhe{}{{AJh{c}}AHl}}0{{ALhACh}e{}{{AJj{c}}AHl}}0{Ebd}00{{{AKh{Ad}}}Eb}{MhEb}{{{Il{JhIn}}}{{j{In}}}}{{}ALj}{{}AL`}{{}AKj}{{}Hn}{{}Eb}{{}ACh}{Fdc{}}0{{{Il{ce}}}{}D`D`}111111111111111111111111111111111111111111011111111111111111111111111111111111111{{{Il{JfJd}}{Il{JfJd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJfc}AJd{{Gd{}{{Cb{{C`{Ad}}}}}}}}{Fdb}0000000000000{AJbb}111111111111111111111111111{AKnEb}{{{Il{JfJd}}}Eb}{{{Il{JhIn}}}Eb}{{{Il{JlIn}}}Eb}{{{Il{IjIh}}}Eb}{{{Il{JbIn}}}Eb}{AJdEb}{AJbEb}{HnEb}`{{AL`AL`}d}{{HnHn}d}{{EbACh}d}{{EbEb}d}{{MhMh}d}{{J`J`}d}{{AChACh}d}{{ALfALf}d}{{HnHnd}d}{{AJdAd}}{{AJd{j{Ab}}}}{{AJdAJd}}{{AJbAJb}{{j{Al}}}}2310{{ce}d{}{}}00000000000000000{{{Il{ce}}}MhD`D`}{{AJbAd}{{Bb{AnB`}}}}{AJb{{Aj{An}}}}{AJb{{Fj{An}}}}{{AKjAd}{{C`{Lf}}}}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{AJfAJd}{ALj{{ADb{AKj}}}}{{AL`Gf}{{Bb{bGh}}}}{{AKjGf}{{Bb{bGh}}}}{{ALbGf}{{Bb{bGh}}}}{{HnGf}{{Bb{bGh}}}}0{{EbGf}{{Bb{bGh}}}}0{{MhGf}{{Bb{bGh}}}}{{J`Gf}{{Bb{bGh}}}}0{{AChGf}{{Bb{bGh}}}}{{ALfGf}{{Bb{bGh}}}}{cc{}}00{{{j{Ih}}}{{Il{IjIh}}}}{{{j{In}}}{{Il{JlIn}}}}2222222222222{{{C`{c}}}Hn{{ALl{Hn}}}}{cHnALn}{AChEb}{HnEb}606{AM`Mh}{HnMh}{ALfJ`}9999999999999999999999{AMbACh}{AMdACh};{{AChd}Eb}{{{j{Eh}}{ADb{AKj}}dAL`}AJd}{{AdcJ`}{{Il{JhIn}}}{{Gd{}{{Cb{AMf}}}}}}{{AdcJ`}{{Il{JhIn}}}{{Gd{}{{Cb{{C`{AMf}}}}}}}}{{{j{Eh}}AL`}AJd}{{Adc}{{Il{IjIh}}}{{Gd{}{{Cb{AMh}}}}}}{{Adc}{{Il{IjIh}}}{{Gd{}{{Cb{{C`{AMh}}}}}}}}{{AdcJ`}{{Il{JbIn}}}{{Gd{}{{Cb{AIl}}}}}}{{AdcJ`}{{Il{JbIn}}}{{Gd{}{{Cb{{C`{AIl}}}}}}}}{{Adc}{{Il{JlIn}}}{{Gd{}{{Cb{AJ`}}}}}}{{Adc}{{Il{JlIn}}}{{Gd{}{{Cb{{C`{AJ`}}}}}}}}{{{AMl{AMj}}Eb}Mh}{{{j{Ab}}{AKh{Ad}}AL`}{{Bb{AJdB`}}}}{{{Fj{c}}ACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Fj{c}}ACh}{{AHl{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}AAn{{Fl{}{{Cb{e}}}}HlHhHj}}{{FdcACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{FdACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AddFd}AJd}{{AdFd}AJb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AKjLf}Ad}{{{Il{JbIn}}Fd}{{Bb{HnB`}}}}{{{Il{JlIn}}Fd}{{Bb{HnB`}}}}{{{Il{IjIh}}Fd}{{Bb{HnB`}}}}{{{Il{JfJd}}Fd}{{Bb{HnB`}}}}{{{Il{JhIn}}Fd}{{Bb{HnB`}}}}{{AKnFd}{{Bb{HnB`}}}}{{AJdFd}{{Bb{HnB`}}}}{{AJbFd}{{Bb{HnB`}}}}{{{Il{JfJd}}Fd}Hn}{{{Il{IjIh}}Fd}Hn}{{{Il{JlIn}}Fd}Hn}{{{Il{JbIn}}Fd}Hn}{{{Il{JhIn}}Fd}Hn}{{AKnFd}Hn}{{AJdFd}Hn}{{AJbFd}Hn}{AKj{{AKh{Ad}}}}{{}Eb}000000000000000000000000{{AKjLf}{{C`{Ad}}}}{AJd{{ADb{AKj}}}}{Hn{{C`{Ad}}}}{{AMnFd}Hn}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AJd{j{Ab}}}}{{AJdAJd}}{{AJdAd}}{{AJbAJb}{{j{Al}}}}2310{{Hnc}bAFf}{{Ebc}bAFf}{{J`c}bAFf}{{AChc}bAFf}{{ALfc}bAFf}{{Hncd}bAFf}{{{Il{JlIn}}}{{j{Ll}}}}{{{Il{JhIn}}}{{j{In}}}}{{}Fd}0000000000000000000000000000000000000000{Eb{{C`{Eb}}}}{ACh{{C`{ACh}}}}{ce{}{}}00000000000000000000000000000000000000000{AJb}{{{Il{JlIn}}}An}{{{Il{JbIn}}}An}{{{Il{JhIn}}}An}{{{Il{JfJd}}}An}{{{Il{IjIh}}}An}{AJdAn}{AJbAn}{Hn{{Bb{HnB`}}}}{Ebd}00{Hnd}1{AJdd}{AJbd}123{AKjd}3444044343434444344434{AChd}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{AD`{cgACn}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{AJbACb}{AJdAN`}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{AKjFd}{AJdFd}{AJbFd}{{AJdAd}}{{AJdAJd}}{{AJd{j{Ab}}}}{{AJbAJb}{{j{Al}}}}3120{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{dB`}}}}{AJdAn}{{EbEb}{{Bb{EbB`}}}}{{ALj{ADb{AKj}}}{{Bb{bB`}}}}{{{Il{JhIn}}}{{j{In}}}}03{{{Il{JlIn}}}{{j{Ll}}}}1{{{Il{JbIn}}{C`{AIn}}}{{Bb{{Il{JbIn}}B`}}}}{{{Il{IjIh}}{C`{AIn}}}{{Bb{{Il{IjIh}}B`}}}}01{{{Il{JfJd}}{Il{JfJd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{AJd{{Bb{FdB`}}}}{AJdAd}{AJb{{AMl{AMj}}}}{Mh{{AMl{AMj}}}}`{{{Il{JlIn}}}{{j{Ih}}}}:{{}c{}}0{{AdFdAL`}AJf}{{Adc}{{Il{JlIn}}}{{Hb{{Aj{{C`{AJ`}}}}}}}}{{Adc}{{Il{IjIh}}}{{Hb{{Aj{{C`{AMh}}}}}}}}{{Adc}{{Il{JlIn}}}{{Hb{{Aj{AJ`}}}}}}{{Adc}{{Il{IjIh}}}{{Hb{{Aj{AMh}}}}}}{{Adc}{{Il{JhIn}}}{{Hb{{Aj{{C`{AMf}}}}}}}}{{Adc}{{Il{JbIn}}}{{Hb{{Aj{AIl}}}}}}{{Adc}{{Il{JbIn}}}{{Hb{{Aj{{C`{AIl}}}}}}}}{{Adc}{{Il{JhIn}}}{{Hb{{Aj{AMf}}}}}}{{{ADb{AKj}}}ALj}{{Ad{Aj{An}}}{{Bb{AJbB`}}}}{{AdEb}Mh}{AN`C`}{{AJd{j{Ab}}}}{{AJdAJd}}{{AJdAd}}{{AJbAJb}{{j{Al}}}}2310{AJdFd}{AJbFd}{{Ad{Aj{Ad}}Ad}{{Il{JlIn}}}}{{Ad{Aj{Ad}}Ad}{{Il{IjIh}}}}{{HnHn}{{C`{ANb}}}}{{J`J`}{{C`{ANb}}}}{AJd{{j{Eh}}}}{{{Il{JfJd}}}{{C`{Fd}}}}{AJbb}{AJbMh}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJbAd}b}{{{Il{JbIn}}ANdANd{C`{AIn}}}{{Bb{{Il{JbIn}}B`}}}}{{{Il{IjIh}}ANdANd{C`{AIn}}}{{Bb{{Il{IjIh}}B`}}}}{AJb{{Bb{{j{Ej}}B`}}}}{{AKjAKj}d}{{{Il{JfJd}}}Fd}{{{Il{JlIn}}}{{j{Ll}}}}{{{Il{JhIn}}}{{j{In}}}}{{Mh{AMl{AMj}}}b}{{{Il{JbIn}}J`}b}{{{Il{JhIn}}J`}b}{{{Il{JbIn}}Ed}{{Bb{bB`}}}}{AN`{{Gb{Fd{C`{Fd}}}}}}{{AJdd}AJd}{{AJdEf}AJd}{{{Il{IjIh}}Ad}{{j{Ab}}}}{{{Il{JbIn}}Ad}{{Bb{{j{Ab}}B`}}}}{{{Il{JlIn}}Ad}{{j{Ab}}}}{{HnEb}{{Bb{HnB`}}}}{{{Il{JfJd}}{Il{JfJd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{Il{JhIn}}}J`}{{{Il{JbIn}}}J`}{{{Il{JbIn}}}{{C`{Ed}}}}{{AJddd}{{Cf{Cd}}}}{{Ebd}ACh}{{Mhd}AM`}{J`ALf}{{EbAdd}AM`}{J`Ad}{{AJd{AKh{Ad}}ANf}AJd}{AJd{{Bb{AJdB`}}}}{AJdAJd}{AChACh}{ce{}{}}0000000000000000000000000000000{EbEb}{AChANh}{{{Il{JlIn}}Ad}{{j{Ab}}}}{{{Il{IjIh}}Ad}{{j{Ab}}}}{{{Il{JbIn}}Ad}{{Bb{{j{Ab}}B`}}}}{cEd{}}00{AJbFd}{{{Il{IjIh}}{C`{AIn}}{j{Ab}}Ad}{{Bb{{Il{IjIh}}B`}}}}{{{Il{JbIn}}{C`{AIn}}{j{Ab}}Ad}{{Bb{{Il{JbIn}}B`}}}}{g{{Bb{AJhe}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{AChg}{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALh{{Bb{eg}}}{}{{AJh{c}}AHl}{}}0{{ALhACh}{{Bb{eg}}}{}{{AJj{c}}AHl}{}}0{Hn{{Bb{cB`}}}Kh}{c{{Bb{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000{{Ebd}{{Bb{AChB`}}}}{cOd{}}0000000000000000000000000000000000000000{AChACh}{AJd{{Bb{AJdB`}}}}{AJbANj}{AJdd}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}cAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{AJd{{Bb{ANjB`}}}}1{{EbHn}d}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}gAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{ce{}{}}0000000000000000000000000000000000000000{Fdc{}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{C`{Gn}}}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}```````````{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}`````````66{{}ANl}66{{}b}{Fdb}{ANlb}2{cc{}}4{{}Fd}<{c{{Bb{e}}}{}{}}0{cOd{}}{{}d}?````````````````````````{ANnAd}{ce{}{}}00000`{Fdc{}}0{ANn}1111:::`{{AO`Gf}{{Bb{bGh}}}}{{ANnGf}{{Bb{bGh}}}}0{{B`Gf}{{Bb{bGh}}}}0;{cANn{{ALl{{Dh{Ad}}}}}}<{AObB`}{AOdB`}>{AOfB`}{AOhB`}{AOjB`}{AOlB`}{{}{{Ff{AdAO`}{{Db{b}}}}}}{{}Fd}00>>>{cB`AI`}````{{{Ff{AdAO`}{{Db{b}}}}}b}{B`{{C`{AI`}}}}{cB`AOn}{cEd{}}0{c{{Bb{e}}}{}{}}00000{cOd{}}00{ce{}{}}00{{B`Dd}B`}```````````````{{cf}b{}}00{{ANj{Fj{An}}B@`}{{Bb{bB`}}}}{{ANjDd}{{Fj{An}}}}0{{ANj{j{Al}}}{{Bb{ANjB`}}}}{{ANj{Aj{{AMl{AMj}}}}}{{Bb{ANjB`}}}}0{{ANjFnFd}ANj}{ANjANj}0{{ANjAde}{{Bb{ANjB`}}}B@b{{Oh{An}{{Db{c}}}}}}{{ANjFde}{{Bb{ANjB`}}}B@b{{Oh{An}{{Db{c}}}}}}22::::::::::2{B@dB@d}{B@fB@f}4{{ce}b{}{}}00{{ANjAd}{{Bb{AnB`}}}}{{ANje}{{Bb{{Fj{An}}B`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{}B@f}{{}ANj}{Fdc{}}000000000{Fdb}0000{{ANjAd}{{Bb{ANjB`}}}}6{{ANj{Aj{c}}}ANj{{Hb{Ad}}}}{{ANj{B@h{AdNd}}}ANj}{{ANj{C`{{Aj{c}}}}}{{Bb{ANjB`}}}{{Hb{Ad}}}}{ANj{{Fj{Eb}}}}7{{B@fB@f}d}{{ANjANj}d}00{{ce}d{}{}}00{ANjFd}`{{ANje}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{ANj{Fj{An}}}{{Bb{ANjB`}}}}{{ANjANj}{{Bb{bB`}}}}{ANj{{Fj{Mh}}}}{{ANjAEf}{{Bb{ANjB`}}}}{{ANj{j{Al}}}{{Bb{ANjB`}}}}{{B@dGf}{{Bb{bGh}}}}{{B@fGf}{{Bb{bGh}}}}{{ANjGf}{{Bb{bGh}}}}0{cc{}}000{AJbANj}1{B@`ANj}{B@jANj}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cANj{{Gd{}{{Cb{An}}}}}}{{{Aj{B@l}}}{{Bb{ANjB`}}}}{{{Aj{B@l}}B@`}{{Bb{ANjB`}}}}{{cB@`}{{Bb{ANjB`}}}{{Ch{}{{Cb{B@l}}}}}}{{ANjFd}{{C`{{Fj{Hn}}}}}}{{ANjAd}{{C`{Fd}}}}{ANj{{Fj{Ad}}}}{ANj{{Fj{{AMl{AMj}}}}}}{ANj{{Aj{An}}}}{ANj{{Fj{An}}}}{{ANjFd}{{Bb{B@lB`}}}}{{ANjFdB@l}{{Bb{bB`}}}}{{ANjFdB@l}b}{ANj{{C`{{Bb{EbB`}}}}}}`{{ANje}{{Bb{B@nB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{ANj{Fj{An}}BA`}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}1{{ANj{Fj{An}}dd}{{Bb{B@nB`}}}}{{B@fc}bAFf}{{ANj{C`{Fd}}}ANj}{ANjFd}{{ANj{Aj{An}}}{{Bb{ANjB`}}}}0{{ANj{Aj{An}}}ANj}{{ANj{BAb{Fd}}}}{{ANjFd}}{{ANj{BAd{Fd}}}}{{ANj{Ld{Fd}}}}{{ANj{BAf{Fd}}}}{{ANjBAh}}{{ANjAd}}{{ANj{BAj{Fd}}}}{{}Fd}0000{{ANjFdc}{{Bb{ANjB`}}}B@b}{ce{}{}}000000{{ANjAd}AJb}{ANj{{Bb{{j{Al}}B`}}}}{ANjd}1{ANj{{Fb{An}}}}{{ANjd}BAl}{ANjBAn}{ANjBB`}{ANj{{Bb{{C`{An}}B`}}}}{{ANjB@d}{{Bb{{C`{An}}B`}}}}{{ANjce}{{Bb{ANjB`}}}{{BBb{{AMl{AMj}}}}}{{BBb{{AMl{AMj}}}}}}{{ANjBBd}{{Bb{ANjB`}}}}3{ANjFd}{{{Fj{c}}}{{Bb{ANjB`}}}B@b}{{{Fj{An}}}ANj}{{{Fj{An}}}{{Bb{ANjB`}}}}{BAlC`}{BAnC`}{ANjANj}{{ANje}{{Bb{cB`}}}{}{{Dd{ANj}{{Db{{Bb{cB`}}}}}}}}0{{ANjgc}{{Bb{eB`}}}{}{}{{Dd{ANjc}{{Db{{Bb{eB`}}}}}}}}{ANj{{C`{An}}}}{{ANjANj}d}{{ANjAdAd}{{Bb{ANjB`}}}}{{ANjAdc}{{Bb{ANjB`}}}B@b}{{ANjFdc}{{Bb{ANjB`}}}B@b}17{{ANj{Fj{An}}BBf}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}`{{ANjAndd{C`{If}}}{{Bb{ANjB`}}}}0{{ANjFddd{C`{If}}}{{Bb{ANjB`}}}}{ANjB@`}{{ANjANj}{{Bb{bB`}}}}{{ANje}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{ANjFd}{{C`{An}}}}{{ANjc}{{Bb{ANjB`}}}{{BBh{Fd}}}}2{{ANjc}{{Bb{{Fj{An}}B`}}}{{BBb{{AMl{AMj}}}}}}{{ANje{ADb{B@`}}}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{ANjeB@`}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{ANj{Aj{c}}}{{Bb{bB`}}}{{Hb{Ad}}}}{ANj{{Gb{FdFd}}}}{{ANjFn}ANj}{ANjd}{ANjb}{BAl{{Gb{Fd{C`{Fd}}}}}}{BAn{{Gb{Fd{C`{Fd}}}}}}{{ANjFnFd}ANj}0{{ANjcEl}{{Bb{ANjB`}}}{{BBb{{AMl{AMj}}}}}}0{ANj{{`{{Ch{}{{Cb{ANj}}}}}}}}{{ANjFdd}{{Fj{ANj}}}}{{ANjB@d}{{Bb{{C`{An}}B`}}}}{{ANj{C`{Fd}}}ANj}{{ANj{j{Eh}}}{{Bb{ANjB`}}}}{{ANj{j{Eh}}}ANj}{{ANj{j{Eh}}d}ANj}{ANjANj}{{ANjBBj}{{Bb{{Nn{Nh{Nl{{Nj{Fd}}}}}}B`}}}}{ce{}{}}00{cEd{}}{{ANjFdcEl}{{Bb{ANjB`}}}{{BBb{{AMl{AMj}}}}}}{{ANj{C`{Ad}}{C`{{Ob{Ed{Fj{Ed}}}}}}}{{Bb{ANjB`}}}}{{ANjAde}{{Bb{ANjB`}}}B@b{{Oh{An}{{Db{{Bb{cB`}}}}}}}}{{ANjFde}{{Bb{ANjB`}}}B@b{{Oh{An}{{Db{{Bb{cB`}}}}}}}}{c{{Bb{e}}}{}{}}000{{{Gb{{BBl{{Cf{Cd}}}}{Aj{AM`}}}}}{{Bb{ANjB`}}}}{BBn{{Bb{ANjB`}}}}2{{cB@`}{{Bb{ANjB`}}}{{Ch{}{{Cb{{Bb{B@lB`}}}}}}}}{{ANjAd}{{Bb{FdB`}}}}44444{cOd{}}0000{{ANj{C`{{Aj{Ed}}}}B@f{C`{{Gb{FnFd}}}}}{{Bb{ANjB`}}}}{{ANjd{C`{{Aj{Ed}}}}B@f{C`{{Gb{FnFd}}}}}{{Bb{ANjB`}}}}1{{ANjc}{{Bb{ANjB`}}}{{BBb{Ed}}}}{{ANjcAdANdANd}{{Bb{ANjB`}}}{{BBb{Ed}}}}0{{ANjANj}{{Bb{ANjB`}}}}0{ce{}{}}0000{ANjFd}{{ANjc}{{Bb{ANjB`}}}B@b}{{ANjcB@`}{{Bb{ANjB`}}}B@b}{{ANjAn}ANj}{{ANjAd{C`{Lf}}}{{Bb{ANjB`}}}}{{ANjAd{C`{Lf}}}ANj}`{{cf}b{}}77{BBdBBd}{{ce}b{}{}}{{}BBd}{Fdc{}}0{Fdb}{{BBdBBd}d}{{ce}d{}{}}00{{BBdGf}{{Bb{bGh}}}}{cc{}}{{BBdc}bAFf}`{{}Fd}{ce{}{}}`0{c{{Bb{e}}}{}{}}0{cOd{}}```2````````````````````````````````>>>>{B@n{{Bb{ANjB`}}}}`{BC`{{Aj{{BCb{Lf}}}}}}{{B@nc}{{Bb{ANjB`}}}{{Dl{ANj}{{Db{{Bb{ANjB`}}}}}}HhHj}}{Bh{{j{h}}}}6666666666666666{BC`BC`}{BhBh}{B@nB@n}{BCdBCd}{{ce}b{}{}}0008{{}BC`}{{}Bh}{Fdc{}}00{BCf}1111111111111`{{BChc}{}BCj}{Fdb}000{BC`b}1111{{BC`BC`}d}{{BhBh}d}{{ce}d{}{}}00000`{BClLf}{BC`{{Aj{Lf}}}}{B@n{{Bb{ANjB`}}}}{BC`{{Fj{Lf}}}}{{BC`Gf}{{Bb{bGh}}}}{{BhGf}{{Bb{bGh}}}}{{B@nGf}{{Bb{bGh}}}}{{BCdGf}{{Bb{bGh}}}}0{{AdBCd}Ed}{cc{}}000{{{Fj{{Gb{Lf{BCb{Lf}}}}}}}BC`}{{{Fj{{Fj{{Gb{Lf{BCb{Lf}}}}}}}}}BC`}2{{{Fj{{Gb{{Fj{Lf}}{Fj{{BCb{Lf}}}}}}}}}BC`}{BC`Bh}44{BCnBCd}5{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cBC`{{Gd{}{{Cb{{Gb{Lf{BCb{Lf}}}}}}}}}}{cBC`{{Hf{}{{Cb{{Gb{Lf{BCb{Lf}}}}}}}}}}{{BhFd}BCl}{B@nBh}0{Bh{{j{Eh}}}}{{BhAd}{{j{Eh}}}}{{BD`dd}{{Bb{BhB`}}}}{B@n{{Bb{ANjB`}}}}{BhBC`}{{}Fd}0000000{ce{}{}}000000020{BC`}0100{BCld}{Bhd}{BC`d}{BC`{{BDd{{BDb{{Fb{Lf}}}}{Fb{{BCb{Lf}}}}}}}}{BhBDf}{B@n{{Fj{An}}}}{{B@n{C`{{Gb{FnFd}}}}}{{Fj{An}}}};{BClFd}{BhFd}====={{{Fj{Lf}}{Fj{{BCb{Lf}}}}d}BC`}{{ANj{Fj{An}}Bh{C`{{Fj{Ed}}}}}B@n}{BDfC`}{{BDfFd}C`}{{B@nc}{{Bb{ANjB`}}}{{Dd{ANj}{{Db{{Bb{ANjB`}}}}}}HhHj}}{c{}{}}{BhBCh}{{B@nKjMf}{{Bb{ANjB`}}}}{{B@ne}B@n{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{BhFnFd}BCf}{BC`b}{Bhb}{{B@nAh}{{Bb{ANjB`}}}}{B@n{{Bb{ANjB`}}}}{Bh{{Fj{Lf}}}}0{B@nBh}0{ce{}{}}000{cEd{}}{c{{Bb{e}}}{}{}}000000000000000{cOd{}}0000000{BhBh}{BhBC`}{Bh{{Fj{{Nj{Lf}}}}}}:66666666`````{{BC`c}An{{Dd{{Gb{Lf{BCb{Lf}}}}}{{Db{C`}}}}HhHj}}{{BC`c}An{{Dd{{Gb{Lf{BCb{Lf}}}}}{{Db{}}}}HhHj}}{{{Aj{{Nj{Lf}}}}c}An{{Dd{{Nj{Lf}}}{{Db{C`}}}}HhHj}}{{{Aj{{Nj{Lf}}}}c}An{{Dd{{Nj{Lf}}}{{Db{}}}}HhHj}}{{{Aj{c}}e{C`{{ADb{ACj}}}}}{{AId{c}}}{BDhBDj}{{Ch{}{{Cb{{Gb{LfLf}}}}}}Hl}}{{{Aj{c}}Gne{C`{{ADb{ACj}}}}}{{AId{c}}}{BDhBDj}{{Ch{}{{Cb{{Gb{LfLf}}}}}}Hl}}{{{j{c}}LfLf}{{j{c}}}D`}{{{Fj{{Nj{Lf}}}}{Aj{{Cf{Cd}}}}}d}{{BDlBh}An}{{BDnBDn}BDn}0`{{BE`ANjBh}{{Bb{AnB`}}}}{BE`{{Bb{AdB`}}}}````````````````````````````````````{{cf}b{}}00{{BEbHn}{{C`{b}}}}{{BEdHn}b}0{ce{}{}}00000{BEbBEb}{BEdBEd}{B@lB@l}{{ce}b{}{}}00{{{Aj{c}}}Eb{{Hd{Eb}}}}{{}B@l}{Fdc{}}00000{Fdb}00{{B@lB@l}d}{{ce}d{}{}}00{{B@lGf}{{Bb{bGh}}}}{cc{}}{{{Gb{EbFd}}}BEb}1{{{Gb{EbFd}}}BEd}2{{eFd}B@`{{ALl{Eb}}}{{Ch{}{{Cb{{Fj{{Gb{Edc}}}}}}}}}}{{}Fd}00{ce{}{}}00{BEbAn}{BEdAn}{{EbFd}BEb}{{EbFd}BEd}{{{Fj{Hn}}}B@l}{{BEbFd}An}{{BEdFd}An}{{{Aj{B@l}}{C`{Fd}}}{{Bb{B@`B`}}}}0{{{Aj{B@l}}{C`{Fd}}}{{Bb{{Fj{Eb}}B`}}}}999{c{{Bb{e}}}{}{}}00000{cOd{}}00;;;{{{Aj{ANj}}}{{Bb{ANjB`}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000{{ANj{Aj{Ad}}{Aj{Ad}}{C`{Ad}}ANj}ANj}{{BEf{Aj{Lf}}dd}ANj}{{BEf{Gb{{Ob{{Fj{Lf}}{Fj{N`}}}}{Ob{{Fj{Of}}{Fj{N`}}}}}}ANjBEh}{{Bb{ANjB`}}}}{{AdAd}Ed}{{BEfANjAnAnBEhd{C`{{Aj{Ad}}}}}{{Bb{ANjB`}}}}{{BEfANjAnAnBEh}{{Bb{ANjB`}}}}{BEj{{Bb{AnB`}}}}{{BEl{Aj{N`}}Ib}ANj}0{{BEl{Aj{N`}}}ANj}0{{BEn{C`{{Fj{Ad}}}}{C`{Ad}}d}{{Bb{ANjB`}}}}{{{BF`{c}}{C`{BFb}}}{{BF`{c}}}BFd}{{BB`d}BB`}{An{{Bb{AnB`}}}}{BFfBFf}{{{BFh{}{{Db{c}}}}An}c{}}{{BFfBFf}}{{ANdFn{C`{AIn}}}{{Bb{FnB`}}}}0{{BFjAn}{{Bb{AnB`}}}}1{{BFlc}BB`{{Hb{{Aj{BFf}}}}}}5`{{BFfAd}BFf}{{}BFf}{{BFfd}BFf}{{{ADb{ce}}}e{}BFn}{{BG`d}BG`}`{BGbd}0{BGdd}1`{{BFfc}BFf{{ALl{BFf}}}}{{{ADb{BGb}}BGf}{{Bb{BB`B`}}}}6{{BFfcd}BFf{{ALl{BFf}}}}{A@jb}{A@lb}{{A@j{C`{An}}}{{Bb{bB`}}}}{{A@l{C`{c}}}b{}}{{A@jAn}{{Bb{bB`}}}}{{A@lc}b{}}{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{BFlc{ADb{B@`}}}BB`{{Dd{ANj}{{Db{{Bb{ANjB`}}}}}}HhHj}}{{BFfc{BGj{{ADb{BGh}}}}}BFf{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFfBFfc{BGj{{ADb{BGh}}}}}BFf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFfc}{{Bb{BGlB`}}}{{Dl{BFf}{{Db{{Bb{BGlB`}}}}}}}}{{ADnDd}ADn}{{ADnDd}{{j{c}}}D`}{{BFfc{Aj{BFf}}{BGj{{ADb{BGh}}}}}BFf{{Dd{{Aj{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFfBGn{Aj{BFf}}dd}BFf}{{ce{BGj{{ADb{BGh}}}}d}BFf{{Dd{{Aj{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{Hb{{Aj{BFf}}}}}}{{{ADl{}{{ADj{c}}}}i{Aj{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{BFfBFfFnEb}BFf}{BBn{{ADb{Cd}}}}{BH`{{C`{Fd}}}}{BHbBFf}{BHdBFf}{BFfBFf}3210{{AE`Ef}{{j{Eh}}}}{{BFfEf}BFf}{{BEjEf}{{j{Eh}}}}{{cEl}BFf{{Hb{{Aj{BFf}}}}}}{{AE`{Aj{An}}El}{{Bb{{j{Eh}}B`}}}}{AEb{{Bb{{j{Eh}}B`}}}}6{BEj{{Bb{{j{Eh}}B`}}}}{cBFf{{ALl{BFf}}}}``{BFfBHb}{eAJh{}{{Gd{}{{Cb{c}}}}}}0{{AChe}AJj{}{{Gd{}{{Cb{c}}}}}}0`{{{BHf{c}}}{{Bb{B@jB`}}}BHh}{BGbACj}{BEjACj}{BHjACj}{BGdACj}{BBnACj}30{BHl{{j{Af}}}}{{BHn{C`{Ad}}d}{{Bb{{Il{IjIh}}B`}}}}{{BHn{C`{Ad}}}{{Bb{{Il{IjIh}}B`}}}}{{BHn{C`{Ad}}J`dd{C`{Ed}}{j{Ab}}}{{Bb{{Il{JbIn}}B`}}}}{{BHn{C`{Ad}}J`d{C`{Ed}}{j{Ab}}}{{Bb{{Il{JbIn}}B`}}}}{BI`{{C`{BFf}}}}{{{ADb{c}}}BIb{BIdMn}}{BIf{{j{h}}}}{BI`{{C`{BIh}}}}{{{ADb{ce}}}{}MnBFn}{{{ADb{c}}}KnBIj}{BIlBFf}{{{ADb{ce}}}cMnBFn}{AJlEb}{BInAn}{BEj{{Bb{FdB`}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{{Aj{c}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{BI`{{C`{BJ`}}}}{BJb{{C`{BJ`}}}}{BJd{{j{Ab}}}}{{{Fj{BFf}}}BFf}{{BHn{C`{Ad}}d}{{Bb{{Il{JlIn}}B`}}}}{{{ADb{{BJf{c}}e}}}{{ADb{ce}}}{}BFn}{{{ADb{{Aj{{BJf{c}}}}e}}}{{ADb{{Aj{c}}e}}}{}BFn}{AdBFf}{{BFf{C`{Lf}}}BFf}{BJh{{Bb{{j{Ab}}B`}}}}{BJh{{j{Ab}}}}{{{Il{JbIn}}J`AIn}{{Il{JhIn}}}}`{{{BJj{c}}B@`}{{Bb{{BJl{c}}B`}}}BJn}{{{BK`{c}}B@`}{{Bb{{BKb{c}}B`}}}BJn}{{{BKd{c}}Fd}{{Bb{BKfB`}}}BFd}{{{BKh{c}}B@`}{{Bb{{BKj{c}}B`}}}BJn}{{{BF`{c}}}{{Bb{BKlB`}}}BFd}{{{BF`{c}}}{{Bb{BKnB`}}}BFd}{{{BF`{{Cf{BFd}}}}{C`{{ADb{B@`}}}}}{{Bb{BL`B`}}}}{{{BF`{{Cf{BFd}}}}{C`{{ADb{B@`}}}}}{{Bb{BLbB`}}}}`{BFfBLd}{{BFfBLfBFf}BFf}{{BEjAn}{{Bb{AnB`}}}}00{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{ADb{ce}}}cMnBFn}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{BB`LfcEl}BB`{{Hb{{Aj{BFf}}}}}}{BBn{{Cf{Cd}}}}```{BB`BB`}```{{BLhAd}{{Bb{EdB`}}}}{{BLj{Fj{BFf}}}{{Bb{BFfB`}}}}{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{BHj{Aj{An}}}{{Bb{{C`{An}}B`}}}}{{BLlAnAn}{{Bb{AnB`}}}}{{BLj{Fj{BFf}}}BFf}{BLnb}{{BFfEb}BFf}{{AEdEb}{{Bb{AnB`}}}}{{AKnEb}{{Bb{AnB`}}}}{{BEjEb}{{Bb{AnB`}}}}{{BB`{BM`{AdEbNd}}d}BB`}4{{BB`Ebd}BB`}4`{BFfBMb}{{{ADb{c}}}{{C`{AI`}}}{AI`Mn}}{BFfBFf}{BMd{{Bb{AnB`}}}}1```{BMf{{Bb{{j{Ih}}B`}}}}{{B@jB@j{C`{{Aj{Ed}}}}Ad}{{Bb{bB`}}}}{{B@`B@`{C`{{Aj{Ed}}}}Ad}{{Bb{bB`}}}}0``{{BMhAn}{{Bb{AnB`}}}}{{BEjAn}{{Bb{AnB`}}}}{{BMhc}{{Bb{AnB`}}}A`}{BEj{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}`{BEj{{Fj{{Cf{Cd}}}}}}0{{AnAnAn}{{Bb{AnB`}}}}{{BFfBFfBFf}BFf}{{AnAn}{{Bb{AnB`}}}}{{BFfBFf}BFf}10{BMjBMj}{BA`BA`}{BBfBBf}{BMlBMl}{ANdANd}{BMnBMn}{BN`BN`}{BNbBNb}{BNdBNd}{OfOf}{N`N`}{BNfBNf}{BNhBNh}{BFbBFb}{BNjBNj}{BNlBNl}{BNnBNn}{BO`BO`}{BObBOb}{BOdBOd}{BOfBOf}{BOhBOh}{BLnBLn}{BB`BB`}{BOjBOj}{BFlBFl}{BOlBOl}{BEhBEh}{BOnBOn}{C@`C@`}{C@bC@b}{C@dC@d}{C@fC@f}{C@hC@h}{BGfBGf}{C@jC@j}{C@lC@l}{C@nC@n}{BGdBGd}{CA`CA`}{CAbCAb}{CAdCAd}{CAfCAf}{CAhCAh}{CAjCAj}{BIlBIl}{BFfBFf}{CAlCAl}{BLfBLf}{{{BGj{c}}}{{BGj{c}}}AAn}{CAnCAn}{BGnBGn}{CB`CB`}{CBbCBb}{CBdCBd}{CBfCBf}{CBhCBh}{CBjCBj}{CBlCBl}{BLjBLj}{CBnCBn}{CC`CC`}{CCbCCb}{CCdCCd}{CCfCCf}{CChCCh}{CCjCCj}{{{ADb{ce}}}{{ADb{ce}}}Mn{BFnAAn}}{CClCCl}{MjMj}{BBjBBj}{B@`B@`}{BBnBBn}{AM`AM`}{B@jB@j}{MfMf}{CCnCCn}{CD`CD`}{CDbCDb}{BEj{{ADb{BEj}}}}{{ce}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000`````{CDd{{C`{CDf}}}}``{{ANdANd}ANb}{{{ADb{ce}}{ADb{ce}}}ANb{CDhMn}BFn}{{{Aj{BFf}}}BFf}{{{Aj{An}}}{{Bb{AnB`}}}}{AdBFf}{BB`{{Bb{ANjB`}}}}{c{{Bb{{Fj{ANj}}B`}}}{{Hf{}{{Cb{BB`}}}}}}{ALhe{}{{AJh{c}}AHl}}0{{ALhACh}e{}{{AJj{c}}AHl}}0{{ABdAd}{{j{c}}}D`}{{ABf{j{c}}}{{j{c}}}D`}10{{ABfAdEb}{{j{c}}}D`}0{BB`{{Bb{BLnB`}}}}{cBFf{{BBb{Ed}}}}{{CClFd}CDj}`{{BEn{Fj{Ad}}{C`{Ad}}d}{{Bb{ANjB`}}}}{{ce}ANb{}{}}0``{{cBOf}{{Bb{BB`B`}}}{{Hb{{Aj{BB`}}}}}}{{BJh{j{Ab}}}{{j{Ab}}}}{{ed}{{Bb{BFfB`}}}{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}{{CDd{Fj{BB`}}}{{Bb{BB`B`}}}}{{C@j{Fj{BB`}}}{{Bb{BB`B`}}}}44{e{{Bb{BFfB`}}}{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}{{cAdd}BFf{{Hb{{Aj{BFf}}}}}}{{BHbc}BFf{{ALl{BFf}}}}{{CDl{Aj{Ah}}}{{j{Al}}}}{{BJhAdd}{{Bb{{j{Al}}B`}}}}{{BHdc}BFf{{ALl{BFf}}}}{{B@`Ad}d}{{CDl{j{Af}}}{{j{Al}}}}{{BJh{j{Ab}}dd}{{Bb{{j{Al}}B`}}}}{{BJhAd}{{Bb{{j{Al}}B`}}}}{{CdACh}{{Cf{Cd}}}}{{AnFd}{{Bb{{j{Eh}}B`}}}}{BB`BB`}{BFfBFf}{{BJhAdd}{{Bb{{j{Eh}}B`}}}}{{BJh{j{Ab}}d}{{Bb{{j{Eh}}B`}}}}{{CDnAh{C`{Ah}}{C`{BFb}}Ahd}{{Bb{FdB`}}}}{{{AKh{Ad}}}Eb}{{BEf{Aj{N`}}d}ANj}{{CE`c}{{Cf{CEb}}}BJn}{{CEdc}{{Cf{CEb}}}BJn}`{{CEfANj{C`{Ad}}{C`{{Gb{FnFd}}}}}{{Bb{ANjB`}}}}{{BB`BB`}BB`}{{CEfANj{C`{{Gb{FnFd}}}}d}{{Bb{{Gb{ANjANj}}B`}}}}{{And}{{Bb{AnB`}}}}{{BFfd}BFf}{{BFfced}BFf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Hb{{Aj{BFf}}}}}}212121{{ce}BFf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Hb{{Aj{BFf}}}}}}32{{CEhBFfFdd}BFf}`{BBnACh}{AM`ACh}```{{BFfBFfANdBMn{C`{J`}}{C`{Ed}}}BFf}`{CB`BFf}`11{AIlFn}00{CEj{{j{Ll}}}}{CEl{{j{Ll}}}}{BMf{{Bb{{j{Ll}}B`}}}}`{CEn{{j{In}}}}{ANdFn}`{ANdd}``{{}b}{cbBFn}{{}CE`}{{}BMj}{{}CEd}{{}BA`}{{}BBf}{{}BNb}{{}BNj}{{}BNl}{{}BNn}{{}BO`}{{}BOf}{{}BB`}{{}BOj}{{}BEh}{{}C@`}{{}C@b}{{}C@d}{{}C@f}{{}BGf}{{}C@l}{{}C@n}{{}CA`}{{}CAb}{{}BFf}{{}{{BGj{{ADb{BLl}}}}}}{{}{{BGj{{ADb{BGh}}}}}}{{}{{BGj{{ADb{CF`}}}}}}{{}CB`}{{}CBb}{{}CBf}{{}CBh}{{}CBj}{{}CBl}{{}CBn}{{}CCb}{{}CCd}{{}CCf}{{}CCh}{{}CCj}{{}{{ADb{c}}}CFb}{{}Mj}{{}BBj}{{}B@`}{{}AM`}{{}B@j}{{}Mf}`{{}{{Ob{{Fj{Of}}{Fj{N`}}}}}}{Fdc{}}0{{{AIh{c}}}{}{}}111111111111111111111111111111111111111111111111111111111111111111111111111{{{BGj{c}}}{}{}}2222222222222222222{{{ADb{ce}}}cMnBFn}3333333333333323333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333```{CAbEd}{BB`{{Bb{EdB`}}}}0{BB`Ed}02{{{ADb{c}}}Ad{AI`Mn}}``{{AnFnCFd}{{Bb{AnB`}}}}{{BHdFnCFd}BFf}{{BFfFnCFd}BFf}{{{BFh{}{{Db{c}}}}An}c{}}{{BFfBFf}}{{BFjAn}{{Bb{AnB`}}}}{{CAbEd{Gb{FdFd}}CFf{BM`{EdEdNd}}}{{Bb{bGh}}}}{{BFfc}BFf{{ALl{BFf}}}}{{{ADb{ACjc}}}{{Bb{{ADb{ec}}{ADb{ACjc}}}}}BFn{ACjHhHj}}{{{ADb{ACjc}}}{{ADb{ec}}}BFn{ACjHhHj}}{{{ADb{ce}}}{{CFh{ce}}}Mn{AAnBFn}}{Fdb}00000000000000000000000000000000000000000000000{BLnb}11{{BB`e}BB`{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}222222222222222222222222222222222222222222222{{{ADb{ce}}}bMnBFn}3333333333333{BFfBFf}{{BB`{C`{{Fj{BFf}}}}}BB`}1{BEjAn}{{{Il{JbIn}}J`AIn}{{Il{JhIn}}}}`{BFfCFj}{AKnEb}{BEjEb}`{EbBFf}{cBFf{{Hb{{Aj{Eb}}}}}}{CBbBFf}``{ce{}{{CFn{CFl}}}}0{{CDl{Aj{Ah}}}{{j{Al}}}}{{CDl{j{Af}}}{{j{Al}}}}{{BA`BA`}d}{{BBfBBf}d}{{ANdANd}d}{{BMnBMn}d}{{BN`BN`}d}{{BNbBNb}d}{{OfOf}d}{{BNfBNf}d}{{BNhBNh}d}{{BFbBFb}d}{{BNjBNj}d}{{BNlBNl}d}{{BNnBNn}d}{{BO`BO`}d}{{BObBOb}d}{{BOdBOd}d}{{BOhBOh}d}{{BOjBOj}d}{{BOlBOl}d}{{BEhBEh}d}{{BOnBOn}d}{{C@`C@`}d}{{C@bC@b}d}{{C@dC@d}d}{{C@fC@f}d}{{C@hC@h}d}{{C@lC@l}d}{{BIlBIl}d}{{BFfBFf}d}{{BFfc}BFf{{ALl{BFf}}}}{{CAlCAl}d}{{BLfBLf}d}{{{BGj{An}}{BGj{An}}}d}{{{BGj{{ADb{c}}}}{BGj{{ADb{c}}}}}dMn}{{CAnCAn}d}{{BGnBGn}d}{{CBdCBd}d}{{CBfCBf}d}{{CBhCBh}d}{{CBjCBj}d}{{CBlCBl}d}{{CC`CC`}d}{{CCbCCb}d}{{CCdCCd}d}{{CCfCCf}d}{{CChCCh}d}{{CCjCCj}d}{{{ADb{Cd}}Cd}d}{{{ADb{CG`}}CG`}d}{{{ADb{ce}}{ADb{ce}}}d{CGbMn}BFn}{{BBjBBj}d}{{B@`B@`}d}{{BBnCd}d}{{BBnBBn}d}{{AM`AM`}d}{{B@jB@j}d}{{MfMf}d}{{CDbCDb}d}{{BFfc}BFf{{ALl{BFf}}}}{{{AEh{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CGdBFfd}BFf}{{BI`ANjCGf}{{Bb{AnB`}}}}{{BJbANj}{{Bb{AnB`}}}}{{BI`ANjBhCGf}{{Bb{CGhB`}}}}{{BIhANjBhCGf}{{Bb{AnB`}}}}``{{BFfc}BFf{{BBb{Ed}}}}{{BFfc}BFf{{Hb{{Aj{Eb}}}}}}{{ce}{{Bb{gAOl}}}{}CGj{}}{{BB`d}{{Bb{EdB`}}}}{AEj{{Bb{AnB`}}}}{{BB`e}BB`{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}{BFfBFf}{AEj{{Bb{{Gb{An{G`{Fn}}}}B`}}}}``{{BFfBFfBFf}BFf}{CE`CDn}{CEdCDn}{{BJh{j{Ab}}Fd}{{Bb{{j{Ab}}B`}}}}{N`{{Gb{LfLf}}}}{{BJhAd}{{Bb{{j{h}}B`}}}}{{BJh{j{Ab}}}{{Bb{{j{h}}B`}}}}{{BJhAdEb}{{Bb{AnB`}}}}{A@jd}``{BLn{{C`{{Bb{ANjB`}}}}}}{{BB`Fd}{{Bb{ANjB`}}}}{BLn{{Bb{ANjB`}}}}{A@jMh}{BEj{{Dh{Mh}}}}{{CGlFn}BFf}{{CGlAd}BFf}{BBn{{Aj{AM`}}}}```{{BB`c}BB`{{ALl{BFf}}}}{{BFfc}BFf{{ALl{BFf}}}}`10{{BFfAEf}BFf}{{AElc}{{Bb{AElB`}}}{}}{{AEn{j{Al}}}{{Bb{{j{c}}B`}}}D`}{{BEj{j{Al}}}{{Bb{AnB`}}}}{{BB`BFf}BB`}5{{B@jc}B@j{{Dd{FdAM`}{{Db{d}}}}}}{{BIhAnBhCGf}{{Bb{AnB`}}}}{{BJhAdd}{{Bb{{j{Eh}}B`}}}}{{BJh{j{Ab}}dd}{{Bb{{j{Eh}}B`}}}}{{BJhAd}{{Bb{{j{Eh}}B`}}}}{CGn{{Bb{ANjB`}}}}{{CEbANj}{{Bb{bB`}}}}{A@l{{j{c}}}D`}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{BG`BB`}{{{BF`{c}}}{{Bb{ANjB`}}}BFd}{{{BJj{c}}ANj}{{Bb{bB`}}}BJn}{{{CH`{c}}}{{Bb{ANjB`}}}BFd}{{{BHf{c}}}{{Bb{ANjB`}}}BHh}{{{CHb{c}}ANj}{{Bb{bB`}}}BJn}{{{BK`{c}}ANj}{{Bb{bB`}}}BJn}{{{CHd{c}}ANj}{{Bb{bB`}}}BJn}{{{CHf{c}}}{{Bb{ANjB`}}}BFd}{{{CHh{c}}}{{Bb{ANjB`}}}BFd}{{{BKd{c}}}{{Bb{ANjB`}}}BFd}{{{BKh{c}}ANj}{{Bb{IfB`}}}BJn}{CDd{{Bb{BB`B`}}}}{A@j{{j{h}}}}1{C@j{{Bb{BB`B`}}}}{BGd{{Bb{BB`B`}}}}{{{CH`{c}}{C`{{ADb{CHj}}}}d}{{Bb{ANjB`}}}BFd}{{BKfFd}d}{{}BFf}{BHdBFf}{BB`BB`}{BFfBFf}`0``{{}{{BGj{{ADb{BGh}}}}}}{BMd{{Bb{AnB`}}}}2{{BFfBFf}BFf}{{AnAn}{{Bb{AnB`}}}}{{{ADb{CHl}}}{{Bb{bAOl}}}}{{BHjGf}{{Bb{bGh}}}}{{BLlGf}{{Bb{bGh}}}}{{BLhGf}{{Bb{bGh}}}}{{BA`Gf}{{Bb{bGh}}}}{{BBfGf}{{Bb{bGh}}}}{{BMlGf}{{Bb{bGh}}}}{{ANdGf}{{Bb{bGh}}}}0{{BMnGf}{{Bb{bGh}}}}{{BN`Gf}{{Bb{bGh}}}}{{BNbGf}{{Bb{bGh}}}}{{OfGf}{{Bb{bGh}}}}{{N`Gf}{{Bb{bGh}}}}{{BI`Gf}{{Bb{bGh}}}}{{BNfGf}{{Bb{bGh}}}}{{BNhGf}{{Bb{bGh}}}}{{BGbGf}{{Bb{bGh}}}}{{BFbGf}{{Bb{bGh}}}}{{CHnGf}{{Bb{bGh}}}}{{BNjGf}{{Bb{bGh}}}}{{BNlGf}{{Bb{bGh}}}}{{BNnGf}{{Bb{bGh}}}}{{BO`Gf}{{Bb{bGh}}}}{{BObGf}{{Bb{bGh}}}}{{BOdGf}{{Bb{bGh}}}}{{BOhGf}{{Bb{bGh}}}}{{BOjGf}{{Bb{bGh}}}}{{BOlGf}{{Bb{bGh}}}}{{CGhGf}{{Bb{bGh}}}}{{BEhGf}{{Bb{bGh}}}}{{BOnGf}{{Bb{bGh}}}}0{{C@`Gf}{{Bb{bGh}}}}0{{C@bGf}{{Bb{bGh}}}}{{C@dGf}{{Bb{bGh}}}}{{C@fGf}{{Bb{bGh}}}}{{C@hGf}{{Bb{bGh}}}}{{C@lGf}{{Bb{bGh}}}}{{CAbGf}{{Bb{bGh}}}}{{BFfGf}{{Bb{bGh}}}}0{{CAlGf}{{Bb{bGh}}}}{{BLfGf}{{Bb{bGh}}}}0{{{BGj{c}}Gf}{{Bb{bGh}}}{}}{{CAnGf}{{Bb{bGh}}}}0{{BGnGf}{{Bb{bGh}}}}0{{CB`Gf}{{Bb{bGh}}}}{{CBbGf}{{Bb{bGh}}}}{{CBdGf}{{Bb{bGh}}}}{{CBfGf}{{Bb{bGh}}}}{{CBhGf}{{Bb{bGh}}}}{{CBjGf}{{Bb{bGh}}}}{{CBlGf}{{Bb{bGh}}}}{{BLjGf}{{Bb{bGh}}}}{{CBnGf}{{Bb{bGh}}}}{{CC`Gf}{{Bb{bGh}}}}{{CCbGf}{{Bb{bGh}}}}{{CCdGf}{{Bb{bGh}}}}{{CCfGf}{{Bb{bGh}}}}{{CChGf}{{Bb{bGh}}}}{{CCjGf}{{Bb{bGh}}}}{{{ADb{ce}}Gf}{{Bb{bGh}}}{AOnMn}BFn}{{{ADb{ce}}Gf}{{Bb{bGh}}}{AClMn}BFn}{{{ADb{ce}}Gf}{{Bb{bGh}}}MnBFn}{{CClGf}{{Bb{bGh}}}}{{BBjGf}{{Bb{bGh}}}}{{B@`Gf}{{Bb{bGh}}}}{{BBnGf}{{Bb{bGh}}}}{{AM`Gf}{{Bb{bGh}}}}{{B@jGf}{{Bb{bGh}}}}{{MfGf}{{Bb{bGh}}}}{{CCnGf}{{Bb{bGh}}}}{{CD`Gf}{{Bb{bGh}}}}{{CDbGf}{{Bb{bGh}}}}{{AdBCd}Ed}````{{BFfce}BFf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Hb{{Aj{BFf}}}}}}{{BG`d}BG`}``{{Adc}{{Bb{BFfB`}}}{{Hb{{Aj{BFf}}}}}}{{BFf{C`{Lf}}}BFf}{cc{}}000000000000000000000000000000{LfOf}1111111111111111111{BFlBB`}{CAbBB`}33333{BOnBEh}4444444444444444444{LfBFf}{LjBFf}{LnBFf}{dBFf}{KnBFf}9{AhBFf}{LbBFf}{BIlBFf}{IdBFf}{KjBFf}{FnBFf}{IfBFf}{AdBFf}{cc{}}00{CI`{{BGj{{ADb{BHj}}}}}}{CIb{{BGj{{ADb{BHj}}}}}}{CId{{BGj{{ADb{BHj}}}}}}{BGn{{BGj{{ADb{BHj}}}}}}{CIf{{BGj{{ADb{BHj}}}}}}{CAn{{BGj{{ADb{BHj}}}}}}{CIh{{BGj{{ADb{BHj}}}}}}{CIj{{BGj{{ADb{BHj}}}}}}{CIl{{BGj{{ADb{BHj}}}}}}{CIn{{BGj{{ADb{BHj}}}}}}:{CIhBGn};{CIdBGn}{CAnBGn}{CI`BGn}>>>>>{CBlCBj}??????????{CJ`{{ADb{CJ`}}}}{CJb{{ADb{CJd}}}}{{{Nj{c}}}{{ADb{{Aj{c}}}}}{}}{CDn{{ADb{CJf}}}}{cc{}}{CJhc{}}{Ed{{ADb{Ad}}}}{CJj{{ADb{CJ`}}}}{{{Cf{ce}}}{{ADb{ce}}}MnBFn}{c{{ADb{c}}}{}}{CJf{{ADb{CJf}}}}{{{Fj{ce}}}{{ADb{{Aj{c}}e}}}{}{BFnAAn}}{{{ADb{Ad}}}{{ADb{{Aj{Ah}}}}}}{{{Dh{c}}}{{ADb{c}}}{CJlMn}}{Ad{{ADb{Ad}}}}{CJd{{ADb{CJd}}}}{{{Aj{c}}}{{ADb{{Aj{c}}}}}AAn}<<<<{{{Aj{An}}}B@`}{B@jB@`}{{{ADb{B@j}}}B@`}?1{B@lB@`}1{cc{}}{CJnBBn}{CK`BBn}22{{{Fj{AM`}}}B@j}3333{{c{C`{Gn}}}CKb{}}{{{CKd{Fn}}{CKd{Ah}}{C`{Gn}}}CKf}{{{CKd{Fn}}{CKd{Ah}}{C`{Gn}}}CKh}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}00{c{{AIh{{j{e}}}}}{{Gd{}{{Cb{}}}}}l}{c{{AIh{{j{Al}}}}}{{Gd{}{{Cb{d}}}}}}{e{{ADb{{Aj{c}}}}}{}{{Gd{}{{Cb{c}}}}}}{eB@`{{ALl{Mh}}}{{Gd{}{{Cb{c}}}}}}{{gFd}{{CKj{Fn}}}Hb{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}0{e{{CKj{Fn}}}{{Gd{}{{Cb{{C`{d}}}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{{Ade}ABb{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gACh}{{CKj{Fn}}}BDj{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}763{{Ade}ABb{}{{Ch{}{{Cb{c}}}}}}{c{{AIh{{j{e}}}}}{{Hf{}{{Cb{}}}}}l}{e{{ADb{{Aj{c}}}}}Hh{{Hf{}{{Cb{c}}}}}}{c{{Bb{{BF`{CHl}}B`}}}{{ALl{CDn}}}}{c{{Bb{{CHh{CHl}}B`}}}{{ALl{CDn}}}}{{}{{ADb{c}}}Mn}{c{{ADb{ec}}}BFnMn}{{Ad{Aj{c}}}ABb{}}{{Ad{Aj{{C`{c}}}}}ABb{}}{Ad{{Bb{CKl}}}}{c{{AIh{{j{Al}}}}}{{Hl{}{{Cb{d}}}}}}{c{{AIh{{j{e}}}}}{{Hl{}{{Cb{}}}}}l}{Eb{{BGj{{ADb{BGh}}}}}}{{Adc}CKn{}}{{{Fj{c}}ACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Fj{c}}ACh}{{AHl{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}AAn{{Fl{}{{Cb{e}}}}HlHhHj}}`{{AdcFd}AF`{}}{{FdcACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AdFd}AFb}{{FdACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}`{{BFfc{BGj{{ADb{BGh}}}}CL`}BFf{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}`{{BFfc}BFf{{ALl{BFf}}}}{{BFfFdFd}BFf}{{{ADb{ce}}{ADb{ce}}}d{CLbMn}BFn}{{BEjFd}{{Bb{HnB`}}}}{{BHbBFfd}BFf}{{BHdBFfd}BFf}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}6{{B@`Ad}{{C`{Eb}}}}{{AFdFd}{{Bb{HnB`}}}}{{AKnFd}{{Bb{HnB`}}}}{{AFdFd}Hn}{{AKnFd}Hn}{{B@`Fd}{{C`{{Gb{{AMl{AMj}}Eb}}}}}}0{BMbBFf}{BB`CBn}{CC`Eb}{{}Eb}{{BNdFnBMn{C`{AIn}}}{{Bb{BMlB`}}}}00{{CF`B@`CLdMhMh}{{C`{Mh}}}}{{BGhB@`CLd{Aj{Mh}}}Mh}{{B@`Ad}{{C`{Mh}}}}{ACh{{Aj{AM`}}}}{CLfFd}{{B@`Ad}{{C`{{Gb{Fd{AMl{AMj}}Eb}}}}}}{{{BKd{c}}}{{Bb{{ADb{CCl}}B`}}}BFd}{{{ADb{ce}}}{{C`{c}}}MnBFn}{{{ADb{ce}}}cMnBFn}{CLh{{Fj{Ad}}}}{B@`{{Fj{Ad}}}}{B@j{{Fj{Ad}}}}{{BEjFd}{{C`{I`}}}}{{BEjFdFd}{{C`{I`}}}}{BHj{{C`{{BGj{{ADb{BGh}}}}}}}}{{BNdBMlBMnJ`{C`{AIn}}BNb}{{Bb{CLjB`}}}}{c{{Bb{CLlB`}}}{BHhBFdMn}}{{CHnB@`}{{Bb{{ADb{B@`}}B`}}}}{{cFd}{{Fj{{Gb{FdFd}}}}}{{Ch{}{{Cb{Fd}}}}}}{{AMnFd}Hn}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{BEjFd}Hn}{{BB`e}BFl{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}{{CLn{Fj{An}}BA`}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}{{BB`BFfcBA`}BFl{{Hb{{Aj{BFf}}}}}}2{{ANdANd{Aj{Fn}}BMnJ`{C`{AIn}}}{{Bb{{Fj{{Nj{Lf}}}}B`}}}}{{BNd{Aj{Fn}}BMnJ`{C`{Ed}}ddBNb}{{Gb{{Fj{{Nj{Lf}}}}{Fj{Fn}}{Fj{Fn}}}}}}{{BD`dd}{{Bb{BhB`}}}}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{BFfc}BFf{{ALl{BFf}}}}{{{ADb{ce}}{ADb{ce}}}d{CLbMn}BFn}21{{{BF`{c}}d}{{BF`{c}}}BFd}{{C@jd}C@j}{BEjd}{CM`d}`{{BA`c}bAFf}{{BBfc}bAFf}{{ANdc}bAFf}{{BMnc}bAFf}{{BN`c}bAFf}{{BNbc}bAFf}{{BNfc}bAFf}{{BNhc}bAFf}{{BFbc}bAFf}{{BNjc}bAFf}{{BNlc}bAFf}{{BNnc}bAFf}{{BO`c}bAFf}{{BObc}bAFf}{{BOdc}bAFf}{{BOhc}bAFf}{{BOjc}bAFf}{{BOlc}bAFf}{{BEhc}bAFf}{{BOnc}bAFf}{{C@`c}bAFf}{{C@bc}bAFf}{{C@dc}bAFf}{{C@fc}bAFf}{{C@hc}bAFf}{{C@lc}bAFf}{{BIlc}bAFf}{{BFfc}bAFf}{{CAlc}bAFf}{{BLfc}bAFf}{{CAnc}bAFf}{{BGnc}bAFf}{{CBdc}bAFf}{{CBfc}bAFf}{{CBhc}bAFf}{{CBjc}bAFf}{{CBlc}bAFf}{{CC`c}bAFf}{{CCbc}bAFf}{{CCdc}bAFf}{{CCfc}bAFf}{{CChc}bAFf}{{CCjc}bAFf}{{{ADb{ce}}g}b{CMbMn}BFnAFf}{{BBjc}bAFf}{{B@`c}bAFf}{{AM`c}bAFf}{{Mfc}bAFf}{{CDbc}bAFf}{{CMdAnC@`d}{{Bb{{Gb{{Gb{{Fj{Lf}}{Fj{Lf}}}}d}}B`}}}}{{CMdAnC@`d}{{Bb{{Gb{{AId{Lf}}{AId{Lf}}}}B`}}}}{{BHdBFf}BFf}{{BFl{C`{Fd}}}BB`}{{BFf{C`{Fd}}}BFf}{BJh{{Bb{{j{Ab}}B`}}}}{BJh{{j{Ab}}}}`{{{Aj{{j{Ab}}}}Add}{{Bb{{j{Ab}}B`}}}}{CMf{{j{Ll}}}}{CEl{{j{Ll}}}}{BMf{{Bb{{j{Ll}}B`}}}}`{CEn{{j{In}}}}`{{BG`BOn}BG`}``{OfLf}{{{Il{JbIn}}{j{Ab}}CDb{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{{{Il{JbIn}}{C`{Ad}}{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{BFfBFf}{AIld}{{{BJj{c}}d}{{BJj{c}}}BJn}``0`{{}b}{cb{AAnBFn}}``{{CLhAd}{{C`{Fd}}}}{{B@`Ad}{{C`{Fd}}}}{{B@jAd}{{C`{Fd}}}}{{{Aj{Lf}}}{{`{{Ch{}{{Cb{Fd}}}}}}}}{{{BF`{c}}{C`{Fd}}}{{BF`{c}}}BFd}{{{CHf{c}}{C`{Fd}}}{{CHf{c}}}BFd}{{{CHh{c}}{C`{Fd}}}{{CHh{c}}}BFd}`{{}Fd}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{A@j{{Cf{Cd}}}}{{CMhANjee}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{BB`BB`cc}BB`{{ALl{BFf}}}}{N`If}`{{B@`Fd{AMl{AMj}}Eb}{{Bb{{C`{Eb}}B`}}}}{{BFfBFfFnEb}BFf}{{BFfBFfBFf}BFf}`{{AnBOl}An}{{BFfBOl}BFf}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBn{{Gb{{Fj{AM`}}{Fj{{Cf{Cd}}}}{C`{Gn}}}}}}{{{AIh{c}}}c{}}{{{ADb{ce}}}{{C`{c}}}{}BFn}3{BFf}{B@`}{BBn}{CMjBHd}{BHdBHd}{{{ADb{ce}}}{}MnBFn}{B@bAn}{{{ADb{BEj}}}An}{CClCMl}{BBb{{Fj{c}}}{}}{{AnAnAnC@f}{{Bb{{j{Al}}B`}}}}{{BFfccC@f}BFf{{ALl{BFf}}}}{{ANd{C`{Ad}}}d}{BEjd}{B@`d}{B@jd}{BKfd}{BFfBFf}{An{{Bb{{j{Al}}B`}}}}{AFh{{Bb{{j{Al}}B`}}}}2{ANdd}{{AnAn}{{Bb{{j{Al}}B`}}}}{{BFfc}BFf{{ALl{BFf}}}}54{AFj{{Bb{{j{Al}}B`}}}}6{CEj{{j{Al}}}}{CEl{{j{Al}}}}{BMf{{Bb{{j{Al}}B`}}}}{BI`d}:::{BEj{{j{Al}}}};;0{N`d}<{Ofd}`{And}{{{ADb{CHl}}}d}{{}d}{{CMnEf}{{Bb{dB`}}}}{cd{}}03?{CEj{{j{Ih}}}}{CEl{{j{Ih}}}}{BMf{{Bb{{j{Ih}}B`}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{AD`{cgACn}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{B@`{{`{{Ch{}{{Cb{{Gb{{AMl{AMj}}Eb}}}}}}}}}}{BBn{{AD`{{Fj{{Cf{CG`}}}}CN`ACn}}}}{B@`{{`{Jj}}}}000{CDd{{Bb{{C`{{Cf{Ch}}}}B`}}}}{{BHbBFfd}BFf}{{BHdBFfd}BFf}{{CMhANjeeBEh}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{BB`BB`ccBEh}BB`{{Hb{{Aj{BFf}}}}}}{{CNbANjAdAdC@d{C`{Hn}}{C`{Ed}}}{{Bb{ANjB`}}}}{{CNdANjAdAdeeC@d{C`{Hn}}}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{BB`BG`}{{CNfAdd}{{Bb{{j{Ab}}B`}}}}{{CNf{j{Ab}}d}{{Bb{{j{Ab}}B`}}}}{{BG`d}BG`}`{CGlBFf}{CNhBFf}{CCl{{C`{{Fj{CNj}}}}}}``{{}BFf}{BHdBFf}{BB`BB`}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{BFfBFf}{CNlBB`}3{{{ADb{ce}}{ADb{ce}}}d{CLbMn}BFn}`{{CMhANjee}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{BB`BB`cc}BB`{{ALl{BFf}}}}{{BG`c}BG`{{Hb{{Aj{BFf}}}}}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}<{BEjFd}<9{B@`Fd}{BBnFd}{B@jFd}{{BB`Lf}BB`}{{BEjFd}An}{BKfd}`{BFfBHd}{cBFfCNn}{CNnBFf}{CO`BFf}{CC`BFf}{{BFfc}BFf{{ALl{BFf}}}}0``{{{BF`{c}}d}{{BF`{c}}}BFd}{{{CHh{c}}d}{{CHh{c}}}BFd}{{C@jd}C@j}{{BGdd}BGd}`{BFfBFf}{CNf{{j{Eh}}}}0{{CNf{Aj{An}}}{{Bb{{j{h}}B`}}}}{{CNfFnCFd}{{Bb{{j{h}}B`}}}}{{CNfFnd}{{Bb{AnB`}}}}{{CNf{j{Ab}}d}{{Bb{{j{Ab}}B`}}}}4{CNf{{Bb{AnB`}}}}{CNfAn}01{CNf{{Bb{{j{Eh}}B`}}}}{CNf{{j{h}}}}{{CNfAn}{{Bb{{j{h}}B`}}}}{{CNfFnFd}{{j{h}}}}{{CNfEf}{{Bb{{j{h}}B`}}}}{{CNfAh}An}7{CNf{{Bb{{j{h}}B`}}}}01{{{AEh{}{{Cb{c}}}}e}c{}{}}{{BFfc}BFf{{ALl{BFf}}}}{{{ADb{ce}}{ADb{ce}}}d{CLbMn}BFn}21``````{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{{ADb{ce}}}cAAn{BFnAAn}}{{CNhc}BFf{{Dd{Ad}{{Db{{Bb{EdB`}}}}}}HhHj}}{{BB`cCBn{C`{{ADb{CHn}}}}{C`{Ad}}}BB`{{Dd{ANj}{{Db{{Bb{ANjB`}}}}}}HhHj}}{{BFfc{BGj{{ADb{BGh}}}}}BFf{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFfBFfc{BGj{{ADb{BGh}}}}}BFf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFfc}{{Bb{BFfB`}}}{{Dl{BFf}{{Db{{Bb{BFfB`}}}}}}}}{{CLf{C`{Ed}}}{{Bb{MhB`}}}}{{CLfc}{{Bb{MhB`}}}{{Oh{Eb}{{Db{Eb}}}}}}{c{{BGj{{ADb{BGh}}}}}{{Dd{Eb}{{Db{Eb}}}}HhHj}}{c{{BGj{{ADb{BGh}}}}}{{Dd{{Aj{Eb}}}{{Db{Eb}}}}HhHj}}{{BFfc}BFf{{Dl{BFf}{{Db{BFf}}}}}}{c{{BGj{{ADb{BGh}}}}}{{Dd{Mh}{{Db{Mh}}}}HhHj}}{{CNh{ADb{Dd}}}BFf}{c{{BGj{{ADb{BGh}}}}}{{Dd{{Aj{Mh}}}{{Db{Mh}}}}HhHj}}:{{ce{BGj{{ADb{BGh}}}}}BFf{{Dd{{Aj{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{Hb{{Aj{BFf}}}}}}{{BFfc{Aj{BFf}}{BGj{{ADb{BGh}}}}}BFf{{Dd{{Aj{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFfBGn{Aj{BFf}}dd}BFf}2{CLf{{Bb{MhB`}}}}0000{{{C`{{Aj{Fd}}}}B@j{C`{{Aj{An}}}}{C`{COb}}}ANj}{{{C`{{Aj{Ed}}}}B@`{C`{{Aj{An}}}}d}{{C`{{Fj{Fd}}}}}}{AdBFf}{BHbBFf}{BHdBFf}{AFl{{C`{c}}}{}}{BB`{{Bb{BB`B`}}}}{BFfBFf}{COdAn}{BEj{{Bb{AnB`}}}}75{AFl{{C`{Kj}}}}43{BEj{{C`{Kj}}}}987{AFn{{C`{c}}}{}}651{COfAn}4{{BB`BBd}BB`}`{{{CH`{c}}d}{{CH`{c}}}BFd}{{B@`B@`}b}{{EbEb}{{Bb{EbB`}}}}{BOnd}````{CEn{{j{In}}}}`{BMf{{Bb{{j{Ih}}B`}}}}1`{AdBFf}{BHbBFf}{BHdBFf}{AFl{{C`{c}}}{}}{BB`{{Bb{BB`B`}}}}{BFfBFf}{COdAn}{BEj{{Bb{AnB`}}}}{AFl{{C`{{Gb{cc}}}}}{}}````{CMf{{j{Ll}}}}{CEl{{j{Ll}}}}{BMf{{Bb{{j{Ll}}B`}}}}`=``6{CEj{{j{Ll}}}}21`{{COh{C`{AIn}}}{{Bb{COhB`}}}}{{COj{C`{AIn}}}{{Bb{COjB`}}}}{ANdFn}{ANdd}{{{BFh{}{{Db{c}}}}An}c{}}{{ANdFn}ANd}{{BFfBFf}}{{BFjAn}{{Bb{AnB`}}}}``{BEjFd}{CDd{{C`{Fd}}}}{C@j{{C`{Fd}}}}{BGd{{C`{Fd}}}}````{{{BJj{c}}Fd}{{BJj{c}}}BJn}{BHbBFf}{BHdBFf}{AEb{{Bb{FdB`}}}}{BFfBFf}{BEj{{Bb{FdB`}}}}{BEjAd}{BFfCNh}````33`{CMf{{j{Ih}}}}{CEl{{j{Ih}}}}{BMf{{Bb{{j{Ih}}B`}}}}{CEn{{j{In}}}}{ANdFn}`{{{ADb{ce}}{ADb{ce}}}d{CGbMn}BFn}{C@`d}{BFf}{An{{Bb{AnB`}}}}0{ANdd}{{COlFd}{{C`{Fd}}}}{{BFfc}BFf{{ALl{BFf}}}}0{CLf{{Bb{MhB`}}}}{{}c{}}{cCGnBHh}{cCEbBJn}2{{Adc}COn{}}{c{{AIh{c}}}{}}{BB`BG`}{c{{BF`{c}}}BFd}{c{{BJj{c}}}BJn}{{{Aj{Mh}}}CLf}{c{{CH`{c}}}BFd}{c{{BHf{c}}}BHh}{c{{CHb{c}}}BJn}{{}CE`}{c{{BK`{c}}}BJn}{{}CEd}{c{{CHd{c}}}BJn}{c{{CHf{c}}}BFd}{FnANd}{c{{CHh{c}}}BFd}{{ANdANdANd}BNd}{c{{BKd{c}}}BFd}{{D@`{ADb{CCl}}{ADb{B@j}}Fd{C`{{Fj{Fd}}}}{C`{{ADb{CHj}}}}{C`{COb}}Fdd{C`{{Fj{An}}}}BO`}{{Bb{BKfB`}}}}{c{{BKh{c}}}{BJnBJn}}{BOnBEh}{cC@j{{Hb{CJf}}}}{cBGd{{Hb{CJf}}}}{c{{BGj{c}}}{}}{{BFfBFfBFf}CB`}{{}CBb}{{Ad{Fj{Mh}}{BGj{{ADb{BGh}}}}c}BLjBHj}{c{{ADb{c}}}{}}{{}B@`}{{ACh{Fj{{Cf{Cd}}}}{C`{Gn}}}BBn}{{cAChd}AM`{{ALl{Ed}}}}{e{{ADb{c}}}{}{{Oh{{CFh{c}}}{{Db{c}}}}}}{AChBBn}{{AG`FdFd}{{j{c}}}D`}{{BEjFdFd}An}{{ce}{{ADb{ce}}}{}BFn}{{B@`Fd{AMl{AMj}}Eb}{{Bb{B@`B`}}}}{{FnAd}{{Bb{AnB`}}}}{Ed{{C`{BFb}}}}{{AChFd}BBn}{{{ADb{{Aj{CDn}}}}}C@j}{{{ADb{{Aj{CDn}}}}}BGd}{AhBFb}{{}{{ADb{{BJf{c}}}}}{}}{c{{ADb{{BJf{e}}c}}}BFn{}}{Fd{{ADb{{Aj{{BJf{c}}}}}}}{}}{{Fdc}{{ADb{{Aj{{BJf{e}}}}c}}}BFn{}}3210{CLjC`}{{BKfFd}{{Bb{{C`{{Fj{ANj}}}}B`}}}}{{BFf{BCb{BFf}}}b}0{BFfBFf}0{{{AEh{}{{Cb{c}}}}e}c{}{}}0`{{}Of}{{}N`}`{BEjFd}{BB`BB`}5``{{{BKd{c}}}{{Bb{FdB`}}}BFd}````{AEj{{Bb{{G`{Fn}}B`}}}}{{BG`c}BG`{{Hb{{Aj{BFf}}}}}}{{BB`{D@d{D@b}}{D@d{D@f}}}{{Bb{D@hB`}}}}`{{BFfc}BFf{{ALl{BFf}}}}{CEj{{j{Lh}}}}{CEl{{j{Lh}}}}{BMf{{Bb{{j{Lh}}B`}}}}{BMf{{Bb{{j{Ih}}B`}}}}{{CAfc}BFf{{ALl{BFf}}}}{{CAjc}BFf{{ALl{BFf}}}}{{CMhANjee}{{Bb{ANjB`}}}{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{BB`BB`cc}BB`{{ALl{BFf}}}}`{{BFfe}BFf{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}{{BFfeCBl}BFf{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}``{AdANd}{{Ad{Aj{Ad}}Ad}{{Il{IjIh}}}}{{Ad{Aj{Ad}}Ad}{{Il{JlIn}}}}{{Ad{Aj{Ad}}AdJ`}{{Il{JbIn}}}}`{{ANdANd}{{C`{ANb}}}}{{{ADb{ce}}{ADb{ce}}}{{C`{ANb}}}{CLbMn}BFn}{CDdCJf}{C@jCJf}{BGdCJf}{CDd{{Aj{CDn}}}}{C@j{{Aj{CDn}}}}{BGd{{Aj{CDn}}}}``{{}BFf}{c{{D@j{{ADb{c}}}}}{}}{{ce}{{D@j{{ADb{ce}}}}}{}BFn}````{{BFfc}BFf{{ALl{BFf}}}}````{{CNhAd}BFf}0{{ANjANjd}{{Bb{{Gb{{Ob{{Fj{Lf}}{Fj{N`}}}}{Ob{{Fj{Of}}{Fj{N`}}}}}}B`}}}}`{COdAn}{BFfBFf}{BB`{{Bb{{Gb{ANjANj}}B`}}}}``{{{ADb{c}}D@l}b{AI`Mn}}{{{ADb{ce}}{ADb{ce}}}dMnBFn}{{AdBFfMf}BFf}{{AFnKjMf}{{Bb{{C`{c}}B`}}}{}}{{BB`BFfMf}{{Bb{BB`B`}}}}{{BFfBFfMf}BFf}{{COfKjMf}{{Bb{AnB`}}}}{{BEjKjMf}{{Bb{AnB`}}}}{CEj{{j{Ll}}}}{CEl{{j{Ll}}}}{BMf{{Bb{{j{Ll}}B`}}}}{{ce}{{Bb{gAOl}}}{}CGj{}}``{{{BF`{c}}d}{{BF`{c}}}BFd}{{C@jd}C@j}{{D@nC@l{C`{If}}}An}{{BFfC@l{C`{If}}}BFf}{{{ADb{CHl}}{Aj{Ah}}}{{Bb{FdAOl}}}}{{{ADb{CHl}}DA`}{{Bb{bAOl}}}}`{{{BKd{c}}BO`}{{BKd{c}}}BFd}{{{ADb{CHl}}{Fj{Ah}}}{{Bb{FdAOl}}}}{{{ADb{CHl}}Ed}{{Bb{FdAOl}}}}{c{{Bb{eAOl}}}{}DAb}{{{ADb{CHl}}{Aj{DAd}}}{{Bb{FdAOl}}}}{CDdd}{BEjAn}{C@jd}{BGdd}```{{ce}BFf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Hb{{Aj{BFf}}}}}}{AGbAn}0{{{BFh{}{{Db{c}}}}An}c{}}{{BFfBFf}}{{BFjAn}{{Bb{AnB`}}}}{{B@`Ad}{{C`{Eb}}}}{{BEjAd}b}{{BB`ei}BB`{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}{{Hb{Ad}}}{{Gd{}{{Cb{g}}}}}}{{B@`Ad{AMl{AMj}}}{{C`{{AMl{AMj}}}}}}{{CGl{Fj{Ed}}}BFf}{{cBFf}BFf{{ALl{BFf}}}}{{An{j{Eh}}}{{Bb{{j{h}}B`}}}}{{BFfc}BFf{{ALl{BFf}}}}{{AnAnAnAn{C`{Eb}}}{{Bb{AnB`}}}}{{BJhAdAd}{{Bb{{j{Ab}}B`}}}}{{BFfcc{C`{c}}{C`{Eb}}}BFf{{ALl{BFf}}}}1{{CLf{C`{Eb}}}{{Bb{MhB`}}}}{{BJhAdAdFd}{{Bb{{j{Ab}}B`}}}}3{{{Il{JbIn}}{C`{Ad}}{j{Ab}}CDb}{{Bb{{Il{JbIn}}B`}}}}{{BFf{Aj{Fn}}}BFf}{CJfCDn}`{AGdAGd}{BEjAn}{BHbBFf}{BHdBFf}{BB`BB`}{BFfBFf}`{{BG`c}BG`{{Hb{{Aj{BFf}}}}}}{{CLn{Fj{An}}BBf}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}{{BB`BFfcBBf}BFl{{Hb{{Aj{BFf}}}}}}{{BFfBBf}BFf}{{AGfDdMj}{{Bb{AnB`}}}}{{BFf{ADb{Dd}}{BGj{{ADb{BGh}}}}Mj}BFf}{{BEjDdMj}{{Bb{AnB`}}}}{{BFfFdc}BFf{{Dl{{j{E`}}}{{Db{{C`{Kj}}}}}}HhHjDf}}{{DAfBMj}{{Bb{AnB`}}}}{{BFfDAh}BFf}100101{{BFfMfKjDAh}BFf}212121{{DAjANdANd{C`{AIn}}}{{Bb{DAjB`}}}}{{BMdLf}{{Bb{AnB`}}}}{{BFfLf}BFf}{{BNdFn{C`{AIn}}}{{Bb{FnB`}}}}0{{BMdKn}{{Bb{AnB`}}}}{{BFfKn}BFf}2````{CDd{{C`{COb}}}}{C@j{{C`{COb}}}}{BGd{{C`{COb}}}}`````{{CNf{j{h}}}{{j{h}}}}{{}{{BGj{{ADb{BGh}}}}}}{{BFfBFfdd{C`{If}}}BFf}0{{{BF`{c}}Fd}{{BF`{c}}}BFd}{{BGbDAl}{{Bb{ANjB`}}}}{{BGdDAl}{{Bb{ANjB`}}}}{{cC@n}{{Bb{BB`B`}}}{{Hb{CJf}}}}{{{ADb{{Aj{CDn}}}}C@n}{{Bb{BB`B`}}}}{{cCA`}{{Bb{BB`B`}}}{{Hb{CJf}}}}{{{ADb{{Aj{CDn}}}}CA`}{{Bb{BB`B`}}}}{{DAn{Aj{Lf}}e}{{Bb{AnB`}}}Df{{Gd{}{{Cb{{C`{c}}}}}}}}{{AGhc{C`{e}}}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lf}}}}}{}}{{AGhci}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lf}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}{{{CH`{c}}}{{Bb{{ADb{B@j}}B`}}}BFd}{{{BHf{c}}}{{Bb{B@`B`}}}BHh}{{{BKd{c}}}{{Bb{{ADb{B@j}}B`}}}BFd}{BKf{{ADb{B@j}}}}{{BGb{C`{Fd}}}{{Bb{{ADb{B@`}}B`}}}}{BB`{{Bb{{ADb{B@`}}B`}}}}{{BGd{C`{Fd}}}{{Bb{{ADb{B@`}}B`}}}}{CAb{{Bb{{Dh{{ADb{B@`}}}}B`}}}}{CClDB`}````{CMf{{j{Ll}}}}{CEl{{j{Ll}}}}{BMf{{Bb{{j{Ll}}B`}}}}`{CEn{{j{In}}}}`{{{ADb{CHl}}DBb}{{Bb{IfAOl}}}}{{BB`c}BB`{{Hb{{Aj{BFf}}}}}}0```{{AGh{j{Al}}{C`{c}}}{{Bb{AGhB`}}}{}}{{B@`AdEb}{{C`{Eb}}}}{{B@`FdEb}{{C`{Eb}}}}{{{BKd{c}}d}{{BKd{c}}}BFd}{{{BKh{c}}d}{{BKh{c}}}BJn}{{{CH`{c}}d}{{CH`{c}}}BFd}{{{BHf{c}}d}{{BHf{c}}}BHh}{{{CHf{c}}d}{{CHf{c}}}BFd}4{{CGnd}CGn}{{BFfIb}BFf}{{BBn{C`{Gn}}}b}{{AGjFn}{{j{c}}}D`}{{BEjFn}An}{{BHbBFf}BFf}{{BHdBFf}BFf}{{BB`c}BB`{{ALl{BFf}}}}{{BFfBFf}BFf}{{AGlFnc}{{j{e}}}{}D`}{{BB`ce}BB`{{ALl{BFf}}}{{ALl{BFf}}}}{{BFfce}BFf{{ALl{BFf}}}{{ALl{BFf}}}}{{B@`Ad}{{C`{Eb}}}}{{B@`Fd}{{C`{{Gb{{AMl{AMj}}Eb}}}}}}{BFfBFf}{A@lb}{BEjb}{{BFf{C`{If}}}BFf}``{{BB`CDnCCf}{{Bb{bB`}}}}{{BB`CDnCCd}{{Bb{bB`}}}}{{BB`CDnCCh}{{Bb{bB`}}}}{{BB`CDnCCb}{{Bb{bB`}}}}```{{BEjFnFd}An}{{BHdBFfBFf}BFf}{{BB`FnLf}BB`}={{BBnFdFd}b}0```{{AGnFdFd}AGn}{{cFdFd}e{}{}}1022{{BBnFdFd}BBn}0`{{AE`d}{{j{c}}}D`}{{BHbEf}BFf}{{BHdEf}BFf}{{BB`cEl}BB`{{BBb{{AMl{AMj}}}}}}{{BFfEf}BFf}{{BFfeEl}BFf{{ALl{BFf}}AAn}{{Hb{{Aj{c}}}}}}{{BB`cEl}BB`{{Hb{{Aj{BFf}}}}}}{{AE`Ef}{{j{c}}}D`}{{BEjEf}{{Bb{AnB`}}}}{{{ADb{c}}}{{C`{AI`}}}{AI`Mn}}{{BJh{j{Ab}}}{{j{h}}}}{{BJh{j{Ab}}Fd}{{Bb{AJbB`}}}}0{{{j{Ab}}{j{Ab}}e}{{j{h}}}{{Ch{}{{Cb{Ad}}}}}{{Dd{AdAd}{{Db{c}}}}}}2{{{j{Ab}}{j{Ab}}Fde}{{Bb{AJbB`}}}{{Ch{}{{Cb{Ad}}}}}{{Dd{AdAd}{{Db{c}}}}}}2{BFfBFf}`{{CDl{Aj{Ah}}}{{j{Al}}}}{{CDl{j{Af}}}{{j{Al}}}}`{{BHbAh}BFf}{{BHdAh}BFf}{{AH`Ah}{{C`{Kj}}}}{{BB`Ah}{{Bb{BB`B`}}}}{{BFfAh}BFf}{{BEjAh}{{C`{Kj}}}}{{DBdAh}An}{{BEjAh}{{Bb{AnB`}}}}{{LfLf}N`}{BFfDBf}{{{j{Ab}}Add}{{j{Ab}}}}{{BJhAn}{{Bb{{j{Ab}}B`}}}}{BJh{{j{Eh}}}}0{BJh{{j{Ab}}}}{{BJhAnAn}{{Bb{{j{Ab}}B`}}}}3````{{BMfAd}{{Bb{AnB`}}}}`{{BFfEb}BFf}`{{{j{Ab}}{j{Ab}}}{{j{Ab}}}}606060{{BJh{j{Ab}}}{{j{Ab}}}}10{{{ADb{ce}}}FdMnBFn}{BFfCGl}{{{BFh{}{{Db{c}}}}An}c{}}{{BFfBFf}}{{BFjAn}{{Bb{AnB`}}}}{{BG`c}BG`{{Hb{Ad}}}}{{CNhAd}BFf}{BEhAd}`1{AdBFf}{BHbBFf}{BHdBFf}{AFl{{C`{c}}}{}}{BB`{{Bb{BB`B`}}}}{BFfBFf}{COdAn}{{}{{BGj{{ADb{BGh}}}}}}{{ci}{{Bb{gAOl}}}{}{}{}{{Oh{e}{{Db{g}}}}}}{{BHdBFf}BFf}{{BB`Lf}BB`}{{BFl{C`{Fd}}}BB`}{{BFf{C`{Fd}}}BFf}{{AHbc}{{Bb{AHbB`}}}Mn}{{BEj{j{Eh}}}{{Bb{AnB`}}}}{{DBh{Aj{N`}}Ib}DBh}{{DBh{Aj{N`}}}DBh}{{BEj{Aj{Lf}}}{{Bb{AnB`}}}}{{BEj{Aj{Lf}}}An}{{AHdc}AHdMn}{{BEj{j{Eh}}}An}{BBn{{C`{Gn}}}}{{BFfBFfBFf}BFf}{{CAdc}CAf{{ALl{BFf}}}}{{CAhc}CAj{{ALl{BFf}}}}`{{BFfBFfANdBMn}BFf}```{{BMfJ`}{{Bb{{j{In}}B`}}}}{BB`{{Bb{{Gb{D@h{D@d{D@b}}{D@d{D@f}}}}B`}}}}{CAb{{Bb{{Gb{D@h{D@d{D@b}}{D@d{D@f}}}}B`}}}}1{CC`{{C`{Hn}}}}{{BHdFd}BFf}{{B@`d}B@j}{BBn{{Cf{Cd}}}}{AHf{{Fj{{Aj{Ah}}}}}}{{BB`d}{{Bb{EdB`}}}}{BFf{{Bb{EdB`}}}}{{DBj{C`{Ad}}d}{{Bb{ANjB`}}}}{{BEn{C`{Ad}}d}{{Bb{ANjB`}}}}{{BI`B@`}{{Bb{MhB`}}}}{{BFfB@`CLd}{{Bb{MhB`}}}}{{BJh{j{Eh}}d}{{Bb{{j{In}}B`}}}}{BHbBFf}{BJh{{j{Ab}}}}{CNhBFf}{Of{{C`{Lf}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000{BFfBFf}{CLf{{Bb{MhB`}}}}{{BMfAd}{{Bb{AnB`}}}}{cEd{}}0000000{{B@`B@`}{{Bb{dB`}}}}`887``{{BB`LfcEl}BB`{{Hb{{Aj{BFf}}}}}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{DBl{C`{AIn}}{j{Ab}}Ad}{{Bb{DBlB`}}}}{{ANdFn{C`{AIn}}ceg}{{Bb{FnB`}}}{{Dd{Fn}{{Db{Fn}}}}}{{Dd{Fn}{{Db{AIl}}}}}{{Dd{AIl}{{Db{Fn}}}}}}{{ANdFn{C`{AIn}}}{{Bb{FnB`}}}}{{BNdFn{C`{AIn}}}{{Bb{FnB`}}}}00010{{{BF`{c}}d}{{BF`{c}}}BFd}{{C@jd}C@j}32{g{{Bb{AJhe}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{AChg}{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALh{{Bb{eg}}}{}{{AJh{c}}AHl}{}}0{{ALhACh}{{Bb{eg}}}{}{{AJj{c}}AHl}{}}0{{ABdAd}{{Bb{{j{c}}e}}}D`{}}{{ABf{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABfAdEb}{{Bb{{j{c}}e}}}D`{}}0{c{{Bb{e}}}{}{}}0000000000000{DAh{{Bb{BMjB`}}}}111111111111111111111111111111111111111111111111111111111111111111111111111{Hn{{Bb{CC`B`}}}}222222{{{ADb{{Aj{c}}e}}}{{Bb{{ADb{{Nj{c}}e}}}}}{}BFn}333{BMj{{Bb{MjB`}}}}4444444444{CMl{{Bb{CClAOd}}}}{{B@`Ad}{{Bb{EbB`}}}}{{B@`Fd}{{Bb{{Gb{{AMl{AMj}}Eb}}B`}}}}{{B@`Ad}{{Bb{MhB`}}}}{{B@`Ad}{{Bb{{Gb{Fd{AMl{AMj}}Eb}}B`}}}}3{{CLhAd}{{Bb{FdB`}}}}::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::{{CLfc}{{Bb{MhB`}}}{{Oh{Eb}{{Db{{Bb{EbB`}}}}}}}}{{CLfc}{{Bb{MhB`}}}{{Oh{{Aj{Eb}}}{{Db{{Bb{EbB`}}}}}}}}{{BFfc}{{Bb{BFfB`}}}{{Dl{BFf}{{Db{{Bb{BFfB`}}}}}}}}{{CLfc}{{Bb{MhB`}}}{{Oh{Mh}{{Db{{Bb{MhB`}}}}}}}}{{COlFd}{{Bb{FdB`}}}}{Ah{{Bb{BObB`}}}}{Lf{{Bb{BOdB`}}}}{Kn{{Bb{BOhB`}}}}{c{{Bb{{ADb{c}}DBn}}}{}}{{ACh{Fj{{Cf{Cd}}}}{C`{Gn}}}{{Bb{BBnB`}}}}{{ce}{{Bb{{ADb{ce}}DBn}}}{}BFn}{{}{{Bb{{ADb{{BJf{c}}}}DBn}}}{}}{c{{Bb{{ADb{{BJf{e}}c}}DBn}}}BFn{}}10{c{{Bb{{D@j{{ADb{c}}}}DBn}}}{}}{{ce}{{Bb{{D@j{{ADb{ce}}}}DBn}}}{}BFn}{{BHj{Fj{Ah}}}{{Bb{bB`}}}}{{{ADb{ce}}}{{Bb{c{ADb{ce}}}}}{}BFn}```{cOd{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Ad}``{AEb{{Bb{{j{c}}B`}}}D`}{BHbBFf}{BHdBFf}{{BB`{C`{{Fj{Ed}}}}B@f}BB`}{BFfBFf}{BEj{{Bb{AnB`}}}}4321{{BB`e}BB`{{Hb{Ad}}}{{Gd{}{{Cb{c}}}}}}{{{ADb{{DC`{c}}}}}{{Bb{cb}}}Hh}{{{ADb{ce}}}cAAn{BFnAAn}}4{{DCbcAdANdANd}{{Bb{ANjB`}}}{{BBb{Ed}}}}0{{{BKd{c}}d}{{BKd{c}}}BFd}```{{BG`C@`}BG`}`{BBn{{C`{Gn}}}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}cAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{CMndd}{{Bb{ANjB`}}}}{{BFfdd}BFf}`2`{BBn{{Aj{{Cf{Cd}}}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}gAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{BBnCN`}{{BHbAh}BFf}{{BHdAh}BFf}{{AH`Ah}{{C`{Kj}}}}{{BB`Ah}{{Bb{BB`B`}}}}{{BFfAh}BFf}{{BEjAh}{{C`{Kj}}}}{{DBdAh}An}{{BEjAh}{{Bb{AnB`}}}}`{{DCdNd{Fj{If}}}{{Bb{bB`}}}}{{DCdNd{Aj{If}}}{{Bb{bB`}}}}`{{{ADb{{DC`{c}}}}g}{{Bb{eb}}}Hh{}{{Oh{c}{{Db{e}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{ADb{ce}}}FdMnBFn}{CEj{{j{Ll}}}}{CEl{{j{Ll}}}}{BMf{{Bb{{j{Ll}}B`}}}}210{BNb{{C`{Lf}}}}{ANdFn}`{ANdd}```{cCAd{{ALl{BFf}}}}{{CAfc}CAh{{ALl{BFf}}}}{{CAjc}CAh{{ALl{BFf}}}}````{{BG`BB`}BG`}{{CB`BFf}CB`}{{{BJj{c}}{DCf{Fd}}}{{BJj{c}}}BJn}{{{CHf{c}}{DCf{Fd}}}{{CHf{c}}}BFd}{{BGd{C`{{DCf{Fd}}}}}BGd}{{C@jd}C@j}{Fdc{}}0{FdB@`}{{{BF`{c}}Fd}{{BF`{c}}}BFd}{{{CHh{c}}{C`{{DCf{Fd}}}}}{{CHh{c}}}BFd}{{BB`BFf}BB`}{{B@`{AMl{AMj}}Eb}{{C`{Eb}}}}{{{BF`{c}}{C`{{Fj{Ed}}}}}{{BF`{c}}}BFd}{{{CH`{c}}{C`{{Fj{Ed}}}}}{{CH`{c}}}BFd}{{{BHf{c}}{C`{{Fj{Ed}}}}}{{BHf{c}}}BHh}{{{BKd{c}}{C`{{Fj{Ed}}}}}{{BKd{c}}}BFd}{{BB`c}BB`{{Hb{{Aj{BFf}}}}}}`0{{{BF`{c}}{C`{Ad}}}{{BF`{c}}}BFd}{{C@j{C`{Ad}}}C@j}{{{CHb{c}}{C`{BNn}}}{{CHb{c}}}{}}{{CE`{C`{BNn}}}CE`}{{{BK`{c}}{C`{BNn}}}{{BK`{c}}}BJn}{{CEd{C`{BNn}}}CEd}{{{BKh{c}}BOj}{{BKh{c}}}BJn}{{BB`c}BB`{{Hb{{Aj{BB`}}}}}}{{{BKh{c}}{C`{Fd}}}{{BKh{c}}}BJn}{{{BJj{c}}{C`{Ed}}}{{BJj{c}}}BJn}0{{CB`BFf}CB`}{{CBbBFf}CBb}{{CLfEb}{{Bb{MhB`}}}}{{C@j{C`{B@`}}}C@j}{{{BF`{c}}{C`{{ADb{B@`}}}}}{{BF`{c}}}BFd}{{{BF`{c}}{C`{{Aj{Eb}}}}}{{BF`{c}}}BFd}{{{BF`{c}}BNf}{{BF`{c}}}BFd}{{C@jBNf}C@j}{{{BF`{c}}Ah}{{BF`{c}}}BFd}{{C@jAh}C@j}{{CE`CDn}CE`}{{CEdCDn}CEd}{{{BJj{c}}{C`{Fd}}}{{BJj{c}}}BJn}{{CBbBFfBFfBFf}CBb}{{{BKd{c}}{C`{{Fj{An}}}}}{{BKd{c}}}BFd}{{CB`BFfBFfBFf}CB`}2?>{{{BF`{c}}d}{{BF`{c}}}BFd}{{{CHf{c}}d}{{CHf{c}}}BFd}{{{CHh{c}}d}{{CHh{c}}}BFd}{{C@jd}C@j}{{BGdd}BGd}{{C@j{C`{Fd}}}C@j}{{BGd{C`{Fd}}}BGd}{{{CHd{c}}DCh}{{CHd{c}}}BJn}{{{CHf{c}}DCh}{{CHf{c}}}BFd}{{{BJj{c}}Ed}{{BJj{c}}}BJn}{{AM`{DCj{EdEd}}}AM`}{{B@j{DCj{EdEd}}}B@j}{{CB`BFf}CB`}{{CBbBFf}CBb}010=:1{{CDdc}CDd{{ALl{{C`{Fd}}}}}}{{{BF`{c}}{C`{Fd}}}{{BF`{c}}}BFd}{{{CH`{c}}{C`{Fd}}}{{CH`{c}}}BFd}{{{BHf{c}}{C`{Fd}}}{{BHf{c}}}BHh}{{{CHh{c}}{C`{Fd}}}{{CHh{c}}}BFd}{{{BKd{c}}{C`{Fd}}}{{BKd{c}}}BFd}{{C@jc}C@j{{ALl{{C`{Fd}}}}}}?{{BGdc}BGd{{ALl{{C`{Fd}}}}}}?638<{{{BF`{c}}{C`{BNh}}}{{BF`{c}}}BFd}{{C@j{C`{BNh}}}C@j}{{BB`CBn}BB`}{{CDdCDn}CDd}{{{BF`{c}}{C`{e}}}{{BF`{c}}}BFd{{ALl{CDn}}}}{{{CHh{c}}{C`{e}}}{{CHh{c}}}BFd{{ALl{CDn}}}}{{C@jCDn}C@j}{{BGdCDn}BGd}{{CDd{ADb{{Aj{CDn}}}}}CDd}{{C@j{ADb{{Aj{CDn}}}}}C@j}{{BGd{ADb{{Aj{CDn}}}}}BGd}{{{CHb{c}}d}{{CHb{c}}}{}}{{{BK`{c}}d}{{BK`{c}}}BJn}{{{BF`{c}}{C`{{ADb{CHj}}}}}{{BF`{c}}}BFd}{{{BKd{c}}{C`{{ADb{CHj}}}}}{{BKd{c}}}BFd}{{BB`d}BB`}{{{BF`{c}}{C`{{Fj{Fd}}}}}{{BF`{c}}}BFd}{{{CH`{c}}{C`{{Fj{Fd}}}}}{{CH`{c}}}BFd}{{{BHf{c}}{C`{{Fj{Fd}}}}}{{BHf{c}}}BHh}{{{CHf{c}}{C`{{Fj{Ed}}}}}{{CHf{c}}}BFd}{{{BKd{c}}{C`{{Fj{Fd}}}}}{{BKd{c}}}BFd}5{{{BF`{c}}{C`{Ah}}}{{BF`{c}}}BFd}{{{BJj{c}}Ah}{{BJj{c}}}BJn}{{C@j{C`{Ah}}}C@j}{{{BJj{c}}BNj}{{BJj{c}}}BJn}{{CDdd}CDd}{{{BF`{c}}d}{{BF`{c}}}BFd}{{{CHh{c}}d}{{CHh{c}}}BFd}{{C@jd}C@j}{{BGdd}BGd}>{{{BKh{c}}{C`{Fd}}}{{BKh{c}}}BJn}{{CDdc}CDd{{ALl{{C`{COb}}}}}}{{{BF`{c}}{C`{COb}}}{{BF`{c}}}BFd}{{{CH`{c}}{C`{COb}}}{{CH`{c}}}BFd}{{{BHf{c}}{C`{COb}}}{{BHf{c}}}BHh}{{{BKd{c}}{C`{COb}}}{{BKd{c}}}BFd}{{BB`Ad{C`{Lf}}}BB`}{{C@jc}C@j{{ALl{{C`{COb}}}}}}{{C@j{C`{COb}}}C@j}{{BGd{C`{COb}}}BGd}{{BGdc}BGd{{ALl{{C`{COb}}}}}}{CLf{{Bb{MhB`}}}}{{{BF`{c}}{C`{{ADb{B@`}}}}}{{BF`{c}}}BFd}{{{CHf{c}}{ADb{B@`}}}{{CHf{c}}}BFd}{{{CHh{c}}{ADb{B@`}}}{{CHh{c}}}BFd}{{{BKd{c}}{C`{{ADb{B@j}}}}}{{BKd{c}}}BFd}{{C@j{C`{{ADb{B@`}}}}}C@j}{{BGd{C`{{ADb{B@`}}}}}BGd}{{C@jc}{{Bb{C@jB`}}}{{Dd{B@`}{{Db{{Bb{B@`B`}}}}}}}}{{{CHf{c}}B@`}{{CHf{c}}}BFd}{{{CHh{c}}B@`}{{CHh{c}}}BFd}{{CB`BFf}CB`}{{CBbBFf}CBb}{{{BF`{c}}Ah}{{BF`{c}}}BFd}{{{BJj{c}}Ah}{{BJj{c}}}BJn}{{C@jAh}C@j}{{BB`d}BB`}{{{BF`{c}}Fd}{{BF`{c}}}BFd}{{C@jFd}C@j}102{{{BKh{c}}d}{{BKh{c}}}BJn}3{{{BJj{c}}{C`{Ed}}}{{BJj{c}}}BJn}{{CB`J`}CB`}{{CB`{C`{Ed}}}CB`}{{{BF`{c}}d}{{BF`{c}}}BFd}{{C@jd}C@j}8{{BBn{C`{Gn}}}BBn}{{BBn{C`{Gn}}}{{Cf{Cd}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{C`{Gn}}}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}?{{CB`BFf}CB`}{BB`BB`}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}10{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}210213210210{{{ADb{CHl}}{Aj{Ah}}}{{Bb{FdAOl}}}}{{ce}{{Bb{FdAOl}}}{}DAb}{{{ADb{CHl}}{Aj{DCl}}}{{Bb{FdAOl}}}}{{BFfc}BFf{{ALl{BFf}}}}{CEj{{j{Ih}}}}{CEl{{j{Ih}}}}{BMf{{Bb{{j{Ih}}B`}}}}``{{AHh{j{Al}}{j{c}}}{{Bb{{j{c}}B`}}}D`}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{BC`c}An{{Dd{{Gb{Lf{BCb{Lf}}}}}{{Db{C`}}}}HhHj}}{{BC`c}An{{Dd{{Gb{Lf{BCb{Lf}}}}}{{Db{}}}}HhHj}}{{{Aj{{Nj{Lf}}}}c}An{{Dd{{Nj{Lf}}}{{Db{C`}}}}HhHj}}{{{Aj{{Nj{Lf}}}}c}An{{Dd{{Nj{Lf}}}{{Db{}}}}HhHj}}{{{Aj{c}}e{C`{{ADb{ACj}}}}}{{AId{c}}}{BDhBDj}{{Ch{}{{Cb{{Gb{LfLf}}}}}}Hl}}{{{Aj{c}}Gne{C`{{ADb{ACj}}}}}{{AId{c}}}{BDhBDj}{{Ch{}{{Cb{{Gb{LfLf}}}}}}Hl}}{{{j{c}}LfLf}{{j{c}}}D`}{{{Fj{{Nj{Lf}}}}{Aj{{Cf{Cd}}}}}d}{{BDlBh}An}{{BDnBDn}BDn}0``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AHj{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAd}{{j{k}}}D`D`{CdAHl}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAd}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AHn{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAd}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AI`{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAHl}AI`{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AIb{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIbD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAHl}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0``{DCn{{j{Eh}}}}0{{DCn{j{In}}d}{{Bb{AnB`}}}}{{DCn{j{Ab}}d}{{Bb{AnB`}}}}{DCnAn}{DCn{{Bb{AnB`}}}}1{DCn{{Bb{{j{Eh}}B`}}}}{DCn{{j{Bl}}}}{{DCnAn}{{Bb{AnB`}}}}{{DCnEf}{{Bb{{j{Bl}}B`}}}}{{DCnAh}{{Bb{AnB`}}}}5{DCn{{Bb{{j{h}}B`}}}}01{DD`{{j{Bl}}}}`{ce{}{}}0{{BLdBFf}BFf}{Fdc{}}0{Fdb}2{cc{}}{{}Fd}54{c{{Bb{e}}}{}{}}0{cOd{}}7`````````{{cf}b{}}{{BHn{C`{Ad}}d}{{Bb{{Il{IjIh}}B`}}}}{{BHn{C`{Ad}}}{{Bb{{Il{IjIh}}B`}}}}{{BHn{C`{Ad}}J`dd{C`{Ed}}{j{Ab}}}{{Bb{{Il{JbIn}}B`}}}}{{BHn{C`{Ad}}J`d{C`{Ed}}{j{Ab}}}{{Bb{{Il{JbIn}}B`}}}}{{BHn{C`{Ad}}d}{{Bb{{Il{JlIn}}B`}}}}==````{DAhDAh}{{ce}b{}{}}``{CEj{{j{Ll}}}}{CEl{{j{Ll}}}}{CEn{{j{In}}}}{{}DAh}{Fdc{}}0{Fdb}{{DAhDAh}d}{{DAhGf}{{Bb{bGh}}}}``{cc{}}{CMf{{j{Ll}}}}87{{}Fd}{ce{}{}}{CEj{{j{Al}}}}{CEl{{j{Al}}}}{CEj{{j{Ih}}}}{CEl{{j{Ih}}}}==``6>=?>{CMf{{j{Ih}}}}1>{CEj{{j{Lh}}}}{CEl{{j{Lh}}}}{{Ad{Aj{Ad}}Ad}{{Il{IjIh}}}}{{Ad{Aj{Ad}}Ad}{{Il{JlIn}}}}{{Ad{Aj{Ad}}AdJ`}{{Il{JbIn}}}}{CEj{{j{Ll}}}}{CEl{{j{Ll}}}}{{DAfBMj}{{Bb{AnB`}}}}000000?1{CEn{{j{In}}}}`>{c{{Bb{e}}}{}{}}0`{cOd{}}`{ce{}{}}`6565````>=````````{{cf}b{}}{{BHn{C`{Ad}}d}{{Bb{{Il{IjIh}}B`}}}}{{BHn{C`{Ad}}}{{Bb{{Il{IjIh}}B`}}}}{{BHn{C`{Ad}}J`dd{C`{Ed}}{j{Ab}}}{{Bb{{Il{JbIn}}B`}}}}{{BHn{C`{Ad}}J`d{C`{Ed}}{j{Ab}}}{{Bb{{Il{JbIn}}B`}}}}{DDb{{j{Ab}}}}{{BHn{C`{Ad}}d}{{Bb{{Il{JlIn}}B`}}}}77{DDdDDd}{{ce}b{}{}}{Fdc{}}0{Fdb}{{DDdDDd}d}{{ce}d{}{}}00{{DDdGf}{{Bb{bGh}}}}{cc{}}{{DDdc}bAFf}`{{}Fd}{ce{}{}}{{DDdAd}d}1{c{{Bb{e}}}{}{}}0{cOd{}}3````{{cf}b{}}44{{{DDf{c}}}{{DDf{c}}}{AAnl}}>==<8{Ad{{C`{DDd}}}}76`{{{DDf{c}}Ad}C`l}{{DDh{Aj{Ah}}{C`{J`}}}{{C`{c}}}{}}{{{DDf{Ih}}{Aj{Ah}}{C`{J`}}}{{C`{Kn}}}}{{{DDf{In}}{Aj{Ah}}{C`{J`}}}{{C`{Fn}}}}`:8{{c{C`{J`}}}{{Bb{{DDl{}{{DDj{e}}}}B`}}}{}{}}{{DDd{C`{J`}}}{{Bb{{DDf{Ih}}B`}}}}{{DDd{C`{J`}}}{{Bb{{DDf{In}}B`}}}};:=```````9===={CDfCDf}{{ce}b{}{}}{{}CDf}{Fdc{}}000{Fdb}0{{CDfCDf}d}{{DDnDDn}d}{{ce}d{}{}}00{{CDfGf}{{Bb{bGh}}}}{cc{}}0{Ad{{Bb{DDn}}}}{{Adg}{{Bb{CDfB`}}}{{Hb{Ad}}}{{ALl{Ed}}}{{Gd{}{{Cb{{Gb{ce}}}}}}}}{{CDfc}bAFf}{{}Fd}0{ce{}{}}0``0{c{{Bb{e}}}{}{}}000{cOd{}}022`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAJh{}{{Gd{}{{Cb{c}}}}}}0{{AChe}AJj{}{{Gd{}{{Cb{c}}}}}}0{AJlEb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{{Aj{c}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKnEb}{{Bb{AnB`}}}}`{ALhe{}{{AJh{c}}AHl}}0{{ALhACh}e{}{{AJj{c}}AHl}}0{{{AKh{Ad}}}Eb}{AKnEb}`{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{{{Fj{c}}ACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Fj{c}}ACh}{{AHl{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}AAn{{Fl{}{{Cb{e}}}}HlHhHj}}{{FdcACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{FdACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AKnFd}{{Bb{HnB`}}}}{{AKnFd}Hn}{{}Eb}{{AMnFd}Hn}4{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{AD`{cgACn}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{EbB`}}}}`{{}c{}}0{g{{Bb{AJhe}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{AChg}{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALh{{Bb{eg}}}{}{{AJh{c}}AHl}{}}0{{ALhACh}{{Bb{eg}}}{}{{AJj{c}}AHl}{}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}cAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}gAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{Fdc{}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{C`{Gn}}}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}```````````{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}=<`````````{{}b}0{{}d}{{{Il{JbIn}}{j{Ab}}CDb{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{{{Il{JbIn}}{C`{Ad}}{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{{{Il{JbIn}}{C`{Ad}}{j{Ab}}CDb}{{Bb{{Il{JbIn}}B`}}}}```{{c{C`{Gn}}}CKb{}}{{{CKd{Fn}}{CKd{Ah}}{C`{Gn}}}CKf}{{{CKd{Fn}}{CKd{Ah}}{C`{Gn}}}CKh}`{CFjBFf}{ce{}{}}0{{CFjJ`}BFf}2{{CFjBFfJ`}BFf}{{CFjEd}BFf}444{Fdc{}}0{Fdb}6{cc{}}7{{}Fd}78888888888{{CFj{C`{Ed}}BFfCDb}BFf}{{CFjcc}BFf{{Hb{Ad}}}}:{{CFjAd}BFf};90;;;;;;;{{CFjBFfEd}BFf}{c{{Bb{e}}}{}{}}0{cOd{}}=>><>`{{BE`ANjBh}{{Bb{AnB`}}}}{BE`{{Bb{AdB`}}}}`??{{}DE`}<<;{{DE`{C`{ACh}}}{{Bb{ABnB`}}}};:{ce{}{}}{DE`d}{{FdFd}DE`}{{DE`{Cf{Cd}}}b}{DE`b}::94`{{{j{c}}}Fdl}0{{IbIb}Ib}{{{j{Eh}}Lf}{{Bb{bB`}}}}{{{AId{Lf}}Lf}{{Bb{bB`}}}}{An{{Bb{AnB`}}}}{{AnBh}An}0{{AnAd}An}0`{{cf}b{}}{DEbACj}{DEb{{Cf{Cd}}}}1>>{DEbDEb}{{ce}b{}{}}{DEbACh}{{}DEb}{Fdc{}}0{Fdb}{{DEbFd}b}{{DEbGf}{{Bb{bGh}}}}{cc{}}{{}Fd}{ce{}{}}{DEbFd}{FdDEb}{DEbb}703{c{{Bb{e}}}{}{}}0{cOd{}}{DEb{{C`{DEd}}}}6````66666666<<<<<<<<;{BL`b}<<{BLbb}=::::99998888{{BKlFd}{{Bb{{C`{{Fj{ANj}}}}B`}}}}{{BL`Fd}{{Bb{{C`{{Fj{ANj}}}}B`}}}}{{BKnFd}{{Bb{{C`{{Fj{ANj}}}}B`}}}}{{BLbFd}{{Bb{{C`{{Fj{ANj}}}}B`}}}}{{{BF`{{Cf{BFd}}}}{ADb{B@`}}}BL`}{{{BF`{{Cf{BFd}}}}{ADb{B@`}}}BLb}::::::::9999>>>>````{{AIfcd}LfAHl}{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}``{DEfAn}{BMf{{Bb{{j{Ih}}B`}}}}{BMf{{Bb{{j{Ll}}B`}}}}0{BMf{{Bb{{j{Al}}B`}}}}22112{BMf{{Bb{{j{Lh}}B`}}}}322{{BMfAd}{{Bb{AnB`}}}}{{BMfJ`}{{Bb{{j{In}}B`}}}}1445`{{AGnFdFd}AGn}0`{{Fd{Fj{d}}}b}```11{{Fd{Aj{An}}El}{{Bb{{AIh{{j{Eh}}}}B`}}}}{{{Aj{An}}{Aj{d}}d}{{Bb{AIjB`}}}}{{Ad{Aj{An}}{Aj{d}}d}{{Bb{{j{Ej}}B`}}}}{{Ad{Aj{An}}}{{Bb{{j{Ej}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Aj{An}}}{{Bb{AIjB`}}}}{{{Aj{An}}}{{Bb{{j{Ej}}B`}}}}0```````````88``{BJd{{j{Ab}}}}{BJh{{Bb{{j{Ab}}B`}}}}{BJh{{j{Ab}}}}{{BJh{j{Ab}}}{{j{Ab}}}}{{BJhAdd}{{Bb{{j{Al}}B`}}}}{{BJh{j{Ab}}dd}{{Bb{{j{Al}}B`}}}}{{BJhAd}{{Bb{{j{Al}}B`}}}}{{BJhAdd}{{Bb{{j{Eh}}B`}}}}{{BJh{j{Ab}}d}{{Bb{{j{Eh}}B`}}}}{{BJh{j{Ab}}Fd}{{Bb{{j{Ab}}B`}}}}{{BJhAd}{{Bb{{j{h}}B`}}}}{{BJh{j{Ab}}}{{Bb{{j{h}}B`}}}}{{BJhAdEb}{{Bb{AnB`}}}}5{{BJh{j{Ab}}dd}{{Bb{{j{Eh}}B`}}}}{{BJhAd}{{Bb{{j{Eh}}B`}}}}=<{{{Aj{{j{Ab}}}}Add}{{Bb{{j{Ab}}B`}}}}{{BJhAdAd}{{Bb{{j{Ab}}B`}}}}0{{BJhAdAdFd}{{Bb{{j{Ab}}B`}}}}1{{BJh{j{Ab}}}{{j{h}}}}{{BJh{j{Ab}}Fd}{{Bb{AJbB`}}}}0{{{j{Ab}}{j{Ab}}e}{{j{h}}}{{Ch{}{{Cb{Ad}}}}}{{Dd{AdAd}{{Db{c}}}}}}2{{{j{Ab}}{j{Ab}}Fde}{{Bb{AJbB`}}}{{Ch{}{{Cb{Ad}}}}}{{Dd{AdAd}{{Db{c}}}}}}2{{{j{Ab}}Add}{{j{Ab}}}}{{BJhAn}{{Bb{{j{Ab}}B`}}}}{BJh{{j{Eh}}}}0{BJh{{j{Ab}}}}{{BJhAnAn}{{Bb{{j{Ab}}B`}}}}3{{{j{Ab}}{j{Ab}}}{{j{Ab}}}}404040{{BJh{j{Ab}}}{{j{Ab}}}}10{{BJh{j{Eh}}d}{{Bb{{j{In}}B`}}}}444````````{{eFdFd}{{DEh{Fn}}}{{Hb{Ad}}}{{Ch{}{{Cb{c}}}}}}{{eFdFd}{{DEj{Fn}}}{{Hb{{Aj{Ah}}}}}{{Ch{}{{Cb{c}}}}}}{{CLlAh{C`{Fd}}d{C`{B@`}}FdFd{C`{BFb}}{C`{Ah}}Ah{C`{BNh}}dd{C`{Fd}}}{{Bb{{Gb{B@`FdFd}}B`}}}}{{CLlAh{C`{Fd}}d{C`{B@`}}FdFd{C`{BFb}}{C`{Ah}}Ah{C`{BNh}}dAhd{C`{Fd}}}{{Bb{{Gb{B@`FdFd}}B`}}}}{{{Aj{Ah}}}d}```````````{{cf}b{}}0{BEj{{Bb{AnB`}}}}{{Ad{Fj{{Cf{Cd}}}}ACh}{{Bb{AnB`}}}}{{Ad{Fj{{Cf{Cd}}}}ACh{C`{{DCj{EdEd}}}}}{{Bb{AnB`}}}}{{Anc}{}{nKh}}{{AnAn}}10{{AnAn}{{Bb{AnB`}}}}{An{{C`{Fd}}}}0{{BEjEf}{{j{Eh}}}}{BEj{{Bb{{j{Eh}}B`}}}}`{An{{Bb{{j{Bl}}B`}}}}{{AnFd}{{Cf{Cd}}}}{BEjACj}0{An{{j{h}}}}{BEj{{j{c}}}D`}0{AnBEj}{AnAn}0{BEj{{Bb{FdB`}}}}{An{{Bb{FdB`}}}}{An{{Bb{{j{Af}}B`}}}}{An{{Bb{{j{Ej}}B`}}}}{{BEjAn}{{Bb{AnB`}}}}00{An{{Bb{{j{Al}}B`}}}}{ce{}{}}00000{{BEjEb}{{Bb{AnB`}}}}{{AnEb}{{Bb{AnB`}}}}0{An{{Bb{AJdB`}}}}5{{AnAn}{{Bb{AnB`}}}}{{Anc}{{Bb{AnB`}}}A`}{BEj{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}{BEj{{Fj{{Cf{Cd}}}}}}0{An{{Fj{{Cf{Cd}}}}}}?{IbIb}{AnAn}{BEj{{ADb{BEj}}}}{{ce}b{}{}}0{Anb}{An{{Bb{{Il{IjIh}}B`}}}}{An{{Bb{{Il{JbIn}}B`}}}}{An{{Bb{{Il{JfJd}}B`}}}}{{}An}{Fdc{}}0{An}1111{{AnAn}}0{{Anc}{}{nKh}}0{Fdb}00{BEjAn}{BEjEb}{An{{Bb{{Il{JhIn}}B`}}}}{{IbIb}d}{{AnAn}d}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{AnAd}{{Bb{{j{Al}}B`}}}}{{AnAn}{{Bb{{j{Al}}B`}}}}{{Anc}{{Bb{{j{Al}}B`}}}ALn}31{{Anc}{}ALn}{{AnAd}}66{{ce}d{}{}}00{AnFd}{An{{Bb{AnB`}}}}{{AnAn}{{Bb{AnB`}}}}{{AnHnFd}{{Bb{AnB`}}}}{An{{Bb{{j{Dn}}B`}}}}{An{{Bb{{j{E`}}B`}}}}{BEj{{Dh{Mh}}}}{{AnAEf}{{Bb{AnB`}}}}{{BEj{j{Al}}}{{Bb{AnB`}}}}{{An{j{Al}}d}{{Bb{AnB`}}}}{{IbGf}{{Bb{bGh}}}}{{AnGf}{{Bb{bGh}}}}0{AnEd}{cc{}}0{{{Il{JbIn}}}An}{{{Il{IjIh}}}An}{{{Il{JhIn}}}An}{{{j{c}}}AnD`}{{{Il{JlIn}}}An}5{{Ad{Aj{Hn}}d}{{Bb{AnB`}}}}{{Ad{Aj{Hn}}Ebd}{{Bb{AnB`}}}}{{Ad{Cf{Cd}}}{{Bb{AnB`}}}}{{Ad{Fj{{Cf{Cd}}}}Eb}An}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cAn{{Gd{}{{Cb{Lj}}}}}}{cAn{{Gd{}{{Cb{{C`{Ah}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Kj}}}}}}}}{cAn{{Gd{}{{Cb{Kn}}}}}}{cAn{{Gd{}{{Cb{Ln}}}}}}{cAn{{Gd{}{{Cb{d}}}}}}{cAn{{Gd{}{{Cb{{C`{d}}}}}}}}{cAn{{Gd{}{{Cb{Fn}}}}}}{cAn{{Gd{}{{Cb{If}}}}}}{cAn{{Gd{}{{Cb{{C`{Kn}}}}}}}}{cAn{{Gd{}{{Cb{Kj}}}}}}{cAn{{Gd{}{{Cb{Lf}}}}}}{cAn{{Gd{}{{Cb{{C`{Lj}}}}}}}}{cAn{{Gd{}{{Cb{Id}}}}}}:{cAn{{Gd{}{{Cb{Lb}}}}}}{cAn{{Gd{}{{Cb{Ad}}}}}}1{cAn{{Gd{}{{Cb{{C`{Fn}}}}}}}}{cAn{{Gd{}{{Cb{Lj}}}}}}{cAn{{Gd{}{{Cb{{C`{Ln}}}}}}}}{cAn{{Gd{}{{Cb{Ah}}}}}}6;{cAn{{Gd{}{{Cb{Ed}}}}}}9{cAn{{Gd{}{{Cb{{C`{Lb}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Id}}}}}}}}3{cAn{{Gd{}{{Cb{d}}}}}}{cAn{{Gd{}{{Cb{Ln}}}}}}>{cAn{{Gd{}{{Cb{Fn}}}}}}{cAn{{Gd{}{{Cb{{C`{If}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Lf}}}}}}}}{{Ad{Fj{Kj}}}An}{{Ad{Fj{If}}}An}{{Ad{Fj{Ln}}}An}{{Ad{Fj{Lf}}}An}{{Ad{Fj{Kn}}}An}{{Ad{Fj{Lj}}}An}{{Ad{Fj{Ah}}}An}{{Ad{Fj{Lb}}}An}{{Ad{Fj{Fn}}}An}{{Ad{Fj{Id}}}An}{{AdFdEb}An}{{AnFdFd}An}{{BEjFd}{{Bb{HnB`}}}}{AnFd}{AnBn}{{BEjFd}{{C`{I`}}}}{{BEjFdFd}{{C`{I`}}}}{{BEjFd}Hn}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{Anc}{{Bb{{j{Al}}B`}}}ALn}{{AnAd}{{Bb{{j{Al}}B`}}}}{{AnAn}{{Bb{{j{Al}}B`}}}}320{{AnAd}}{BEjd}{{Ibc}bAFf}{{An{C`{Fd}}}An}{An{{Bb{{j{Lh}}B`}}}}{An{{Bb{{j{Ih}}B`}}}}{An{{Bb{{j{In}}B`}}}}{An{{Bb{{j{Ll}}B`}}}}{An{{Bb{{j{Eh}}B`}}}}`{An{{Bb{{j{h}}B`}}}}{{}Fd}00{ce{}{}}00{AnANj}1{B@bAn}{AnAn}={An{{Bb{{j{Al}}B`}}}}000{BEj{{j{Al}}}}0{{}d}0{AnIb}{AnDEl}{BEjFd}{{BEjFd}An}<{AnBFf}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{AnAn}{{Bb{{j{Al}}B`}}}}{{AnAd}}{{Anc}{{Bb{{j{Al}}B`}}}ALn}3102{An{{Bb{{C`{c}}B`}}}Kh}{BEj{{Bb{AnB`}}}}{BEj{{C`{Kj}}}}?0121{{Anc}{}{nKh}}{{AnAn}}10;{BEj{{Bb{FdB`}}}}{BEjAd}{{Adc}An{{Hb{{Aj{{C`{Ad}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{{Dh{{Aj{Ah}}}}}}}}}}}}{{Ad{Ld{Kn}}}An}{{Adc}An{{Hb{{Aj{{C`{Lb}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{{Aj{Ah}}}}}}}}}}{{Ad{Ld{If}}}An}{{Adc}An{{Hb{{Aj{Ed}}}}}}{{Adc}An{{Hb{{Aj{{Aj{Ah}}}}}}}}{{Adc}An{{Hb{{Aj{Hn}}}}}}{{Adc}An{{Hb{{Aj{{C`{AIl}}}}}}}}{{Adc}An{{Hb{{Aj{If}}}}}}{{Adc}An{{Hb{{Aj{{Dh{{Aj{Ah}}}}}}}}}}{{Adc}An{{Hb{{Aj{AJ`}}}}}}{{Adc}An{{Hb{{Aj{Kn}}}}}}{{Ad{Ld{Lf}}}An}{{Adc}An{{Hb{{Aj{{Dh{Ad}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{Ln}}}}}}}}{{Ad{Ld{Fn}}}An}{{Adc}An{{Hb{{Aj{{C`{Ed}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{d}}}}}}}}{{Adc}An{{Hb{{Aj{AMf}}}}}}{{Adc}An{{Hb{{Aj{Ad}}}}}}{{Adc}An{{Hb{{Aj{{Fj{Ah}}}}}}}}{{Adc}AnB@b}{{Adc}An{{Hb{{Aj{{C`{Fn}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{AJ`}}}}}}}}{{Adc}An{{Hb{{Aj{Ln}}}}}}{{Adc}An{{Hb{{Aj{AIl}}}}}}{{Adc}An{{Hb{{Aj{Lf}}}}}}{{Adc}An{{Hb{{Aj{{C`{Lj}}}}}}}}{{Adc}An{{Hb{{Aj{d}}}}}}{{Adc}An{{Hb{{Aj{{C`{If}}}}}}}}{{Adc}An{{Hb{{Aj{AMh}}}}}}{{Adc}An{{Hb{{Aj{{C`{An}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{Kn}}}}}}}}{{Adc}An{{Hb{{Aj{Lj}}}}}}{{Adc}An{{Hb{{Aj{{C`{{Dh{Ad}}}}}}}}}}{{Adc}An{{Hb{{Aj{An}}}}}}{{Adc}An{{Hb{{Aj{Id}}}}}}{{AdAn}An}{{Adc}An{{Hb{{Aj{{C`{Lf}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{AMh}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{Id}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{{Fj{Ah}}}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{AMf}}}}}}}}{{Adc}An{{Hb{{Aj{Lb}}}}}}{{Adc}An{{Hb{{Aj{{C`{Kj}}}}}}}}{{Adc}An{{Hb{{Aj{{C`{Ah}}}}}}}}{{Adc}An{{Hb{{Aj{Fn}}}}}}{{Adc}An{{Hb{{Aj{Ah}}}}}}{{Adc}An{{Hb{{Aj{Kj}}}}}}{{AdEb}An}{{BEjFdFd}An}{{AdFd}An}{DElC`}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{Anc}{{Bb{{j{Al}}B`}}}ALn}{{AnAn}{{Bb{{j{Al}}B`}}}}{{AnAd}{{Bb{{j{Al}}B`}}}}3{{Anc}{}ALn}{{AnAd}}3{An{{Bb{AB`B`}}}}{BEjFd}`{An{{Cf{Jj}}}}{An{{Bb{AnB`}}}}{{BEjKjMf}{{Bb{AnB`}}}}{BEjAn}{{Anc}{}{nKh}}0{{AnAn}}{{BEjAd}b}{{AnAd}An}{{An{Aj{Fn}}}{{Bb{AnB`}}}}5{IbIb}{{BEjDdMj}{{Bb{AnB`}}}}{{AnKjdd{C`{If}}}{{Bb{AnB`}}}}{{AnFddd{C`{If}}}{{Bb{AnB`}}}}{{AnIb}b}{{BEjFn}An}{BEjb}{Anb}{{An{C`{If}}}An}{DEl{{Gb{Fd{C`{Fd}}}}}}{{BEjFnFd}An}{{AnEf}{{Bb{AnB`}}}}{{BEjEf}{{Bb{AnB`}}}}{{BEjAh}{{C`{Kj}}}}{{BEjAh}{{Bb{AnB`}}}}{An{{Bb{{j{Ab}}B`}}}}{{AnFd}{{Bb{{Dh{Ad}}B`}}}}{{AnEb}{{Bb{AnB`}}}}{An{{Bb{AJbB`}}}}{{AnAn}}0{{Anc}{}{nKh}}0{An{{Bb{cB`}}}Kh}{An{{Bb{AnB`}}}}{{An{C`{Fd}}}An}{{BEj{j{Eh}}}{{Bb{AnB`}}}}{{An{Aj{N`}}Ib}An}{{An{Aj{N`}}}An}{{BEj{Aj{Lf}}}{{Bb{AnB`}}}}{{BEj{Aj{Lf}}}An}{{An{Aj{Lf}}d}An}{{An{j{Eh}}d}{{Bb{AnB`}}}}{{BEj{j{Eh}}}An}{{An{Aj{Lf}}}An}{{An{j{Eh}}d}An}{An{{Bb{{Il{JlIn}}B`}}}}{{AnFdd}{{Cf{Cd}}}}{{An{C`{Ad}}d}{{Bb{ANjB`}}}}>{ce{}{}}0{An{{Dh{An}}}}{cEd{}}{{AnAn}{{Bb{AnB`}}}}{c{{Bb{e}}}{}{}}0{{{Gb{AM`{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}{{{Gb{AM`{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{Ad{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{Ad{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}4444{cOd{}}00{An{{Bb{{j{L`}}B`}}}}{An{{Bb{{j{Eh}}B`}}}}{An{{Bb{{j{Kl}}B`}}}}{An{{Bb{{j{M`}}B`}}}}{BEj{{Bb{AnB`}}}}{An{{Bb{AnB`}}}}{BEj{{Bb{{j{c}}B`}}}D`}`{{BEjAh}{{C`{Kj}}}}{{BEjAh}{{Bb{AnB`}}}}{ce{}{}}00{{AnAd}An}{{Anc}An{nKh}}{{An{j{Al}}An}{{Bb{AnB`}}}}````{{AnAnc}An{{Dl{AnAn}{{Db{An}}}}}}{{{BFh{}{{Db{c}}}}An}c{}}{{BFjAn}{{Bb{AnB`}}}}{{{j{Bd}}An}{{Bb{AnB`}}}}`210210210210``{{BMhAn}{{Bb{AnB`}}}}{{{j{F`}}An}{{Bb{AnB`}}}}{{BMhc}{{Bb{AnB`}}}A`}{{{j{F`}}c}{{Bb{AnB`}}}A`}```{{cf}b{}}<<{CFdCFd}{{ce}b{}{}}{{}CFd}{Fdc{}}0{Fdb}{{CFdCFd}d}{{ce}d{}{}}00{{CFdGf}{{Bb{bGh}}}}{cc{}}{{CFdc}bAFf}{{}Fd}{ce{}{}}0{c{{Bb{e}}}{}{}}0{cOd{}}2``>{DjAn}033{DjDj}>1<<;754{AnDj}{{Dj{Cf{Cd}}}b}65546{{Dj{Cf{Cd}}e}c{}{{Dd{Dj}{{Db{c}}}}}}","D":"AEInG`","p":[[1,"unit"],[1,"bool"],[5,"Private",9803],[5,"ListType",1683],[5,"ChunkedArray",17],[10,"PolarsNumericType",1683],[10,"Num",9804],[10,"ToPrimitive",9805],[5,"StringType",1683],[1,"str"],[5,"BinaryType",1683],[1,"u8"],[1,"slice"],[5,"BooleanType",1683],[5,"Series",9325],[6,"PolarsError",3030],[6,"Result",9806],[10,"NumOpsDispatchInner",9726],[5,"ObjectType",1683],[6,"GroupsProxy",3402],[10,"PolarsObject",1254],[5,"FixedSizeListType",1683],[5,"Settings",17],[6,"Option",9807],[17,"Item"],[10,"Array",9808],[5,"Box",9809],[10,"Iterator",9810],[5,"AmortizedListIter",9811],[17,"Structure"],[5,"Flat",1683],[10,"PolarsDataType",1683],[17,"Output"],[10,"Fn",9812],[10,"Copy",9813],[6,"Cow",9814],[5,"UnstableSeries",9779],[10,"FnMut",9812],[5,"Float32Type",1683],[5,"Float64Type",1683],[6,"DataType",1683],[5,"String",9815],[5,"SortOptions",1376],[5,"UInt32Type",1683],[5,"BinaryOffsetType",1683],[5,"SortMultipleOptions",1376],[10,"PolarsIntegerType",1683],[10,"NumOpsDispatchCheckedInner",9747],[5,"Iter",9816],[1,"usize"],[1,"fn"],[5,"Map",9817],[5,"Vec",9818],[10,"DoubleEndedIterator",9819],[1,"i64"],[5,"OffsetsBuffer",9820],[1,"tuple"],[10,"IntoIterator",9821],[5,"Formatter",9822],[5,"Error",9822],[17,"Array"],[10,"FallibleIterator",9823],[5,"Bitmap",9824],[10,"PolarsAsRef",1682],[10,"AsRef",9825],[10,"Borrow",9826],[10,"IntoParallelIterator",9827],[10,"Send",9813],[10,"Sync",9813],[10,"TrustedLen",9828],[6,"AnyValue",1683],[10,"PolarsObjectSafe",1254],[6,"IsSorted",9325],[1,"f32"],[1,"u64"],[5,"Int32Type",1683],[5,"DateType",1683],[5,"Logical",1683],[5,"Int64Type",1683],[6,"TimeUnit",1683],[5,"DatetimeType",1683],[5,"Int128Type",1683],[5,"DecimalType",1683],[5,"DurationType",1683],[10,"ExactSizeIterator",9829],[5,"TimeType",1683],[10,"PolarsFloatType",1683],[10,"PolarsIterator",1182],[5,"Iter",9830],[5,"IterNames",9830],[6,"ChunkedArrayLayout",17],[10,"NumCast",9805],[1,"f64"],[5,"UInt64Type",1683],[1,"i32"],[5,"UInt16Type",1683],[1,"u16"],[5,"Range",9831],[1,"u32"],[5,"Int16Type",1683],[1,"i16"],[5,"Int8Type",1683],[1,"i8"],[5,"UInt8Type",1683],[10,"ParallelIterator",9827],[10,"IndexedParallelIterator",9827],[6,"QuantileInterpolOptions",3766],[5,"Field",1683],[5,"RollingOptionsFixedWindow",3766],[10,"PolarsOpsNumericType",9832],[10,"Sized",9813],[5,"ChunkId",3766],[10,"NotSpecialized",9833],[5,"RandomState",9834],[5,"BytesHash",9835],[5,"OwnedRepr",9836],[1,"array"],[5,"Dim",9837],[5,"ArrayBase",9838],[5,"ViewRepr",9838],[6,"Either",9839],[5,"TypeId",9840],[5,"NullableIdxSize",3766],[10,"FnOnce",9812],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",864],[5,"AnonymousListBuilder",892],[5,"AnonymousOwnedListBuilder",892],[5,"ListBooleanChunkedBuilder",892],[5,"ListPrimitiveChunkedBuilder",892],[10,"ListBuilderTrait",892],[10,"ChunkedBuilder",892],[5,"ListStringChunkedBuilder",892],[5,"ListBinaryChunkedBuilder",892],[5,"ListNullChunkedBuilder",892],[5,"BinViewChunkedBuilder",892],[10,"ViewType",9841],[5,"BooleanChunkedBuilder",892],[5,"NullChunkedBuilder",892],[5,"PrimitiveChunkedBuilder",892],[10,"Clone",9842],[5,"NullChunked",9843],[10,"NewChunkedArray",892],[10,"ChunkedCollectInferIterExt",1166],[10,"ChunkedCollectIterExt",1166],[10,"Canonical",1180],[5,"BooleanArray",9844],[5,"BoolIterNoNull",1182],[5,"FixedSizeListArray",9845],[5,"FixedSizeListIterNoNull",1182],[5,"StructIter",1182],[5,"SomeIterator",1182],[5,"ObjectArray",1254],[6,"ArrowDataType",1683],[10,"Any",9840],[10,"Debug",9822],[5,"BitmapIter",9846],[6,"ZipValidity",9847],[5,"Arc",3766],[5,"ObjectChunkedBuilder",1325],[10,"AnonymousObjectBuilder",1348],[5,"ObjectRegistry",1348],[17,"FuncRet"],[10,"ChunkApply",1376],[10,"ChunkApplyKernel",1376],[10,"ChunkSort",1376],[10,"ChunkUnique",1376],[10,"ChunkCast",1376],[6,"FillNullStrategy",1376],[10,"ChunkCompare",9325],[10,"ChunkExplode",1376],[10,"ChunkFillNullValue",1376],[10,"ChunkFilter",1376],[10,"ChunkFull",1376],[10,"ChunkFullNull",1376],[10,"ChunkAnyValue",1376],[10,"Hasher",9848],[10,"IsFirstDistinct",1376],[10,"IsLastDistinct",1376],[10,"ChunkAgg",1376],[10,"ChunkQuantile",1376],[10,"ChunkExpandAtIndex",1376],[10,"Reinterpret",1376],[10,"ChunkReverse",1376],[10,"ChunkRollApply",1376],[10,"ChunkSet",1376],[10,"ChunkShift",1376],[10,"ChunkShiftFill",1376],[10,"SlicedArray",1376],[10,"ChunkVar",1376],[10,"ChunkTake",1376],[10,"ChunkTakeUnchecked",1376],[10,"ChunkBytes",1376],[10,"ChunkZip",1376],[10,"BinaryFnMut",1575],[10,"StaticArray",1683],[10,"TernaryFnMut",1575],[10,"Error",9849],[10,"UnaryFnMut",1575],[5,"PrimitiveArray",9850],[6,"SearchSortedSide",1615],[5,"NoNull",3766],[5,"RowsEncoded",9851],[5,"NaiveDateTime",9852],[6,"Tz",9853],[5,"NaiveTime",9854],[5,"StructChunked",1683],[5,"CategoricalChunked",1683],[5,"CategoricalChunkedBuilder",1683],[10,"ArrayFromIter",1683],[10,"ArrayFromIterDtype",1683],[10,"AsRefDataType",1683],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",9855],[10,"From",9825],[5,"BinaryViewArrayGeneric",9841],[6,"RevMapping",1683],[10,"CategoricalMergeOperation",1683],[10,"LogicalType",1683],[6,"CategoricalOrdering",1683],[5,"OwnedObject",1683],[5,"CategoricalType",1683],[6,"ArrowTimeUnit",1683],[10,"ArrayCollectIterExt",1683],[5,"GlobalRevMapMerger",1683],[10,"Into",9825],[10,"NumericNative",1683],[5,"ArrowField",3766],[6,"IntegerType",9856],[6,"PrimitiveType",9857],[5,"TimeDelta",9858],[5,"NaiveDate",9859],[5,"LazyCompact",9860],[5,"SmartString",9861],[10,"GetAnyValue",1683],[5,"CatIter",1683],[6,"Ordering",9862],[5,"Duration",3766],[1,"u128"],[6,"PhysicalType",9856],[5,"DataFrame",3118],[5,"StringCacheHolder",3008],[5,"ErrString",3030],[6,"PolarsWarning",3030],[6,"Error",9863],[6,"Error",9864],[5,"Utf8Error",9865],[5,"Error",9866],[5,"TryReserveError",9867],[5,"Error",9868],[10,"Display",9822],[5,"Schema",3766],[10,"IntoSeries",9325],[6,"NullStrategy",3118],[6,"UniqueKeepStrategy",3118],[5,"HashSet",9869],[5,"ArrowSchema",3766],[5,"Row",3657],[5,"GroupBy",3402],[5,"DynamicGroupOptions",3766],[5,"RangeFrom",9831],[5,"RangeInclusive",9831],[5,"RangeToInclusive",9831],[5,"RangeFull",9831],[5,"RangeTo",9831],[5,"RecordBatchIter",3118],[5,"PhysRecordBatchIter",3118],[5,"LazyFrame",3766],[10,"IntoVec",3766],[5,"MeltArgs",3373],[5,"RollingGroupOptions",3766],[10,"RangeBounds",9831],[6,"IndexOrder",3766],[5,"RecordBatch",9870],[5,"StructArray",3766],[5,"GroupsIdx",3402],[5,"UnitVec",9871],[6,"GroupByMethod",3402],[5,"SlicedGroups",3402],[5,"GroupsProxyParIter",3402],[10,"UnindexedConsumer",9872],[6,"GroupsIndicator",3402],[6,"AAggExpr",9873],[10,"IntoGroupsProxy",3402],[5,"Copied",9874],[5,"Zip",9875],[5,"GroupsProxyIter",3402],[10,"IsFloat",9876],[10,"NativeType",9877],[10,"AggList",3641],[10,"TakeExtremum",3641],[10,"PhysicalAggExpr",3654],[6,"AnyValueBuffer",3657],[6,"AnyValueBufferTrusted",3657],[10,"JoinDispatch",3766],[5,"JoinArgs",3766],[10,"SeriesTrait",9325],[10,"DfTake",3766],[10,"DataFrameOps",3766],[5,"CsvReader",3766],[6,"CommentPrefix",3766],[10,"MmapBytesReader",9878],[6,"Expr",3766],[10,"LhsNumOps",9726],[10,"NumOpsDispatch",9726],[5,"LazyGroupBy",3766],[10,"Allocator",9879],[5,"JoinBuilder",3766],[10,"AnonymousScan",3766],[5,"LazyJsonLineReader",3766],[5,"ScanArgsAnonymous",3766],[10,"FunctionOutputField",3766],[5,"SpecialEq",3766],[6,"VisitRecursion",9880],[6,"FunctionExpr",3766],[10,"ArgAgg",3766],[5,"ArrayNameSpace",3766],[5,"ListNameSpace",3766],[5,"IpcStreamReader",3766],[10,"Read",9881],[10,"SeriesUdf",3766],[10,"AsBinary",3766],[10,"StringMethods",8515],[10,"PhysicalExpr",3766],[5,"BorrowedFd",9882],[10,"AsFd",9882],[10,"AsList",3766],[10,"PartitionedAggregation",3766],[10,"AsRawFd",9883],[6,"AggExpr",3766],[10,"SeriesSealed",3766],[10,"StatsEvaluator",9884],[5,"PhysicalIoHelper",3766],[10,"AsString",3766],[20,"MaybeUninit",9885],[10,"StringNameSpaceImpl",3766],[5,"CsvWriter",3766],[5,"BatchedWriter",9886],[10,"Write",9881],[5,"IpcWriter",3766],[5,"BatchedWriter",9887],[5,"ParquetReader",3766],[5,"BatchedParquetReader",3766],[5,"ParquetWriter",3766],[5,"BatchedWriter",9888],[5,"BatchedCsvReaderMmap",9140],[5,"BatchedCsvReaderRead",9140],[5,"OwnedBatchedCsvReaderMmap",9140],[5,"OwnedBatchedCsvReader",9140],[5,"BinaryNameSpace",8498],[6,"Operator",3766],[10,"RenameAliasFn",3766],[5,"UserDefinedFunction",3766],[10,"SeriesBinaryUdf",3766],[5,"InProcessQuery",3766],[5,"HashMap",9889],[5,"CategoricalNameSpace",3766],[10,"RoundSeries",3766],[10,"TemporalMethods",9206],[10,"NumOpsDispatchChecked",9747],[5,"RollingOptionsImpl",3766],[5,"Bounds",3766],[6,"ClosedWindow",3766],[6,"Label",3766],[6,"StartBy",3766],[5,"Window",3766],[6,"CsvEncoding",3766],[6,"NullValues",3766],[6,"QuoteStyle",3766],[5,"SerializeOptions",3766],[6,"IpcCompression",3766],[6,"ParallelStrategy",3766],[5,"GzipLevel",3766],[5,"BrotliLevel",3766],[5,"UnionArgs",3766],[5,"ZstdLevel",3766],[6,"ParquetCompression",3766],[6,"InterpolationMethod",3766],[6,"JoinType",3766],[6,"JoinValidation",3766],[5,"AsOfOptions",3766],[6,"AsofStrategy",3766],[6,"ClosedInterval",3766],[6,"RankMethod",3766],[5,"LazyCsvReader",3766],[5,"RankOptions",3766],[5,"ScanArgsIpc",3766],[5,"ScanArgsParquet",3766],[6,"DslPlan",3766],[5,"When",3766],[5,"Then",3766],[5,"ChainedWhen",3766],[5,"ChainedThen",3766],[6,"Excluded",3766],[6,"BooleanFunction",3766],[5,"DatetimeArgs",3766],[5,"DurationArgs",3766],[5,"RollingCovOptions",3766],[5,"StrptimeOptions",3766],[5,"JoinOptions",3766],[6,"WindowType",3766],[6,"WindowMapping",3766],[5,"OptState",3766],[6,"LiteralValue",3766],[5,"ParquetWriteOptions",3766],[5,"IpcWriterOptions",3766],[5,"CsvWriterOptions",3766],[5,"JsonWriterOptions",3766],[5,"AnonymousScanOptions",3766],[5,"FileMetaData",3766],[5,"RollingVarParams",3766],[5,"RollingQuantileParams",3766],[6,"NonExistent",3766],[10,"LazyFileListReader",3766],[5,"CloudOptions",8676],[10,"Ord",9862],[6,"ColumnOrder",9890],[10,"BinaryNameSpaceImpl",3766],[5,"PathBuf",9891],[5,"IpcStreamWriterOption",3766],[10,"SerWriter",3766],[5,"IpcWriterOption",3766],[10,"CrossJoin",3766],[10,"ExprEvalExtension",3766],[10,"DateMethods",8515],[10,"DatetimeMethods",8515],[10,"DurationMethods",8515],[10,"BinaryUdfOutputField",3766],[10,"Default",9892],[6,"NullBehavior",9753],[5,"DotNode",9893],[5,"Weak",9894],[5,"DateLikeNameSpace",9025],[1,"char"],[10,"FromIterator",9821],[10,"Scalar",9895],[10,"PartialEq",9862],[10,"ListNameSpaceExtension",3766],[5,"ExecutionState",9896],[5,"AggregationContext",3766],[10,"Command",9897],[5,"StructNameSpace",3766],[10,"SerReader",3766],[5,"IpcReader",3766],[5,"IpcStreamWriter",3766],[5,"JsonWriter",3766],[5,"JsonReader",3766],[5,"JsonLineReader",3766],[10,"PhysicalIoExpr",9884],[5,"File",9898],[10,"UdfSchema",3766],[6,"BinaryFunction",9899],[6,"RangeFunction",9900],[6,"CategoricalFunction",9901],[6,"TemporalFunction",9902],[6,"StringFunction",9903],[6,"StructFunction",9904],[6,"ArrayFunction",9905],[6,"ListFunction",9906],[5,"OsStr",9907],[5,"CString",9908],[5,"CStr",9909],[5,"Path",9891],[1,"never"],[5,"OsString",9907],[10,"ToOwned",9814],[5,"GrowableStruct",9910],[5,"MutableStructArray",9911],[10,"FromData",9019],[5,"Buffer",9912],[10,"FromDataUtf8",9019],[10,"FromDataBinary",9019],[5,"ListArray",9913],[6,"Ambiguous",3766],[10,"NamedFromOwned",3766],[5,"FunctionOptions",9914],[10,"PartialOrd",9862],[6,"Context",9915],[5,"FieldsMapper",3766],[10,"IndexOfSchema",3766],[5,"BoundsIter",3766],[6,"ReaderBytes",9878],[10,"PolarsTemporalGroupby",3766],[10,"PolarsArray",3766],[10,"Hash",9848],[10,"SeriesJoin",3766],[10,"TimeMethods",8515],[10,"DataFrameJoinOps",3766],[10,"IntoListNameSpace",3766],[5,"FileMetaData",9916],[10,"SeriesMethods",3766],[5,"StructValueIter",9917],[10,"AsofJoin",3766],[10,"AsofJoinBy",3766],[10,"ListNameSpaceImpl",3766],[5,"ExprNameNameSpace",3766],[5,"KeyValue",9916],[10,"IntoLazy",3766],[10,"Literal",3766],[5,"Null",3766],[5,"RowIndex",9918],[10,"ChunkAggSeries",3766],[10,"QuantileAggSeries",3766],[10,"PolarsMonthEnd",3766],[10,"PolarsMonthStart",3766],[10,"IndexToUsize",3766],[10,"NamedFrom",3766],[6,"RowGroupFetcher",9919],[6,"IR",9920],[5,"Arena",9921],[6,"AExpr",9873],[5,"Node",9921],[5,"Pin",9922],[5,"Request",9849],[10,"SeriesRank",3766],[5,"BorrowedCursor",9923],[10,"VarInt",9924],[5,"IoSliceMut",9881],[10,"SeriesOpsTime",8515],[5,"RollingOptions",8515],[10,"PolarsRound",3766],[5,"AnonymousScanArgs",3766],[10,"ChunkedSet",3766],[5,"SchemaDescriptor",9925],[6,"SeekFrom",9881],[10,"VarAggSeries",3766],[5,"StringNameSpace",9926],[10,"TakeChunked",3766],[10,"ToDummies",3766],[10,"PolarsTruncate",3766],[5,"AllocError",9879],[5,"RwLock",9927],[10,"PolarsUpsample",3766],[10,"VecHash",3766],[5,"NonZero",9928],[6,"JsonFormat",3766],[5,"BTreeMap",9929],[5,"IoSlice",9881],[10,"ArrayNameSpace",8479],[10,"AsArray",8479],[10,"AsString",8608],[6,"Pattern",8608],[5,"DatetimeInfer",8646],[10,"StrpTimeParser",8646],[17,"Error"],[10,"TryFromWithUnit",8646],[6,"CloudType",8676],[5,"AnonymousBuilder",9080],[5,"MutableNullArray",9110],[5,"MutableBitmap",9930],[10,"AsSeries",9206],[5,"Utf8Array",9931],[5,"BinaryArray",9932],[5,"SeriesIter",9325],[8,"FillNullLimit",1376],[10,"InitHashMaps",1683],[10,"InitHashMaps2",1683],[5,"Nested",1683],[8,"PolarsResult",3030],[15,"Count",8424],[15,"Slice",8425],[8,"ChunkJoinOptIds",3766],[8,"DynArgs",3766],[8,"AllowedOptimizations",3766],[10,"ListFromIter",3766],[15,"Quantile",8300],[15,"Min",8300],[15,"Max",8300],[15,"IsBetween",8307],[15,"Any",8307],[15,"All",8307],[15,"GroupBy",8310],[15,"Sort",8310],[15,"Cache",8310],[15,"ExtContext",8310],[15,"DataFrameScan",8310],[15,"Error",8310],[15,"Select",8310],[15,"HStack",8310],[15,"Scan",8310],[15,"MapFunction",8310],[15,"Filter",8310],[15,"Distinct",8310],[15,"Slice",8310],[15,"Sink",8310],[15,"Join",8310],[15,"Union",8310],[15,"HConcat",8310],[15,"SortBy",8369],[15,"Filter",8369],[15,"Cast",8369],[15,"Sort",8369],[15,"Gather",8369],[15,"RenameAlias",8369],[15,"Ternary",8369],[15,"Function",8369],[15,"Window",8369],[15,"AnonymousFunction",8369],[15,"Slice",8369],[15,"BinaryExpr",8369],[15,"Round",8403],[15,"RoundSF",8403],[15,"Clip",8403],[15,"BackwardFill",8403],[15,"ForwardFill",8403],[15,"Random",8403],[15,"GatherEvery",8403],[15,"Rank",8403],[15,"ValueCounts",8403],[15,"Replace",8403],[15,"CumCount",8403],[15,"CumSum",8403],[15,"CumProd",8403],[15,"CumMin",8403],[15,"CumMax",8403],[15,"FillNull",8403],[15,"Outer",8427],[15,"Range",8428],[10,"Utf8FromIter",9318],[10,"BinaryFromIter",9318]],"b":[[31,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[32,"impl-Add-for-ChunkedArray%3CStringType%3E"],[33,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CT%3E"],[38,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[39,"impl-Add-for-ChunkedArray%3CT%3E"],[40,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[41,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[42,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[45,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[46,"impl-AggList-for-ChunkedArray%3CT%3E"],[47,"impl-AggList-for-ChunkedArray%3CListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[49,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[50,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[56,"impl-ChunkedArray%3CFixedSizeListType%3E"],[57,"impl-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[65,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[66,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[68,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CListType%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CFloat64Type%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[82,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[84,"impl-ChunkedArray%3CBinaryType%3E"],[85,"impl-ChunkedArray%3CT%3E"],[88,"impl-ChunkedArray%3CListType%3E"],[89,"impl-ChunkedArray%3CFixedSizeListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[94,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[95,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[96,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[99,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[100,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[101,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[103,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[111,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[112,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[115,"impl-ChunkUnique%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[116,"impl-ChunkUnique%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[117,"impl-ChunkUnique%3CT%3E-for-ChunkedArray%3CT%3E"],[120,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[121,"impl-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[135,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[138,"impl-Flags-for-Settings"],[139,"impl-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[141,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[193,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[194,"impl-Div-for-%26ChunkedArray%3CT%3E"],[195,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[196,"impl-Div-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[208,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[212,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[213,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[214,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[215,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[221,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[222,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[228,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[229,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[232,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[233,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[234,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[236,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[237,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[241,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[242,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[243,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[245,"impl-Debug-for-ChunkedArray%3CListType%3E"],[246,"impl-Debug-for-ChunkedArray%3CT%3E"],[247,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[248,"impl-UpperHex-for-Settings"],[249,"impl-LowerHex-for-Settings"],[250,"impl-Binary-for-Settings"],[251,"impl-Octal-for-Settings"],[252,"impl-Debug-for-Settings"],[254,"impl-ChunkedArray%3CFixedSizeListType%3E"],[255,"impl-ChunkedArray%3CListType%3E"],[261,"impl-Flags-for-Settings"],[262,"impl-Settings"],[270,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[271,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[276,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[277,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[279,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[281,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[284,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[285,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[287,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[289,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[290,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[291,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[292,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[294,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[296,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[297,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[298,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[299,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[303,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[304,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[305,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[307,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[309,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[310,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[311,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[312,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[314,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[315,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[317,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[318,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[320,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[321,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[322,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[323,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[324,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[325,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[326,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[330,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[331,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[332,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[334,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[336,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[347,"impl-ChunkedArray%3CFixedSizeListType%3E"],[349,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkedArray%3CListType%3E"],[366,"impl-ChunkedArray%3CFixedSizeListType%3E"],[368,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CFixedSizeListType%3E"],[374,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[378,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[387,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[388,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[389,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[390,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[391,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[392,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[393,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[394,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[395,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[396,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[397,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[398,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[399,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[401,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[403,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[404,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[411,"impl-ChunkedArray%3CListType%3E"],[412,"impl-ChunkedArray%3CFixedSizeListType%3E"],[424,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[434,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[456,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[467,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[468,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[470,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[471,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[472,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[473,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[474,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[475,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[476,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[477,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[478,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[479,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[480,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[481,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[483,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[484,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkedArray%3CBooleanType%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[491,"impl-ChunkedArray%3CBooleanType%3E"],[492,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[494,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[496,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[497,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[499,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[500,"impl-ChunkedArray%3CBooleanType%3E"],[501,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[502,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[506,"impl-ChunkedArray%3CT%3E"],[507,"impl-ChunkedArray%3CBooleanType%3E"],[508,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[509,"impl-Mul-for-ChunkedArray%3CT%3E"],[510,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[511,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[513,"impl-ChunkUnique%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-ChunkUnique%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[515,"impl-ChunkUnique%3CT%3E-for-ChunkedArray%3CT%3E"],[517,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[518,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[521,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[522,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[526,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[527,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[530,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[531,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[532,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[533,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[535,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[537,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[539,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[540,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[541,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[543,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[544,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[545,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[546,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[547,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[548,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[549,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[550,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[551,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[552,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[553,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[554,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[555,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[556,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[558,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[559,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[561,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[562,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[563,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[564,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[570,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[571,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[574,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[576,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[581,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[584,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[585,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[586,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[587,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[588,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[589,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[590,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[593,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[594,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[597,"impl-ChunkedArray%3CListType%3E"],[598,"impl-ChunkedArray%3CStringType%3E"],[599,"impl-ChunkedArray%3CStringType%3E"],[600,"impl-ChunkedArray%3CListType%3E"],[603,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[604,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[605,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[606,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[607,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[637,"impl-Rem-for-ChunkedArray%3CT%3E"],[638,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[639,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[640,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[644,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[645,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[656,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[657,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[658,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[660,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[661,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[662,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[663,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[666,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[667,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[668,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[669,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[670,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[677,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[678,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[679,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[680,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[681,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[682,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[683,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[685,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[686,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[687,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[689,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[690,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[691,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[692,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[695,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[696,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[697,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[698,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[699,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[700,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[701,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[702,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[703,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[704,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[706,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[709,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[710,"impl-Sub-for-ChunkedArray%3CT%3E"],[711,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkedArray%3CBooleanType%3E"],[717,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[724,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[725,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[736,"impl-ChunkedArray%3CListType%3E"],[737,"impl-ChunkedArray%3CFixedSizeListType%3E"],[738,"impl-ChunkedArray%3CListType%3E"],[739,"impl-ChunkedArray%3CT%3E"],[746,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[747,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[748,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[749,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ChunkedArray%3CListType%3E"],[754,"impl-ChunkedArray%3CFixedSizeListType%3E"],[771,"impl-ChunkUnique%3CT%3E-for-ChunkedArray%3CT%3E"],[772,"impl-ChunkUnique%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[773,"impl-ChunkUnique%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[774,"impl-ChunkUnique%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[775,"impl-ChunkUnique%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[781,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[782,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[786,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[804,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[805,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[811,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[813,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[815,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1035,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1036,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1259,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1260,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1292,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1293,"impl-ObjectArray%3CT%3E"],[1305,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1306,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1316,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1317,"impl-ObjectArray%3CT%3E"],[1319,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1320,"impl-ObjectArray%3CT%3E"],[1322,"impl-ObjectArray%3CT%3E"],[1323,"impl-Array-for-ObjectArray%3CT%3E"],[1326,"impl-ObjectChunkedBuilder%3CT%3E"],[1327,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1329,"impl-ObjectChunkedBuilder%3CT%3E"],[1330,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2046,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2047,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2048,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2049,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2050,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2054,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2055,"impl-Logical%3CDurationType,+Int64Type%3E"],[2290,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2291,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2292,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2293,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2294,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2301,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2302,"impl-PartialEq-for-DataType"],[2308,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2309,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2310,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2312,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2313,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2314,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2345,"impl-Debug-for-AnyValue%3C\'a%3E"],[2346,"impl-Display-for-AnyValue%3C\'_%3E"],[2347,"impl-Debug-for-DataType"],[2348,"impl-Display-for-DataType"],[2350,"impl-Display-for-TimeUnit"],[2351,"impl-Debug-for-TimeUnit"],[2357,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2358,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2372,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2373,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[2374,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2375,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2377,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2379,"impl-From%3C%26ArrowField%3E-for-Field"],[2380,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2404,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2405,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2428,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2429,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2430,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2431,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2432,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2436,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2437,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2438,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2439,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2440,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2475,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2476,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2477,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2479,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2480,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2481,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2577,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2578,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2579,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2580,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2581,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2626,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2627,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2628,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2630,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2631,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2632,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2645,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2646,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2647,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2648,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2671,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2672,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2673,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2674,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2675,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2676,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2677,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2678,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2683,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2684,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2685,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2687,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2688,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2689,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2693,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2694,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2713,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2714,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2721,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2722,"impl-Logical%3CDurationType,+Int64Type%3E"],[2727,"impl-Logical%3CDateType,+Int32Type%3E"],[2728,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2729,"impl-Logical%3CTimeType,+Int64Type%3E"],[2743,"impl-Logical%3CDurationType,+Int64Type%3E"],[2744,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2790,"impl-Logical%3CTimeType,+Int64Type%3E"],[2791,"impl-Logical%3CDateType,+Int32Type%3E"],[2792,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2797,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[2798,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3071,"impl-Display-for-ErrString"],[3072,"impl-Debug-for-ErrString"],[3073,"impl-Display-for-PolarsError"],[3074,"impl-Debug-for-PolarsError"],[3078,"impl-From%3CError%3E-for-PolarsError"],[3079,"impl-From%3CError%3E-for-PolarsError"],[3081,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3082,"impl-From%3CError%3E-for-PolarsError"],[3083,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3084,"impl-From%3CError%3E-for-PolarsError"],[3206,"impl-Display-for-DataFrame"],[3207,"impl-Debug-for-DataFrame"],[3212,"impl-From%3CStructChunked%3E-for-DataFrame"],[3214,"impl-From%3C%26Schema%3E-for-DataFrame"],[3215,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3242,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3243,"impl-Index%3Cusize%3E-for-DataFrame"],[3244,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3245,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3246,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3247,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3248,"impl-Index%3C%26str%3E-for-DataFrame"],[3249,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3339,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3340,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3514,"impl-Debug-for-GroupByMethod"],[3515,"impl-Display-for-GroupByMethod"],[3521,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3522,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3524,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3559,"impl-IntoIterator-for-%26GroupsIdx"],[3560,"impl-IntoIterator-for-GroupsIdx"],[3562,"impl-IntoParallelIterator-for-GroupsIdx"],[3563,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4760,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4761,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5340,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5341,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5342,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5765,"impl-PartialEq-for-Expr"],[5766,"impl-Expr"],[5769,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[5770,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5784,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[5785,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[5786,"impl-PartialEq-for-Arc%3CT,+A%3E"],[5789,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[5790,"impl-PartialEq-for-StructArray"],[6034,"impl-Display-for-Duration"],[6035,"impl-Debug-for-Duration"],[6058,"impl-Display-for-JoinType"],[6059,"impl-Debug-for-JoinType"],[6060,"impl-Debug-for-JoinValidation"],[6061,"impl-Display-for-JoinValidation"],[6068,"impl-Debug-for-Expr"],[6069,"impl-Display-for-Expr"],[6071,"impl-Display-for-Operator"],[6072,"impl-Debug-for-Operator"],[6074,"impl-Display-for-BooleanFunction"],[6075,"impl-Debug-for-BooleanFunction"],[6076,"impl-Debug-for-FunctionExpr"],[6077,"impl-Display-for-FunctionExpr"],[6093,"impl-Display-for-Arc%3CT,+A%3E"],[6094,"impl-Debug-for-Arc%3CT,+A%3E"],[6095,"impl-Pointer-for-Arc%3CT,+A%3E"],[6168,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6169,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6195,"impl-From%3Cu32%3E-for-Expr"],[6196,"impl-From%3Ci16%3E-for-Expr"],[6197,"impl-From%3Ci8%3E-for-Expr"],[6198,"impl-From%3Cbool%3E-for-Expr"],[6199,"impl-From%3Ci32%3E-for-Expr"],[6201,"impl-From%3Cu8%3E-for-Expr"],[6202,"impl-From%3Cu16%3E-for-Expr"],[6203,"impl-From%3CAggExpr%3E-for-Expr"],[6204,"impl-From%3Cf32%3E-for-Expr"],[6205,"impl-From%3Cf64%3E-for-Expr"],[6206,"impl-From%3Ci64%3E-for-Expr"],[6207,"impl-From%3Cu64%3E-for-Expr"],[6208,"impl-From%3C%26str%3E-for-Expr"],[6212,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6213,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6214,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6215,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6216,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6217,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6218,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6219,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6220,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6221,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6223,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6225,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6226,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6227,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6244,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6245,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6246,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6247,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6250,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6251,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6252,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6253,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6254,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6255,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6256,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6257,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6258,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6259,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6260,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6265,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6266,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6267,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6269,"impl-From%3CArrowSchema%3E-for-Schema"],[6270,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6271,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6273,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6274,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6288,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6289,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6297,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6298,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6310,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6311,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7315,"impl-Array-for-StructArray"],[7316,"impl-StructArray"],[7324,"impl-Array-for-StructArray"],[7325,"impl-StructArray"],[7956,"impl-Array-for-StructArray"],[7957,"impl-StructArray"],[8186,"impl-LazyFileListReader-for-LazyCsvReader%3C\'_%3E"],[8187,"impl-LazyCsvReader%3C\'a%3E"],[8188,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8189,"impl-LazyJsonLineReader"],[8233,"impl-LazyFileListReader-for-LazyCsvReader%3C\'_%3E"],[8234,"impl-LazyCsvReader%3C\'a%3E"],[8235,"impl-LazyJsonLineReader"],[8236,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8266,"impl-StructArray"],[8267,"impl-Array-for-StructArray"],[8665,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[8666,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[8671,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[8672,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9341,"impl-Add%3CT%3E-for-%26Series"],[9342,"impl-Add-for-Series"],[9343,"impl-Add%3CT%3E-for-Series"],[9344,"impl-Add-for-%26Series"],[9359,"impl-AsSeries-for-Series"],[9360,"impl-SeriesSealed-for-Series"],[9404,"impl-Div-for-%26Series"],[9405,"impl-Div-for-Series"],[9406,"impl-Div%3CT%3E-for-%26Series"],[9407,"impl-Div%3CT%3E-for-Series"],[9417,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9418,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9419,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9421,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9422,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9423,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9440,"impl-Debug-for-Series"],[9441,"impl-Display-for-Series"],[9445,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[9446,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[9447,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[9448,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[9449,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[9456,"impl-FromIterator%3Ci16%3E-for-Series"],[9457,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[9458,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[9459,"impl-FromIterator%3Ci32%3E-for-Series"],[9460,"impl-FromIterator%3C%26i8%3E-for-Series"],[9461,"impl-FromIterator%3C%26bool%3E-for-Series"],[9462,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[9463,"impl-FromIterator%3C%26i64%3E-for-Series"],[9464,"impl-FromIterator%3C%26u64%3E-for-Series"],[9465,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[9466,"impl-FromIterator%3Cf64%3E-for-Series"],[9467,"impl-FromIterator%3Cu32%3E-for-Series"],[9468,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[9469,"impl-FromIterator%3C%26f32%3E-for-Series"],[9470,"impl-FromIterator%3C%26i32%3E-for-Series"],[9471,"impl-FromIterator%3C%26u16%3E-for-Series"],[9472,"impl-FromIterator%3C%26str%3E-for-Series"],[9473,"impl-FromIterator%3Cu16%3E-for-Series"],[9474,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[9475,"impl-FromIterator%3C%26i16%3E-for-Series"],[9476,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[9477,"impl-FromIterator%3C%26u8%3E-for-Series"],[9478,"impl-FromIterator%3Cf32%3E-for-Series"],[9479,"impl-FromIterator%3Cu64%3E-for-Series"],[9480,"impl-FromIterator%3CString%3E-for-Series"],[9481,"impl-FromIterator%3C%26u32%3E-for-Series"],[9482,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[9483,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[9484,"impl-FromIterator%3Cu8%3E-for-Series"],[9485,"impl-FromIterator%3Cbool%3E-for-Series"],[9486,"impl-FromIterator%3Ci8%3E-for-Series"],[9487,"impl-FromIterator%3C%26f64%3E-for-Series"],[9488,"impl-FromIterator%3Ci64%3E-for-Series"],[9489,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[9490,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[9491,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[9492,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[9493,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[9494,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[9495,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[9496,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[9497,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[9498,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[9499,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[9500,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[9510,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9511,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9512,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9514,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9515,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9516,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9553,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9554,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9555,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9557,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9558,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9559,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9568,"impl-Mul%3CT%3E-for-Series"],[9569,"impl-Mul-for-Series"],[9570,"impl-Mul%3CT%3E-for-%26Series"],[9571,"impl-Mul-for-%26Series"],[9575,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[9576,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[9577,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[9578,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[9579,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[9580,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[9581,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[9582,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[9583,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[9584,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[9585,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[9586,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[9587,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[9588,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[9589,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[9590,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[9591,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[9592,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[9593,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[9594,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[9595,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[9596,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[9597,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[9598,"impl-NamedFrom%3CT,+T%3E-for-Series"],[9599,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[9600,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[9601,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[9602,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[9603,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[9604,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[9605,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[9606,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[9607,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[9608,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[9609,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[9610,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[9611,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[9612,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[9613,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[9614,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[9615,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[9616,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[9617,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[9618,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[9619,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[9620,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[9621,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[9622,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[9623,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[9624,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[9625,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[9631,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9632,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9633,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9635,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9636,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9637,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9645,"impl-Rem%3CT%3E-for-%26Series"],[9646,"impl-Rem%3CT%3E-for-Series"],[9647,"impl-Rem-for-%26Series"],[9671,"impl-Sub-for-Series"],[9672,"impl-Sub-for-%26Series"],[9673,"impl-Sub%3CT%3E-for-%26Series"],[9674,"impl-Sub%3CT%3E-for-Series"],[9699,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[9700,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[9701,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[9702,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAG8Ntg30DfcN+A35DfoN+w0ADgMOCA4JDi4O","e":"OzAAAAEAAEQb7AMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOQAAAD4ABQBIAAIATAAKAFsABgBjAAkAbwAAAHEABQB4AAsAhgACAIsAAACNAAIAkgAGAJoABgCiAAgArgAEALQAAAC5AAcAwgAIAM0AFQDlAAoA8QAQAAYBAAAJAQEADQENAB0BEAA0ARMASgESAF4BEgB1AQAAdwEeAJgBAwCkAREAuQEDAMABAQDFAQEAyAEGANQBJgD9AQcABgIyADsCAQA+AhEAUQIDAFYCBABcAgUAZgIAAGgCGgCFAgcAkQIOAKECAQClAhAAuAIRAMwCBgDXAgEA2wIAAN4CAQDlAgEA6wIHAPUCAQD4AgoABAMEAAoDAAANAygAOAMAADoDIwBgAzQAlwMIAKQDEQC5A1gAHwQSAD0EBwBGBFgAoAQAAKMEFAC8BAMAxAQDAMoEHgDrBBMAAAUHAAkFAAALBQAADQUAAA8FAQATBQ4AIwUAACUFAAAoBQIALAUCADAFAQAzBQgAPQUAAD8FBQBHBQEASgUAAEwFAQBPBQMAVAUDAFkFAgBdBQMAYwUAAGYFAABuBQAAcwUAAHYFAQB7BQEAfgUAAIEFAACJBQAAjwUCAJoFBgCjBQ0AswUFALsFCADHBQIAywUBAM8FAADRBQEA1wUFAOAFAQDpBQEA9QUAAPcFAQD6BQAA/QUAAP8FAAADBgAABQYAAAoGDAAZBgIAJgYAACgGBwAxBgIANwYAADkGAwA+BgEAQQYFAE0GFQBkBgEAaAYEAG4GAwB0BgcAiQYDAI4GBACUBgEAlwYEAJ4GAgCiBgUAqgYAAKwGDAC9BgEAwQYBAMcGAQDKBgEAzQYDANMGAADWBgEA2gYAANwGAQDfBgAA4QYCAOUGCgDxBgAA8wYBAPYGAAD4BgEA+wYAAP0GAQAABwAAAgcBAAgHAAAMBwEAEAcAABMHAAAVBwAAFwcEAB0HAAAgBwcAKQcBACwHBAAyBwAANQcAADcHAgA8BwEAQgcDAEcHAABJBwAASwcBAE4HAABQBwEAUwcAAFUHAQBYBwAAWgcBAF0HAABhByQAhwcWAJ8HZwAJCEwAVwgHAGEIkADzCAYA+wgkACEJAQAkCQ4ANgkBAEUJAwBKCQAATAkCAGUJAQBoCQAAcAkAAHMJAAB1CQYAfQkEAIMJAACFCQQAiwkBAI4JGQCsCQ0AvAkoAOYJAAAQCggAGwoAAB0KAAAfCgMAJAoBACkKAAArCgUAMgoAADUKAQA5CgQAPwoAAEEKDwBTCgAAVgoSAGoKAABtCgwAewoMAIkKAACLCgEAjgoOAJ4KAAClCgAApwoAAKwKDwC+CgAAwAoCAMUKHwDqCo0AeQsBAHwLMgCwCwEAswsIAL0LAAC/CwEAwgsEAMgLAQDNCwAAzwsCANMLAADXCwMA3AsEAOILEAD0Cw8ABQwAAAcMAQAKDAcAFQwEABsMEwAwDAAAMwwAADYMCgBCDAIASwwQAF4MEAB2DAEAegwCAH4MAACADAAAhQwDAI0MAACPDAIAoAwAAKIMAACkDAEAqwwMAL4MAgDRDAEA3gwBAOIMAADoDAAA8QwBAPQMAAD3DAEA/gwAAAANBAAIDQYAEQ0JABwNAAAfDQEAIw0EAC8NDQA+DQIAQw0KAE8NAQBSDQMAVw0DAFwNCQBnDQcAcA0BAHMNGACNDSgAtw0GAMINAQDFDQEAyQ0AAMsNAwDRDQEA1g0HAOYNDQD1DQEA/A0DAAEOAQAFDgIACg4AAAwOHwAvDgwAPg4FAEUOBwBODiMAdA4LAIEODgCRDgAAkw4AAJUOAwCcDgYApg4OALcOBgDADgAAww4HAMwOAQDQDgMA1Q4FANwOAADhDgkA7A4BAPAOAQDzDgEA9g4KAAIPAAAFDwAABw8LABQPBwAdDwIAJA8AACcPAAAvDwIANg8AADkPAQA/DwkASg8IAFUPBwBeDwEAYQ8DAGkPAwBwDwIAdw8DAHwPAAB+DwoAiw8JAJgPAQCcDwAAnw8AAKEPAACjDwIApw8EAK0PAgCzDwEAuA8AALoPAQC+DwAAwA8EAMcPDADVDwAA2A8BANsPAwDhDwMA5w8OAPcPBwABEAAAAxABAAcQAAAJEAEADRAAAA8QAQATEAAAFRADABsQAQAeEAIAJRAAACcQAwAsEAIAMBAFADgQBQBAEAAARBAAAEcQAABJEAAASxABAE4QAQBREAEAVhAAAFgQCgBmEAUAbRAHAHcQAgB7EAUAhRABAIgQAACKEAEAjRADAJMQAQCWEAIAmhAAAJwQAwCiEAQAqBADAK0QAgCxEAAAsxABALYQAQC5EAAAuxAAAL4QAADBEAIAxhADAMsQBwDVEAIA3BAAAN4QBQDlEAIA6RAAAOsQAwDxEAEA9BADAPkQAgD9EAIAAREdACAREQAzEQUAOhEDAEERAQBFEQAARxEFAE4RBABUEQAAVhEBAFoRAQBfEQEAZBEDAGwRBQBzEQMAehEBAH0RBgCFEQEAiREBAI8RBACVEQUAnREAAJ8RAQCjEQAApREBAKkRAACrEQEArxEAALERBAC3EQMAvBEAAMERBwDKEQAAzREDANMRAgDXEU8AKBIDADESAAA2EgUAPhIAAEQSAABHEgAASRIAAEsSAABOEgUAWBIAAFwSAABjEgAAZxIAAHMSAQB2EgQAfBIAAH4SAgCCEgEAiBICAI0SBACTEgAAlRIBAJ0SDACsEtwAihMAAIwTAACOEwEAkRMAAJMTAgCaEwEAoBMAAKITAACsEwAAsBMBALwTQgAAFAoADBROAFwUAgBhFAIAZhQAAGoUCgB4FAIAfxQAAIEUAACLFAEAjxQAAJUUAACXFAEAnBQBAKsUAACxFAAAthQCALwUAAC+FAQAxRQmAO0U5ADUFQAA2RUEAOAVAgDoFTIAHBYsAEoWDABbFgEAYBYAAGYWAQBpFh0AiBYSAJwWBwCnFokAMxcAADkXAAA8FwAAPxcFAEYXAABKFwAAUBcAAFIXAABaFwAAXRcAAGYXAABpFwIAbhcFAHUXAQB5FwAAexcDAIMXAACHFwAAixdRAN4XAQDiFwAABRgAABkYAQAgGAAANBgEADoYBwBFGAkAUBgAAFIYAgBaGAAAahgAAHoYAgB+GAIAghgBAIYYAACLGAAAjhgEAJQYAACaGAEAnhgBAKQYBQCrGAIArxgCALQYAAC2GAAAuxgAAMQYAADHGAEAyhgCAM8YAADRGAAA1RgBANkYAwDiGAAA8Bg0ACgZAgAvGQAAMRkAADMZAwA5GQAAOxkAAD4ZAABEGQIASRlvALsZAADAGQEAMBoAADIaBQA5GgEAPBoDAEEaAgBFGgEASRoAAEwaAQBSGgAAWhoAAFwaAABfGgUAZxoCAHgaAQB7GgEAhBoAAIYaAQCJGgAAjRoCAJMaAACVGgEAmRoAAJ4aAQCiGgEAqBoAAKoaAwCwGg4AxhoAAMoaAQDRGgAA1BoFAN0aAADkGgEA9hoAAP4aAAABGwEABRsBAAgbAAALGwAADxsAABQbAAAXGwAAHBsAAB4bAQAkGwgAMxsGAD8bAABBGwAARRsAAEsbAABNGwMAVRsBAFgbAQBbGwAAXhsHAGcbAABqGwAAbBsAAG4bAwB/GwAAghsBAI0bAwCVGwIAoRsCAKUbAACwGwAAshsCALYbBAC9GwQAxxsDAMwbAADPGwAA0RsCANkbAADmGwAA6RsAAOsbAgDvGwMA9RsEAPsbBAAGHAAACBwAAAwcAAAPHAIAFRwAABkcAAAbHAAAHRwBADEcAAA2HAAAQBwCAEQcBABLHAAATRwAAFAcAABWHAAAWRwBAFwcAQBfHAAAYxwAAGUcAQBoHAAAahwBAHEcAwB4HAAAhBwAAIYcAACNHAIAlBwAAJYcAACaHAAAnBwBAKEcAACjHAAAqRwJALQcAAC2HAAAuRwAAMAcAADCHAAAyRwAANAcCgDdHAIA4hwCAOwcAAD7HAAA/RwAAAAdAgAEHQMACh0BAA4dAAASHQAAFh1QAGkdBwByHQAAeB0LAIcdAACJHX0ACR4AAA0ebAB8HgAAfh4DAIseAACNHgAAkB5rAP0eAQAKHwAAEB8FABcfAAAaHwAAHB8AAB4fAAAhHwAAKB8AACofAAAsH2wAoR8DAK0fAACwHwAAsx8AALUfAQDBHwAAyh8AANYfAADcHwAA6B8BAPkfAAD7HwAA/R8AAAAgAAAIIAIADCAFAB8gAAAqIAAALSAAADEgAAA3IAAARiABAEwgAQBRIBQAaiABAG0gTQC9IAAAvyAAAMEgAQDEIAEAxyAEAM0gJAD0IAUA+yAJAAYhAgAMIQAADiEDABMhAQAWIQUAICESADQhAQA3IQIAPCEAAD8hAwBEIQgAUiEBAFUhAABYIQEAWyEAAF8hBQBmIQAAayEAAHAhAAB/IQIAjiEHAKEhCACuIQAAsCELAL0hAgDBIREA1CEBANchDwDoIRcAAiIAAAQiAgAJIgwAFyIGAB8iBAAmIgIAKiIFADIiAAA0IgwARSIBAEkiAQBPIgEAUiIBAFUiAwBbIgAAXiIBAGIiAABkIgEAZyIAAGkiAgBtIgoAeSIAAHsiAQB+IgAAgCIBAIMiAACFIgEAiCIAAIoiAQCQIgAAlCIBAJgiAACbIgAAnSIAAJ8iBAClIgAAqCIHALEiAQC0IgQAuiIAAL0iAAC/IgIAxCIBAMoiAwDPIgAA0SIAANMiAQDWIgAA2CIBANsiAADdIgEA4CIAAOIiAQDlIgAA6SIRAPwiBgAFIwAACCMQABojCAAkIwEAJyMIADEjAAAzIwEAOSMAADsjBABEIwEATSMCAFMjAABVIwAAXyMAAG4jAwB2IwoAgiMAAIQjCACPIwMAlSMRAKgjAACqIyQA0yMDANsjGgD3IwIA/iMAABEkAwAXJAcALCQEADMkAAA8JAAAPiQBAEUkBwBTJAoAZyQDAGwkAABuJAAAcCQAAHIkAgB2JAQAfiQDAIMkAQCHJAAAjSQEAJYkAgCaJAYApCQCAKskAgCvJAEAtSQOAMckAQDKJAAAzCQAAM8kAQDTJAIA4CQDAOYkBADuJAAA8CQuACIlAAAnJQEAKyUAAC0lAAAvJQAANSUBADglAgA+JQMASSUCAFAlAABTJQEAViUBAFwlAABhJQMAaCUHAHElKQCdJQEAoCUAAKIlAACkJQEAqSUBAK4lAgCzJQAAtSUAALglAQC9JQEAwSUAAMUlAADIJQMA0CUAANslAADdJQEA4CUOAPUlAQD5JQIA/SUAAP8lFgAYJgEAHCYOACwmAQAvJgUANiYKAEImAABEJgAARiYEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNCHHHKHHHHGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFIPPFPPPPIFPPPIFKPFRRSIIIKKIFPPPIFPPPIFPPPIFPPPIFPPPPPPPPIFPFKPPPPPPPRFPPPKPPIPFFPRIIIIIKKKKRGPKPPIPFPRPPPFGIPRPPPIFPPPIFPPPIFPPPIFPPPPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNFFFKGPFPPPGNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPIFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPEPIPPPKKKPFPIIGKEEPPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNOONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNNKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHENNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_as_series","mean","mean","median","median_as_series","min","min","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","upstream_traits","value_unchecked","var","var_as_series","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","PolarsAsRef","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","Field","FieldRef","FixedSizeBinary","FixedSizeList","Flat","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Nested","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","String","String","StringChunked","StringOwned","StringType","Struct","Structure","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_decimal","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_as_series","max_as_series","max_as_series","mean","median","median","median_as_series","median_as_series","merge_dtypes","min","min_as_series","min_as_series","min_as_series","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_as_series","quantile_as_series","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_as_series","std_as_series","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_as_series","sum_as_series","sum_as_series","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_as_series","merge_map","min_as_series","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Duplicate","Err","ErrString","InvalidOperation","Io","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_lengths","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","Io","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_as_series","max_as_series","median_as_series","metadata","metadata","min_as_series","min_as_series","min_periods","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_as_series","prod_as_series","provide","ptr_eq","quantile_as_series","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","source","std_as_series","store","string_cache","strong_count","sum_as_series","sum_as_series","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_as_series","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","wrap_msg","write","write_vectored","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","new","new_inserting_at_index","remove","rename","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_as_series","max_as_series","mean","mean","mean_as_series","median","median","median_as_series","median_as_series","min","min_as_series","min_as_series","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_as_series","std_as_series","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_as_series","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[476,"polars_core::chunked_array::arithmetic"],[504,"polars_core::chunked_array::builder"],[608,"polars_core::chunked_array::builder::list"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::iterator"],[815,"polars_core::chunked_array::iterator::par"],[817,"polars_core::chunked_array::object"],[888,"polars_core::chunked_array::object::builder"],[911,"polars_core::chunked_array::object::registry"],[939,"polars_core::chunked_array::ops"],[1062,"polars_core::chunked_array::ops::arity"],[1097,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1099,"polars_core::chunked_array::ops::gather"],[1102,"polars_core::chunked_array::ops::search_sorted"],[1131,"polars_core::chunked_array::ops::sort"],[1138,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1139,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1146,"polars_core::chunked_array::ops::sort::options"],[1219,"polars_core::chunked_array::temporal"],[1220,"polars_core::chunked_array::temporal::conversion"],[1223,"polars_core::chunked_array::upstream_traits"],[1224,"polars_core::config"],[1228,"polars_core::datatypes"],[2563,"polars_core::datatypes::categorical"],[2701,"polars_core::datatypes::categorical::revmap"],[2753,"polars_core::datatypes::categorical::string_cache"],[2772,"polars_core::datatypes::revmap"],[2778,"polars_core::datatypes::string_cache"],[2782,"polars_core::error"],[2844,"polars_core::error::constants"],[2847,"polars_core::export"],[2855,"polars_core::fmt"],[2885,"polars_core::frame"],[3149,"polars_core::frame::explode"],[3178,"polars_core::frame::group_by"],[3414,"polars_core::frame::group_by::GroupByMethod"],[3415,"polars_core::frame::group_by::GroupsProxy"],[3417,"polars_core::frame::group_by::aggregations"],[3430,"polars_core::frame::group_by::expr"],[3433,"polars_core::frame::row"],[3527,"polars_core::functions"],[3529,"polars_core::hashing"],[3577,"polars_core::prelude"],[4132,"polars_core::prelude::default_arrays"],[4138,"polars_core::prelude::list"],[4161,"polars_core::prelude::null"],[4191,"polars_core::prelude::revmap"],[4197,"polars_core::prelude::slice"],[4200,"polars_core::prelude::string_cache"],[4204,"polars_core::prelude::utf8"],[4208,"polars_core::random"],[4209,"polars_core::schema"],[4281,"polars_core::series"],[4662,"polars_core::series::arithmetic"],[4687,"polars_core::series::arithmetic::checked"],[4695,"polars_core::series::ops"],[4721,"polars_core::series::unstable"],[4745,"polars_core::utils"],[4853,"polars_core::utils::flatten"],[4858,"dyn_clone::sealed"],[4859,"num_traits"],[4860,"num_traits::cast"],[4861,"core::option"],[4862,"core::iter::traits::iterator"],[4863,"core::ops::function"],[4864,"core::marker"],[4865,"core::ops::function"],[4866,"alloc::vec"],[4867,"core::iter::traits::double_ended"],[4868,"core::iter::traits::collect"],[4869,"core::fmt"],[4870,"core::fmt"],[4871,"core::result"],[4872,"polars_utils::iter::fallible"],[4873,"polars_arrow::bitmap::immutable"],[4874,"rayon::iter"],[4875,"polars_arrow::trusted_len"],[4876,"core::marker"],[4877,"bitflags::iter"],[4878,"bitflags::iter"],[4879,"core::iter::adapters::map"],[4880,"num_traits::cast"],[4881,"core::ops::range"],[4882,"rayon::iter"],[4883,"polars_utils::hashing"],[4884,"ndarray::aliases"],[4885,"ndarray::aliases"],[4886,"core::any"],[4887,"core::ops::function"],[4888,"core::clone"],[4889,"alloc::boxed"],[4890,"polars_arrow::array::boolean"],[4891,"core::any"],[4892,"polars_arrow::bitmap::utils::zip_validity"],[4893,"polars_arrow::offset"],[4894,"core::hash"],[4895,"core::error"],[4896,"polars_arrow::array::primitive"],[4897,"polars_row::row"],[4898,"chrono::naive::datetime"],[4899,"alloc::borrow"],[4900,"bytemuck::zeroable"],[4901,"core::convert"],[4902,"polars_arrow::types"],[4903,"core::borrow"],[4904,"smartstring::alias"],[4905,"core::cmp"],[4906,"polars_arrow::datatypes::physical_type"],[4907,"polars_utils::idx_vec"],[4908,"rayon::iter::plumbing"],[4909,"core::iter::adapters::copied"],[4910,"core::iter::adapters::zip"],[4911,"polars_utils::float"],[4912,"polars_arrow::types::native"],[4913,"polars_arrow::array::binary"],[4914,"hashbrown::map"],[4915,"core::hash"],[4916,"std::os::fd::owned"],[4917,"std::os::fd::owned"],[4918,"core::mem::maybe_uninit"],[4919,"core::cmp"],[4920,"alloc::sync"],[4921,"polars_arrow::scalar"],[4922,"core::cmp"],[4923,"std::io::error"],[4924,"alloc::collections"],[4925,"simdutf8::basic"],[4926,"regex::error"],[4927,"alloc::borrow"],[4928,"std::ffi::os_str"],[4929,"std::ffi::os_str"],[4930,"core::ffi::c_str"],[4931,"polars_arrow::buffer::immutable"],[4932,"polars_arrow::array::list"],[4933,"core::cmp"],[4934,"core::error"],[4935,"std::io"],[4936,"std::io"],[4937,"std::io"],[4938,"polars_arrow::array::utf8"],[4939,"polars_arrow::datatypes::schema"],[4940,"polars_arrow::datatypes"],[4941,"polars_arrow::legacy::trusted_len::rev"],[4942,"smartstring::config"],[4943,"smartstring"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,79,79,14,14,0,79,79,5,14,5,5,5,5,5,5,5,5,14,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,14,14,5,14,14,14,14,5,14,14,5,79,14,5,79,14,0,0,5,5,5,5,5,5,5,5,5,5,14,5,14,0,0,14,5,14,5,5,14,5,79,14,5,79,14,14,5,5,5,5,5,5,5,79,14,5,14,14,5,5,5,5,5,14,5,5,5,0,5,5,14,14,14,14,14,5,5,5,5,79,14,14,14,14,14,5,5,5,5,5,14,5,5,5,14,5,5,5,5,14,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,5,5,5,5,5,5,5,5,5,5,79,14,5,5,14,14,14,5,79,14,5,5,5,14,5,5,14,5,14,5,5,5,5,5,5,5,5,5,14,14,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,5,5,5,5,5,5,5,5,5,14,5,5,5,5,14,5,5,5,5,5,5,5,5,5,5,5,5,14,14,5,5,5,5,14,5,5,5,5,5,0,5,5,5,5,5,5,5,14,5,5,5,14,5,5,5,5,5,5,5,5,5,5,5,79,14,5,5,79,14,5,5,79,14,14,5,5,5,0,5,5,5,5,79,14,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,0,112,114,115,116,111,112,114,115,116,112,111,111,112,114,116,112,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,111,112,112,118,119,114,115,116,112,114,115,116,120,120,120,120,112,114,115,116,112,114,115,116,0,112,114,115,116,111,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,112,114,115,116,0,0,0,0,0,0,0,0,121,121,122,123,124,124,125,121,122,126,127,123,128,124,121,121,125,124,125,121,122,126,127,123,128,124,124,126,127,126,127,121,122,126,127,123,128,124,121,122,126,127,123,128,124,124,121,122,121,122,126,127,123,128,124,121,122,126,127,123,128,124,121,122,126,127,123,128,124,126,127,123,124,125,126,127,123,124,125,121,122,128,125,121,122,126,127,123,128,124,0,121,122,126,127,123,128,124,126,127,123,124,125,121,122,126,127,123,128,124,121,122,126,127,123,128,124,124,121,122,126,127,123,128,124,121,122,126,127,123,128,124,121,122,126,127,123,128,124,121,122,126,127,123,128,124,0,0,130,131,130,131,131,131,130,131,130,131,131,131,0,132,0,0,0,134,135,134,135,134,135,134,135,134,135,134,135,134,135,134,135,134,135,134,134,135,134,135,0,134,135,134,135,134,135,134,135,134,135,0,0,0,0,0,0,136,136,136,136,136,62,136,136,136,136,0,136,136,136,136,136,136,62,62,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,136,136,136,136,136,62,136,136,136,136,136,136,136,136,136,62,63,136,136,136,136,136,136,136,136,136,136,136,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,0,0,146,146,146,147,147,147,147,147,147,147,147,0,0,0,147,147,0,147,0,146,147,147,147,147,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,151,0,0,157,156,156,156,156,156,383,156,383,156,156,151,152,152,151,151,153,153,154,0,156,156,155,155,156,156,156,156,156,156,157,157,158,158,0,160,161,0,156,156,0,162,163,0,164,164,157,157,156,156,156,166,167,157,157,168,168,169,168,168,154,170,157,157,158,169,171,172,173,173,0,173,174,175,0,153,153,176,168,177,178,179,156,156,156,156,154,176,156,0,180,0,185,183,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,187,187,0,187,0,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,0,187,187,187,187,187,0,0,0,0,0,188,188,0,0,0,0,0,0,0,0,0,0,0,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,37,37,39,39,39,37,39,37,37,39,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,188,188,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,37,39,39,39,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,60,34,137,0,34,0,0,60,0,137,60,34,137,0,0,0,60,34,0,0,0,0,0,0,0,0,34,137,137,0,34,0,60,34,137,137,0,0,137,34,137,0,60,34,137,0,0,137,137,0,137,60,34,137,0,0,60,34,137,0,0,0,249,0,384,385,0,0,0,0,0,0,0,0,60,34,137,0,0,60,34,137,0,0,60,34,137,0,0,60,34,137,0,0,137,137,137,137,250,60,34,137,0,0,249,0,0,137,222,210,222,210,222,210,6,0,60,34,137,0,60,34,0,60,0,0,250,22,0,0,0,0,0,0,0,0,0,227,0,222,0,60,34,0,60,0,137,22,34,137,137,0,0,0,137,227,60,34,137,0,0,60,34,137,0,0,60,34,137,0,0,60,34,137,0,0,137,34,137,137,137,182,182,22,182,208,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,36,68,48,48,102,102,102,40,40,40,60,67,89,88,83,85,29,28,30,31,13,36,48,102,40,145,48,48,36,36,48,48,36,48,102,40,145,36,36,195,196,48,102,40,48,102,40,102,40,102,36,36,48,102,40,145,36,48,102,40,145,48,102,40,191,48,102,40,191,48,102,40,145,197,197,198,198,102,60,199,182,36,48,48,48,48,48,48,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,34,0,207,68,36,48,102,40,191,60,36,48,102,40,191,0,67,89,88,83,85,29,28,208,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,208,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,94,223,223,223,223,34,34,34,0,94,60,34,137,208,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,208,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,68,67,89,88,83,85,29,28,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,207,68,60,94,60,34,34,94,210,137,222,60,36,48,102,102,40,40,36,48,102,102,40,40,60,60,60,34,34,34,94,94,94,210,210,210,137,137,137,222,222,222,36,102,208,48,40,36,48,102,40,191,145,206,36,102,40,145,209,60,60,34,34,94,210,210,137,222,36,208,386,21,4,67,61,209,60,60,60,34,34,34,34,94,94,94,210,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,137,137,222,34,36,36,36,48,102,102,40,40,145,48,102,40,145,36,36,48,102,102,40,40,191,191,145,48,102,40,145,94,36,48,48,102,102,40,40,48,102,40,145,48,102,40,145,48,182,182,182,36,48,102,40,191,145,182,36,48,102,40,191,145,36,182,68,207,207,36,48,102,40,191,145,68,207,207,36,48,102,40,191,145,36,22,4,67,61,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,36,145,145,60,235,182,36,102,191,36,48,102,40,191,145,36,48,102,102,40,40,36,48,102,102,40,40,60,34,210,137,222,60,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,36,34,137,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,236,236,36,48,102,40,191,145,68,236,60,34,34,34,60,34,60,34,60,34,34,34,34,34,60,34,60,34,60,34,34,34,34,60,34,34,34,60,34,137,182,182,36,48,102,102,40,40,36,48,102,102,40,40,0,0,34,48,48,102,40,48,195,196,195,196,0,48,48,102,40,48,68,67,89,88,83,85,29,28,102,40,94,94,384,385,246,102,102,102,102,40,40,40,40,145,145,94,145,36,48,102,40,191,145,145,145,48,48,36,48,102,102,40,40,36,48,102,102,40,40,36,102,36,102,36,102,60,210,68,208,195,196,195,196,48,67,89,88,83,85,29,28,36,48,102,40,191,145,0,68,208,48,102,40,48,102,40,48,102,40,36,36,94,36,48,102,40,191,145,36,48,102,40,191,145,48,102,40,191,48,102,40,191,195,196,60,0,68,67,89,88,83,85,29,28,48,48,102,40,102,40,34,94,210,34,210,102,36,137,36,208,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,34,137,40,60,34,210,36,36,197,197,198,198,223,223,223,223,60,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,34,36,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,137,48,102,40,145,182,182,34,182,195,196,48,239,240,225,241,242,243,244,245,236,195,196,102,40,191,145,48,239,240,225,241,242,243,244,245,236,195,196,102,40,191,145,208,386,21,4,67,61,209,60,34,94,210,211,212,89,88,213,214,83,85,29,28,215,216,217,218,219,220,30,31,221,13,137,222,384,385,246,38,182,36,0,0,0,0,0,249,0,250,249,250,0,205,205,247,205,247,247,205,247,251,248,205,247,251,248,205,0,205,205,205,248,247,251,248,205,247,251,248,205,247,247,251,248,205,205,205,205,205,205,205,205,206,247,248,247,251,248,205,205,205,205,205,205,205,205,205,205,205,205,205,205,247,251,248,205,247,251,248,205,251,205,205,205,205,205,205,205,205,205,205,205,0,0,205,248,205,205,205,247,248,251,205,205,205,205,205,205,205,205,0,251,205,205,0,205,205,205,205,205,247,251,248,205,247,251,248,205,247,251,248,205,205,205,205,247,251,248,205,0,249,250,249,250,0,250,249,250,249,250,249,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,249,249,249,250,249,250,249,249,249,249,249,250,249,250,249,250,249,250,249,250,249,0,254,254,254,254,254,0,254,254,0,254,254,254,254,254,254,254,0,254,0,249,250,249,250,0,0,0,0,0,256,193,193,193,10,0,193,193,256,193,10,193,0,0,0,193,193,193,193,193,256,255,256,255,256,255,0,256,255,255,256,255,256,255,0,256,255,255,256,255,255,0,256,255,256,255,0,0,0,0,0,0,0,255,256,255,256,255,256,255,256,255,0,0,0,0,0,0,0,0,0,0,0,0,258,258,258,258,258,258,258,258,258,258,0,258,0,0,0,0,0,258,258,0,0,0,0,0,258,258,258,258,258,264,0,0,264,263,264,264,0,0,263,0,0,263,264,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,274,275,263,264,253,274,275,263,264,253,253,263,264,253,263,264,253,253,253,264,253,274,275,263,264,253,274,275,263,264,253,253,253,253,274,275,263,264,253,253,253,253,253,253,253,253,264,253,253,253,264,264,264,253,0,253,253,253,253,253,253,263,264,253,253,274,275,263,264,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,0,253,253,253,264,253,253,253,253,253,253,253,253,253,253,253,253,253,253,274,275,263,264,253,253,274,275,263,264,253,274,275,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,274,275,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,0,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,274,275,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,263,264,253,253,253,253,253,253,274,275,263,264,253,253,253,253,253,274,275,263,264,253,274,275,263,264,253,253,253,253,253,253,274,275,263,264,253,253,253,253,253,253,253,0,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,0,285,285,0,0,285,0,0,0,0,0,0,289,12,0,285,0,285,285,285,285,285,285,285,285,285,289,12,0,285,285,285,283,12,268,285,268,0,283,268,12,289,294,287,286,283,12,268,285,289,294,287,286,283,12,268,285,283,12,268,285,283,12,268,285,268,283,12,289,294,287,286,286,283,12,268,285,289,294,287,286,283,12,268,285,268,287,289,294,287,286,283,283,12,268,285,283,12,283,283,283,12,12,12,0,289,283,268,283,283,12,268,285,285,0,289,294,287,286,283,283,283,283,12,12,268,285,283,283,283,12,268,268,12,12,291,291,268,12,289,294,287,286,283,12,268,285,289,294,287,286,283,12,268,285,12,294,283,283,287,283,283,289,12,283,283,12,268,268,268,289,12,268,268,268,268,268,283,268,294,294,268,283,12,268,268,12,283,12,268,268,12,12,268,268,283,12,268,285,285,289,294,287,286,283,12,268,285,289,294,287,286,283,12,268,285,289,294,287,286,283,12,268,285,12,12,12,268,289,294,287,286,283,12,268,285,387,388,388,0,0,0,0,0,0,0,0,0,0,300,301,301,0,302,302,303,304,0,0,303,304,303,304,303,304,303,304,303,304,303,304,0,303,304,303,304,303,304,303,304,267,303,304,304,303,304,267,303,304,267,303,304,267,303,304,267,0,267,303,304,267,303,304,267,303,304,267,267,267,267,267,267,303,303,304,304,267,0,303,304,267,303,304,267,303,304,303,304,267,303,304,0,0,0,303,304,267,303,304,267,303,304,267,303,304,267,303,304,267,0,0,0,0,0,0,0,0,0,0,306,307,306,307,306,306,307,306,307,306,307,306,307,306,307,307,307,307,306,307,306,307,0,306,307,306,307,306,307,310,310,310,310,306,307,306,306,306,306,306,0,0,0,0,0,0,0,0,0,280,0,0,0,0,0,0,0,0,0,0,0,193,193,0,193,0,344,10,280,0,0,0,249,0,93,0,0,0,0,0,0,193,193,0,0,0,344,250,0,93,0,0,0,0,0,0,249,93,0,93,0,0,93,0,193,0,297,344,320,0,0,0,0,10,193,250,0,0,0,0,0,0,0,0,344,320,0,0,0,0,193,193,0,0,193,0,297,0,193,0,193,0,0,0,105,317,143,95,280,229,266,93,318,319,320,143,143,143,143,143,143,143,193,105,317,143,143,95,280,344,229,266,93,318,319,320,193,105,317,143,95,280,344,229,266,93,318,319,320,0,143,95,316,316,105,317,143,95,280,229,266,93,318,319,320,105,317,143,95,280,229,266,93,318,319,320,143,223,223,223,223,143,0,229,229,0,318,143,143,143,95,280,229,266,93,0,193,105,317,143,143,95,280,344,229,266,93,318,319,320,193,105,317,143,95,280,344,229,266,93,318,319,320,143,0,143,143,143,193,105,317,143,143,95,280,344,229,266,93,318,319,320,105,143,143,143,280,229,266,93,320,105,105,105,143,143,143,280,280,280,229,229,229,266,266,266,93,93,93,320,320,320,317,266,266,206,143,193,193,105,317,143,143,143,280,229,266,93,318,319,320,95,193,193,193,193,193,105,105,317,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,95,280,344,229,266,266,93,318,319,320,339,341,342,143,143,389,389,389,389,389,143,143,143,344,345,143,143,143,266,44,143,347,143,280,229,93,320,105,143,143,266,0,193,105,317,143,95,280,344,229,266,93,318,319,320,105,317,319,193,105,317,143,95,280,344,229,266,93,318,319,320,143,143,143,266,317,105,229,143,105,143,143,266,0,143,0,0,143,350,350,351,229,266,350,350,95,229,143,352,353,143,229,143,143,143,143,143,143,143,143,143,143,0,105,317,143,143,143,0,0,0,0,319,350,350,143,143,351,143,143,143,143,143,0,143,0,188,188,193,143,359,317,0,143,350,350,105,105,317,143,95,280,229,266,93,318,319,320,193,143,223,223,223,223,193,105,317,143,143,95,280,344,229,266,93,318,319,320,193,105,317,143,95,280,344,229,266,93,318,319,320,352,143,143,143,143,143,143,143,143,143,193,105,317,143,95,280,344,229,266,93,318,319,320,143,0,359,193,105,317,143,95,280,344,229,266,93,318,319,320,143,95,95,229,266,193,143,143,0,0,0,339,341,342,0,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,0,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,0,249,250,249,250,0,0,188,188,0,0,0,0,0,0,390,391,0,0,0,0,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,369,261,261,369,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,369,261,261,261,261,261,64,64,0,64,64,0,0,0,64,64,0,0,0,0,64,9,349,349,9,9,9,9,9,9,9,349,349,349,349,0,9,349,349,349,9,349,349,9,349,349,9,9,9,349,349,349,349,349,349,9,371,64,9,371,64,9,349,9,9,9,349,349,9,9,349,349,349,9,9,64,9,349,64,9,9,9,9,371,64,9,9,371,64,9,9,9,9,9,9,371,64,9,349,349,349,349,64,9,9,9,9,9,9,9,9,9,64,64,64,9,9,9,9,9,9,349,349,9,349,9,64,9,9,9,371,64,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,349,9,9,349,349,349,349,349,349,9,9,9,9,9,9,349,64,9,9,9,9,9,9,0,9,371,64,9,371,64,9,9,371,262,9,349,349,9,9,9,9,349,349,262,262,9,9,9,349,349,349,9,9,9,9,9,9,9,9,349,349,349,349,9,349,349,349,349,9,349,349,9,9,9,9,349,349,349,349,349,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,349,9,371,9,9,9,9,9,9,9,349,0,9,9,349,349,349,9,9,9,349,9,9,349,64,349,349,9,9,9,349,349,349,9,9,371,349,9,349,349,349,349,349,349,9,9,9,9,9,9,9,9,9,9,349,349,349,9,9,349,9,9,9,9,64,9,9,9,9,371,64,9,9,9,9,9,371,64,9,371,64,9,9,9,9,9,349,349,9,349,0,349,349,349,349,371,64,9,9,9,9,0,0,0,373,373,374,11,11,0,373,374,11,11,373,374,11,11,373,374,11,11,373,374,11,11,0,0,316,42,42,316,42,42,375,375,0,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,377,0,0,0,0,0,0,0,376,0,0,0,380,189,377,380,189,377,377,377,0,0,376,376,0,0,376,380,380,189,189,377,380,189,189,377,380,189,377,0,0,0,380,380,380,380,0,376,380,189,377,189,189,189,379,189,189,189,189,189,0,0,0,380,380,189,377,380,189,377,189,377,276,377,377,189,377,377,377,0,377,0,0,0,377,376,380,189,377,0,380,189,377,380,189,377,380,189,377,0,0,0,0,0,0],"f":"`````````````{{}b}``0``````````````{{}d}``````````````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{nA`}{}}0{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}Ah}Abl}{{{j{Aj}}}d}{{}Al}{{{j{Aj}}}{{An{d}}}}{{{j{h}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{j{h}}Bf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}42{{{j{c}}{j{c}}}b{{Bl{}{{Bh{Bj}}}}}}{{{j{c}}e}{{j{c}}}l{{C`{An}{{Bn{An}}}}Cb}}{{{j{h}}c}{{j{h}}}{{Cf{Cd}{{Bn{Ab}}}}}}{{{j{h}}e}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{{j{Ch}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{Cj}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{c}}g}{{j{i}}}Bl{}{{Cf{An}{{Bn{{An{e}}}}}}}Bl}{{{j{c}}e}{{j{c}}}l{{C`{}{{Bn{}}}}Cb}}{{{j{c}}C`}{{j{c}}}l}{{{j{c}}C`}{{j{e}}}lBl}{{{j{c}}e}bl{{C`{}{{Bn{}}}}Cb}}{{{j{Cl}}c}{{j{Cl}}}{{Cf{Bf}{{Bn{Bf}}}}}}{{{j{Cn}}c}{{j{Cn}}}{{Cf{{Db{D`}}}{{Bn{{Db{D`}}}}}}}}{{{j{c}}Ddg}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{Cl}}c}{{j{Cl}}}{{Cf{BfDf}}}}{{{j{h}}C`}{{Ad{Dh}}}}{{{j{c}}g{Db{e}}}bl{}{{C`{Ane}{{Bn{e}}}}}}9{{{j{c}}g}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{c}}Dj}Dll}{{{j{c}}{Db{Ab}}Dn}{{Ad{Dl}}}l}{{{j{c}}}{{Ad{Dl}}}l}`{{{j{Cl}}}E`}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}DdBl}{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}BlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{{j{c}}{j{c}}}eEb{}}{{AlAl}Al}{{AlAl}b}210{AlD`}0321{ce{}{}}00000``{{{j{c}}Dd}{{Ad{Ab}}}l}{{{j{c}}e}{{j{g}}}l{{C`{}{{Bn{}}}}Cb}l}1{{{j{c}}Ab}{{Ad{Ab}}}Ed}{{{j{c}}e}{{Ad{Ab}}}EdA`}{{{j{c}}}EfBl}{{{j{c}}}{{Ej{Eh}}}Bl}0=={AlAl}{{ce}b{}{}}0``1{{{j{c}}}{{Ad{Db}}}l}{{AlAl}d}{{{j{c}}}{{`{{El{}{{B`{Db}}}}}}}l}{{}{{j{c}}}Bl}{{}Al}{Enc{}}00000{{AlAl}Al}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{nA`}{}}0{{{j{c}}Ab}{{Ad{Ab}}}Af}{Enb}{{{j{c}}}bBl}11{{{j{c}}}DdBl}8;{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{c}}{j{c}}}bl}{{Alc}b{{Fb{}{{B`{Al}}}}}}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}F`}{{Ad{{j{c}}}}}l}{{{j{c}}}{{An{En}}}Bl}`{{{j{Aj}}Fd}Ff}{{{j{c}}Fd}Ffl}{{AlFd}Ff}0000{{{j{c}}e}bBl{{Cf{An}}}}{{{j{h}}c}b{{Cf{{An{Cd}}}}}}{c{{j{e}}}Fh{{Bl{}{{Fj{c}}}}}}{cc{}}00{D`{{An{Al}}}}{D`Al}00{{Bfc}{{j{e}}}Fb{{Bl{}{{Fj{}}}}Bl}}{{{j{c}}e}{{j{c}}}{{Bl{}{{Fj{}}}}Bl}Fb}{{Bf{Ej{Eh}}}{{j{c}}}Bl}{{Bf{Ej{Eh}}Dd}{{j{c}}}Bl}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}0{c{{j{Aj}}}{{Fb{}{{B`{{An{d}}}}}}}}{c{{j{e}}}{{Fb{}{{B`{An}}}}}l}{c{{j{e}}}{{Fb{}{{B`{{Gb{Ej{An{G`}}}}}}}}}l}{cAl{{Fb{}{{B`{Al}}}}}}{{Bfc}{{j{e}}}{{Bd{}{{B`{An}}}}}l}43{{Bfc}{{j{e}}}{{Bd{}{{B`{}}}}}l}{Bf{{An{Al}}}}{c{{j{e}}}{{Gd{}{{B`{An}}}}}l}{{BfDb}{{j{c}}}l}{{Bf{Db{An}}}{{j{c}}}l}{c{{j{e}}}{{Gf{}{{B`{An}}}}}l}{{BfEj}{{j{c}}}l}{{BfEj{An{G`}}}{{j{c}}}l}{{BfEn}{{j{c}}}l}0{{{j{c}}En}{{j{c}}}Bl}{{BfEnDd}Dh}{{{j{c}}En}AnBl}{{{j{c}}En}{{Ad{Gh}}}l}{{{j{c}}En}Ghl}{{{j{h}}En}{{An{Ab}}}}{{{j{c}}}AlBl}{{{j{h}}}Ab}{{{j{{Gj{c}}}}En}{{An{Gl}}}Gn}0{AlH`}7{{{j{c}}dd}{{Ad{Ah}}}l}{{{j{c}}EndEn}AhEb}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{c}}}dBl}{{{j{c}}{An{En}}}{{j{c}}}Bl}{{}En}00{{EnHb{An{Hd}}}{{j{c}}}l}{{{j{h}}}Dd}{{AlAl}b}{{AlAl}Al}{{AlAl}d}{ce{}{}}00{{{j{Hf}}{An{En}}En}{{Ad{Hh}}}}{{{j{Hf}}{An{En}}En}Hh}{{{j{c}}}el{}}{Alc{}}{{{j{c}}}{{`{HjHl{Hn{}{{B`{}}}}ElGf}}}l}{{{j{c}}}AbBl}{Ald}?0{{{j{c}}}F`I`}000{{{j{c}}}F`Bl}0{{{j{c}}}dBl}{{{j{c}}}H`Bl}{{{j{c}}}{{`{{Ib{}{{B`{An}}}}}}}Bl}{Al{{Id{Al}}}}{Al{{If{Al}}}}{{{j{c}}}{{Il{{Ih{Eh}}{Ij{Eh}{{Bn{{An{G`}}}}}}}}}Bl}`{{{j{c}}}AnBl}{{{j{c}}}{{An{En}}}Bl}{{{j{c}}}{{In{c}}}Bl}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{c}}}EnBl}{{{j{c}}e}{{j{c}}}l{nJ`}}00{{{j{c}}En}{{j{c}}}Bl}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{c}}}Anl}{{{j{Aj}}}{{An{d}}}}{{{j{c}}}Abl}{{{j{c}}}{{An{Jb}}}l}{{{j{Aj}}}{{An{Jb}}}}{{{j{c}}}{{An{Jb}}}Eb}{{{j{c}}}AbEb}564{{{j{c}}}{{An{Gb}}}l}{{BfDb}{{j{c}}}l}{{Bf{Db{D`}}EnEn}{{j{Aj}}}}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}{{Ad{En}}}l}{{{j{c}}}BfBl}{{Bfc}{{j{Cl}}}{{Jd{{Db{{An{Df}}}}}}}}{{Bfc}{{j{Jf}}}{{Jd{{Db{Jh}}}}}}{{Bfc}{{j{Cn}}}{{Jd{{Db{{Ej{D`}}}}}}}}{{Bfc}{{j{Cj}}}{{Jd{{Db{Hb}}}}}}{{Bfc}{{j{Jf}}}{{Jd{{Db{{An{Jh}}}}}}}}{{Bfc}{{j{Jj}}}{{Jd{{Db{Jl}}}}}}{{Bfc}{{j{Aj}}}{{Jd{{Db{d}}}}}}{{Bf{Jn{Hd}}}{{j{K`}}}}{{Bfc}{{j{K`}}}{{Jd{{Db{Hd}}}}}}{{Bfc}{{j{Ch}}}{{Jd{{Db{Jb}}}}}}{{Bfc}{{j{Kb}}}{{Jd{{Db{{An{Kd}}}}}}}}{{Bfc}{{j{Cj}}}{{Jd{{Db{{An{Hb}}}}}}}}{{Bfc}{{j{Cn}}}{{Jd{{Db{{An{{Ej{D`}}}}}}}}}}{{Bf{Jn{Kd}}}{{j{Kb}}}}{{Bf{Jn{Jh}}}{{j{Jf}}}}{{Bfc}{{j{Ch}}}{{Jd{{Db{{An{Jb}}}}}}}}{{Bfc}{{j{K`}}}{{Jd{{Db{{An{Hd}}}}}}}}{{Bfc}{{j{Jj}}}{{Jd{{Db{{An{Jl}}}}}}}}{{Bf{Jn{Jl}}}{{j{Jj}}}}{{Bfc}{{j{Cl}}}{{Jd{{Db{Df}}}}}}{{Bfc}{{j{Kb}}}{{Jd{{Db{Kd}}}}}}{{Bfc}{{j{Aj}}}{{Jd{{Db{{An{d}}}}}}}}{Bf{{j{{Gj{c}}}}}Gn}{{{j{c}}EnEn}{{j{c}}}l}{{Bf{Ej{c}}}{{j{{Gj{c}}}}}Gn}{{Bf{Ej{c}}G`}{{j{{Gj{c}}}}}Gn}{{BfEj}{{j{c}}}l}{{{j{c}}}{{j{c}}}I`}{AlAl}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{c}}}EnBl}``{{{j{Cl}}}{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{{{j{h}}}{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{{{j{h}}}{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{{{j{Cl}}}{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{{j{c}}}Abl}{{{j{c}}}bBl}{{{j{c}}JbKj}{{Ad{{An{Jb}}}}}Eb}{{{j{c}}JbKj}{{Ad{Ab}}}Eb}{{BfEnJb}{{Ad{{j{Aj}}}}}}{{BfEnJbJb}{{Ad{{j{c}}}}}l}{{BfEn}{{j{c}}}l}{{BfEnJbJb}{{j{c}}}l}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}KlBl}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{nA`}{}}0{{{j{c}}Ab}{{Ad{Ab}}}Af}{{AlAl}b}{{{j{c}}Bf}bBl}{{{j{c}}}{{j{c}}}l}{{{j{c}}C`Kn}{{Ad{Ab}}}l}{{{j{c}}Ene}{{Ad{{j{c}}}}}I`{{Cf{{j{c}}}{{Bn{An}}}}}}{{{j{c}}Jbdd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}Endd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}eAn}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}}{{{j{c}}eg}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}{{C`{An}{{Bn{An}}}}}}{{{j{c}}F`An}{{Ad{{j{c}}}}}l}{{AlAld}b}{{{j{h}}}b}{{{j{h}}Dd}b}{{{j{c}}L`}bBl}{{{j{c}}H`}bBl}{{AlH`}b}{{{j{c}}Jl}{{j{c}}}l}{{{j{c}}JlAn}{{j{c}}}l}{{{j{c}}}bBl}{{{j{c}}JlEn}{{j{c}}}Bl}{{{j{c}}d}{{j{c}}}l}{{{j{c}}Dj}{{j{c}}}l}{{{j{c}}D`}{{An{Jb}}}l}{{{j{c}}D`}AbEb}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}10{{AlAl}Al}{{AlAl}b}{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}Anl}{{{j{Aj}}}{{An{L`}}}}{{{j{c}}}Abl}5{{{j{c}}{An{En}}}{{j{c}}}Bl}{{{j{c}}e}{{Ad{{j{c}}}}}Bl{{Jd{{Db{L`}}}}Lb}}{{{j{c}}Dl}{{Ad{{j{c}}}}}Bl}{{{j{c}}e}{{j{c}}}Bl{{Jd{{Db{L`}}}}Lb}}{{{j{c}}Dl}{{j{c}}}{Bl`}}`{{{j{c}}dLd}{{Ej{{Ej{Lf}}}}}Bl}{{{j{c}}}{{j{c}}}I`}{{{j{Cl}}En}{{Ad{Ab}}}}{{{j{h}}Dd}b}{{{j{h}}}{{Ad{Lh}}}}{{{j{c}}}{{Ad{Lj}}}l}{ce{}{}}0{{{j{Cn}}}Ll}{{{j{c}}}{{Ej{An}}}l}{{{j{c}}}{{Ln{Ej{Ej{An}}}}}l}{{AlAl}b}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{h}}c}{{Ad{{j{h}}}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{{j{h}}e}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{c{{Fl{e}}}{}{}}00{{Bfg}{{Fl{{j{i}}e}}}Fh{}{{Fb{}{{B`{{Fl{ce}}}}}}}{{Bl{}{{Fj{c}}}}Bl}}111{{{j{h}}{j{c}}e}{{Ad{{j{h}}}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cM`{}}00{{AlAl}Al}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}Ab}{{Ad{{j{c}}}}}Bl}{{{j{c}}}bBl}`{{{j{c}}En}{}Bl}{{{j{c}}D`}{{An{Jb}}}l}{{{j{c}}D`}AbEb}{ce{}{}}00{{Bfc}{{j{e}}}Fh{{Bl{}{{Fj{c}}}}Bl}}{{{j{c}}{Ej{Eh}}}{{j{c}}}Bl}{{{j{c}}Bf}{{j{c}}}Bl}{{{Db{Mb}}e}c{}{{Md{Dl}{{Bn{c}}}}}}{{{j{c}}H`}{{j{c}}}Bl}{{{j{c}}}el{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}01100{{c{j{e}}}g{}l{}}0221100221133221100221100{{{j{h}}{j{c}}e}{{j{h}}}Bl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}{{{j{c}}F`{j{c}}}{{Ad{{j{c}}}}}Bl}````{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}e{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}c}e{}{}{}}{{c{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}e{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}g{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}c}g{}{}{}}{{c{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}g{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}e{}{}{}}65654654650654654````````{{cf}b{}}000{Mnb}{{{N`{c}}}b{NbLb}}{Ndb}{Nfb}{{{Nh{c}}}bl}{{{N`{c}}{An{e}}}b{NbLb}{{Jd{c}}}}{{Mn{An{c}}}b{}}{{Mnc}b{}}{{{N`{c}}e}b{NbLb}{{Jd{c}}}}{{Ndd}b}5{ce{}{}}0000000{{{N`{c}}}{{N`{c}}}{NbLb}}{NdNd}{NfNf}{{{Nh{c}}}{{Nh{c}}}{lNj}}{{ce}b{}{}}000{Enc{}}0000000{Enb}000{Mn{{j{c}}}Bl}{{{N`{Bf}}}Ll}{{{N`{{Db{D`}}}}}E`}{NlLl}{NnE`}{NdF`}`{{{Nh{c}}}{{j{c}}}l}{cc{}}000{{Bfe}O`{}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}O`{}{{Bd{}{{B`{c}}}}}}{{Bf{Db{c}}}O`{}}{{Bf{Db{{An{c}}}}}O`{}}{{}En}000{ce{}{}}000`{{BfEn}{{N`{c}}}{NbLb}}{{BfEn}Nd}{{BfEn}Nf}{{BfEn}{{Nh{c}}}l}{Mnb}{Ndb}{Nfb}{{{Nh{c}}}bl}8888{c{{Fl{e}}}{}{}}0000000{cM`{}}000::::````````{{ObFh}b}{Obb}{Odb}{{Ofc}b{{Bd{}{{B`{{An{d}}}}}}Gf}}{{{Oh{c}}e}bl{{Bd{}{{B`{An}}}}Gf}}{{{Oh{c}}e}bl{{Bd{}{{B`{}}}}Gf}}{Ojb}54{Olb}{Onb}{Ofb}{A@`b}{{{Oh{c}}}bl}{{Ob{An{Fh}}}b}{{Ob{An{Ab}}}{{Ad{b}}}}{{Oj{An{Ab}}}{{Ad{b}}}}{{{Oh{c}}{An{Db}}}bl}{{OjAb}{{Ad{b}}}}{{ObAb}{{Ad{b}}}}{{OdAb}{{Ad{b}}}}{{OlAb}{{Ad{b}}}}{{OnAb}{{Ad{b}}}}{{OfAb}{{Ad{b}}}}{{A@`Ab}{{Ad{b}}}}{{{Oh{c}}Ab}{{Ad{b}}}l}{{{Oh{c}}Db}bl}{{Olc}b{{Bd{}{{B`{{An{Bf}}}}}}Gf}}{{Onc}b{{Bd{}{{B`{{An{{Db{D`}}}}}}}}Gf}}{{Olc}b{{Bd{}{{B`{Bf}}}}}}{{Onc}b{{Bd{}{{B`{{Db{D`}}}}}}}}{ce{}{}}0000000000000`{{}Ob}{{}Od}{Enc{}}0000000000000{Enb}000000{Old}{Ond}{Ofd}{{{Oh{c}}}dl}{Ojd}{OlKl}{OnKl}{OfKl}{{{Oh{c}}}Kll}{OjKl}{ObDh}{OdDh}{A@`Dh}{OjDh}{cc{}}000000{{DdEnEnBf}{{Ad{{A@b{Oj}}}}}}{{}En}000000{OlEh}{OnEh}{OfEh}{{{Oh{c}}}Ehl}{OjEh}{ce{}{}}000000{{BfEn{An{Dd}}}Ob}{{BfEn{An{Dd}}}Od}{{BfEnEn}Ol}{{BfEnEn}On}{{BfEnEn}Of}{{BfEn}A@`}{{BfEnEnDd}{{Oh{c}}}l}{{BfEnEnDdDd}{{Oh{c}}}l}{c{{Fl{e}}}{}{}}0000000000000{cM`{}}000000:::::::``{{A@dBf}{{j{c}}}Bl}{{A@f{j{c}}}{{j{c}}}Bl}10{{A@fBfDd}{{j{c}}}Bl}0{{A@dBf}{{Fl{{j{c}}e}}}Bl{}}{{A@f{j{c}}}{{Fl{{j{c}}e}}}Bl{}}10{{A@fBfDd}{{Fl{{j{c}}e}}}Bl{}}0`{A@hA@h}```{ce{}{}}000{Enc{}}000{Enb}0{cc{}}0{{}En}04444{A@jA@l}{A@l{{An{c}}}{}}{{{A@n{c}}}{{An{e}}}Bd{}}1{{{A@n{c}}}{{An{e}}}El{}}`{A@l{{Gb{En{An{En}}}}}}{{{A@n{c}}}{{Gb{En{An{En}}}}}Bd}{c{{Fl{e}}}{}{}}000{cM`{}}0<<``````{{cf}b{}}{e{{AA`{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{e{{AA`{c}}}Gn{{Fb{}{{B`{c}}}}}}{{AAbe}g{}{{Fb{}{{B`{c}}}}}{}}0{GlAAd}{{{AA`{c}}}AAdGn}0{ce{}{}}0`{{{AA`{c}}}{{AA`{c}}}{GnNj}}{{ce}b{}{}}{{{AA`{c}}}AAbGn}{Enc{}}0{Enb}{{GlGl}d}0{{{AA`{c}}Fd}Ff{GnAAf}}{cc{}}{{EnAAb}{{AA`{c}}}Gn}{{{AA`{c}}En}{{An{c}}}Gn}{{}AAb}{{G`{AA`{c}}{AA`{c}}}{{AA`{c}}}Gn}{{AAbG`cc}{{AA`{e}}}{}Gn}{{G`{AA`{c}}e}{{AA`{c}}}Gn{}}{{G`c{AA`{e}}}{{AA`{e}}}{}Gn}{{}En}{ce{}{}}{{{AA`{c}}}eGn{}}{{{AA`{c}}En}dGn}{{cEn}d{}}1{{{AA`{c}}}{{AAl{c{AAh{c}}AAj}}}Gn}{{{AA`{c}}}{{AAl{egAAj}}}Gn{}{}}{{{AA`{c}}}EnGn}0`{{{AA`{c}}{An{G`}}}bGn}{{{AA`{c}}EnEn}bGn}{{cEnEn}e{}{}}01{Gl{{A@b{Gl}}}}{{{AA`{c}}}{{A@b{Fh}}}Gn};{g{{Fl{{AA`{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{{An{c}}e}}}}}}}}{g{{Fl{{AA`{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{ce}}}}}}}}{{AAbg}{{Fl{ie}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}{}}0{c{{Fl{e}}}{}{}}0{cM`{}}{GlBf}{{}Bf}{{{AA`{c}}}{{An{G`}}}Gn}{{{AA`{c}}En}cGn}0{{{AA`{c}}En}eGn{}}{{{AA`{c}}}{{AAn{{Ej{c}}}}}Gn}{{{AA`{c}}}{{AAh{c}}}Gn}{{{AA`{c}}}eGn{}}{ce{}{}}{{{AA`{c}}{An{G`}}}{{AA`{c}}}Gn}{{{AA`{c}}{An{G`}}}{{A@b{Fh}}}Gn}1`{{{AB`{c}}}bGn}0{{{AB`{c}}{An{c}}}bGn}{{{AB`{c}}AAd}bGn}{{{AB`{c}}c}bGn}{{{AB`{c}}AAd}{{Ad{b}}}Gn}77{{}{{AB`{c}}}Gn}{Enc{}}0{Enb}{{{AB`{c}}}{{ABb{c}}}Gn}{cc{}}{{}En}={{BfEn}{{AB`{c}}}Gn}{{{AB`{c}}}AbGn}{c{{Fl{e}}}{}{}}0{cM`{}}{ce{}{}}````{ABdb}{{ABd{An{AAd}}}b}{{ABdAAd}b}33`<<;{{ABfFd}Ff}:{{BfEn}{{A@b{ABd}}}}{{}ABh}{{}AAb}<7{{}d}`{{ABjABhAAb}b}{ABdAb}<<;:``````````````````````````````````````````{{cf}b{}}{{{ABn{}{{ABl{c}}}}g}{{ABn{}{{ABl{c}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{c}}}}}}Cb}}{{AC`C`}AC`}{{AC`C`}{{j{c}}}Bl}{{{ABn{}{{ABl{c}}}}i{Db{g}}}b{}{}{}{{C`{{An{e}}g}{{Bn{g}}}}}}{{{ABn{}{{ABl{c}}}}g}{{ABn{}{{ABl{c}}}}}{}{}{{C`{e}{{Bn{c}}}}Cb}}{{ACbDj}Dl}{{ACb{Db{Ab}}Dn}{{Ad{Dl}}}}{ACd{{Ad{Dl}}}}`{ce{}{}}0{{ACfDd}{{Ad{Ab}}}}0{AChACh}{{ce}b{}{}}{Enc{}}0{Enb}{{AChACh}d}{{{ACj{}{{B`{c}}}}e}c{}{}}0{ACl{{Ad{Ab}}}}{ACl{{Ad{{Gb{Ab{ACn{Jl}}}}}}}}`{{AD`c}{{Ad{AD`}}}{}}{{ADbF`}{{Ad{{j{c}}}}}Bl}`{{AChFd}Ff}{cc{}}`{{BfcEn}ADd{}}{{BfEn}ADf}`{{ADhEn}{{Ad{Gh}}}}{{ADhEn}Gh}::{{AChc}bADj}{{}En}{ce{}{}}{ADl{{Ad{F`}}}}{ADn{{Ad{F`}}}}??{AE`{{An{c}}}{}}{AE`{{An{Jb}}}}{AEb{{An{c}}}{}}2{AE`{{An{{Gb{cc}}}}}{}}{ACd{{Ad{En}}}}{{AEdEnEn}{{j{c}}}Bl}{{{ACj{}{{B`{c}}}}e}c{}{}}0{ACl{{Ad{{ACn{Jl}}}}}}{{AEbJbKj}{{Ad{{An{c}}}}}{}}{AEfAEf}{{AEhC`Kn}{{Ad{Ab}}}}{{AEjc{An{e}}}{{Ad{AEj}}}{{Fb{}{{B`{L`}}}}}{}}{{AEjci}{{Ad{AEj}}}{{Fb{}{{B`{L`}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{g}}}}}}}}`{{AEjF`{An{c}}}{{Ad{AEj}}}{}}{{AElJl}{{j{c}}}Bl}{{AEnJlc}{{j{e}}}{}Bl}`{{ACbd}{{j{c}}}Bl}{{ACbDj}{{j{c}}}Bl}{{AF`D`}{{An{Jb}}}}{AE`{{An{c}}}{}}{{AFbc}{{Ad{AFb}}}Lb}{{AFdc}AFdLb}{AFf{{Ej{{Db{D`}}}}}}{ce{}{}}{c{{Fl{e}}}{}{}}0{cM`{}}{ACd{{Ad{{j{c}}}}}Bl}83`{{AFhF`{j{c}}}{{Ad{{j{c}}}}}Bl}``````{{{j{c}}{j{e}}gik}{{j{m}}}BlBl{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}Bl}0{{{j{c}}{j{e}}i}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}BlBl{{AFj{AnAn}}}Bl}{{{j{c}}{j{e}}g}bBlBl{{Cf{AnAn}}}}{{{j{c}}{j{e}}i}{{j{k}}}BlBl{}{{Cf{}{{Bn{g}}}}}Bl}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBl{FhAFl}{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}5{{{j{c}}{j{e}}g}{{Ad{Ab}}}BlBl{{Cf{}{{Bn{{A@b{Fh}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}BlBl{{Cf{}{{Bn{{A@b{Fh}}}}}}}}64{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBl{}{}{{Cf{AnAn}{{Bn{{Fl{{An{g}}i}}}}}}}Bl}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}BlBlBl{{AFn{AnAnAn}}}Bl}{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBlFhAG`{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}2{{{j{c}}{j{e}}kBf}{{Fl{{j{m}}i}}}BlBlFhAG`{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}idd}{{Fl{{j{c}}g}}}BlBlAG`{{Cf{}{{Bn{{Fl{{A@b{Fh}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Fl{{j{o}}k}}}BlBlBl{}{}{{Cf{AnAnAn}{{Bn{{Fl{{An{i}}k}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{FhAFl}AG`{{Cf{}{{Bn{{Fl{eg}}}}}}}{{Bl{}{{Fj{e}}}}}}{{{j{c}}e}{{j{g}}}Bl{{AGb{An}}}Bl}{{{j{c}}e}{{j{g}}}BlAGbBl}{{{j{c}}g}{{j{i}}}BlFh{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}g}{{j{i}}}Bl{FhAFl}{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}}Enl}0{{H`H`}H`}{{DlL`}{{Ad{b}}}}{{{AGd{L`}}L`}{{Ad{b}}}}````{{cf}b{}}{{AGfcd}L`AFl}{ce{}{}}0{AGfAGf}{{ce}b{}{}}{{}AGf}{Enc{}}0{Enb}{{AGfAGf}d}{{ce}d{}{}}00{{AGfFd}Ff}{cc{}}{{AGfc}bADj}{{}En};{{{j{c}}}{{Gb{En{j{c}}}}}Bl}<{c{{Fl{e}}}{}{}}0{cM`{}}>`{{En{Ej{d}}}b}```{{AGhEnEn}AGh}0{{En{Db{Ab}}Dn}{{Ad{{AGj{Dl}}}}}}{{{Db{Ab}}{Db{d}}d}{{Ad{AGl}}}}{{Bf{Db{Ab}}{Db{d}}d}{{Ad{AGn}}}}{{Bf{Db{Ab}}}{{Ad{AGn}}}}{Ab{{Ad{Eh}}}}{{{Db{Ab}}}{{Ad{AGl}}}}{{{Db{Ab}}}{{Ad{AGn}}}}0```{{cf}b{}}0{ce{}{}}000{DjDj}{DnDn}{{ce}b{}{}}0{{}Dj}{{}Dn}{Enc{}}000``{Enb}0{{DjDj}d}{{DnDn}d}{{ce}d{}{}}00000{{DjFd}Ff}{{DnFd}Ff}{cc{}}{DnDj}1{DjDn}{{Djc}bADj}{{Dnc}bADj}{{}En}0{ce{}{}}0````?>``{{AGhEnEn}AGh}011{c{{Fl{e}}}{}{}}000{cM`{}}033{{Djd}Dj}{{Dnd}Dn}101010{{Dnc}Dn{{Fb{}{{B`{d}}}}}}{DnDn}`{AH`Jl}00`{{}d}::0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}000000000000000000000000000{Dhd}{{HhHh}c{}}{{F`F`}c{}}0{{LlBf}c{}}{{LlLl}c{}}0{{E`{Db{D`}}}c{}}{{E`E`}c{}}0{{GhGh}Gh}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{{LlAb}{{Ad{Ab}}}}{{E`Ab}{{Ad{Ab}}}}{{F`Ab}{{Ad{Ab}}}}{{DhAh}Ab}{{F`Ah}Ab}{{LlAh}Ab}{{E`Ah}Ab}{{{ABb{c}}Ah}AbGn}{F`d}{F`{{An{d}}}}{Dh{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{DhBf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{Dhc}Dh{{C`{{An{Ab}}}{{Bn{{An{Ab}}}}}}Cb}}{{F`c}F`{{C`{{An{d}}}{{Bn{{An{d}}}}}}Cb}}{{Llc}Ll{{C`{{An{Bf}}}{{Bn{{An{{AHd{Bf}}}}}}}}Cb}}{{E`c}E`{{C`{{An{{Db{D`}}}}}{{Bn{{An{{AHd{{Db{D`}}}}}}}}}}Cb}}{{{ABb{c}}e}{{ABb{c}}}Gn{{C`{{An{c}}}{{Bn{{An{c}}}}}}Cb}}{{Dhc}Dh{{Cf{Cd}{{Bn{Ab}}}}}}{{Dhe}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{AHfc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{AHhc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{F`C`}F`}{{LlC`}Ll}{{E`C`}E`}{{F`C`}{{j{c}}}Bl}{{LlC`}{{j{c}}}Bl}{{E`C`}{{j{c}}}Bl}{{Llc}Ll{{Cf{Bf}{{Bn{Bf}}}}}}{{E`c}E`{{Cf{{Db{D`}}}{{Bn{{Db{D`}}}}}}}}{{Llc}Ll{{Cf{BfDf}}}}{{DhC`}{{Ad{Dh}}}}{{Dhe{Db{c}}}b{}{{C`{{An{Ab}}c}{{Bn{c}}}}}}{{F`e{Db{c}}}b{}{{C`{{An{d}}c}{{Bn{c}}}}}}{{Lle{Db{c}}}b{}{{C`{{An{Bf}}c}{{Bn{c}}}}}}{{E`e{Db{c}}}b{}{{C`{{An{{Db{D`}}}}c}{{Bn{c}}}}}}{{{ABb{c}}g{Db{e}}}bGn{}{{C`{{An{c}}e}{{Bn{e}}}}}}{{Dhc}Dh{{C`{Ab}{{Bn{Ab}}}}Cb}}{{F`c}F`{{C`{d}{{Bn{d}}}}Cb}}{{Llc}Ll{{C`{Bf}{{Bn{{AHd{Bf}}}}}}Cb}}{{E`c}E`{{C`{{Db{D`}}}{{Bn{{AHd{{Db{D`}}}}}}}}Cb}}{{{ABb{c}}e}{{ABb{c}}}Gn{{C`{c}{{Bn{c}}}}Cb}}{{F`Dj}Dl}{{LlDj}Dl}{{E`Dj}Dl}{{AGnDj}Dl}{{F`{Db{Ab}}Dn}{{Ad{Dl}}}}{{Ll{Db{Ab}}Dn}{{Ad{Dl}}}}{{E`{Db{Ab}}Dn}{{Ad{Dl}}}}{{AGn{Db{Ab}}Dn}{{Ad{Dl}}}}{F`{{Ad{Dl}}}}{Ll{{Ad{Dl}}}}{E`{{Ad{Dl}}}}{{{ABb{c}}}{{Ad{Dl}}}Gn}{eAHj{}{{Fb{}{{B`{c}}}}}}0{{AAbe}AHl{}{{Fb{}{{B`{c}}}}}}0{LlE`}{GhGh}{AHnDd}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}{{An{{Db{c}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}{j{e}}g}DhBlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{F`F`}c{}}00000{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000{Dd{{A@b{Dd}}}}{{AIjAIjc}{{Ad{AIj}}}AIl}{{AInDd}{{Ad{Ab}}}}{{HhDd}{{Ad{Ab}}}}{{DhDd}{{Ad{Ab}}}}{{F`Dd}{{Ad{Ab}}}}{{LlDd}{{Ad{Ab}}}}{{E`Dd}{{Ad{Ab}}}}{{AGnDd}{{Ad{Ab}}}}{{GhDd}Gh}54321`{{{j{c}}Ab}{{Fl{AbAHb}}}{}}0000{{AHfAb}{{Ad{Ab}}}}{{AHhAb}{{Ad{Ab}}}}{{{AJ`{ce}}}{{AJ`{ce}}}BlBl}{AJbAJb}{GhGh}{DdDd}{KlKl}{AJdAJd}{AJfAJf}{AJhAJh}{KbKb}{K`K`}{AJjAJj}{AJlAJl}{JfJf}{JjJj}{CjCj}{ChCh}{AJnAJn}{AK`AK`}{AKbAKb}{AKdAKd}{AKfAKf}{AKhAKh}{ClCl}{CnCn}{AKjAKj}{AjAj}{AAbAAb}{AKlAKl}{{ce}b{}{}}000000000000000000000000000{{KlDd}b}{AKne{}{{AHj{c}}AFl}}0{{AKnAAb}e{}{{AHl{c}}AFl}}0{Ddd}00{AL`Dd}{KlDd}{{}Gh}{{}Dd}{{}AAb}{{{AJ`{ce}}}gBlBl{}}{Enc{}}000000000000000000000000000000000100000000000000000000000000000000{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{Enb}00000000000000000000000000000000{AInDd}{HhDd}{GhDd}`{{GhGh}d}{{DdAAb}d}{{DdDd}d}{{KlKl}d}{{AJdAJd}d}{{AAbAAb}d}{{AKlAKl}d}{{GhGhd}d}{{DhDh}F`}{{F`F`}F`}{{LlBf}F`}{{LlLl}F`}{{E`{Db{D`}}}F`}{{E`E`}F`}543210{{ce}d{}{}}00000000000000000{Dh{{Ad{{Gb{Ab{ACn{Jl}}}}}}}}{Ll{{Ad{{Gb{Ab{ACn{Jl}}}}}}}}{{{AJ`{ce}}}KlBlBl}{{F`d}{{Ad{F`}}}}{{E`{Db{D`}}}{{Ad{E`}}}}{{DhF`}{{Ad{Dh}}}}{{F`F`}{{Ad{{j{Aj}}}}}}{{LlF`}{{Ad{{j{Cl}}}}}}{{E`F`}{{Ad{{j{Cn}}}}}}{{AGnF`}{{Ad{AGn}}}}{{{ABb{c}}F`}{{Ad{{j{{Gj{c}}}}}}}Gn}{{AIlALbALb}{{Ad{ALb}}}}{{DhFd}Ff}{{LlFd}Ff}{{E`Fd}Ff}{{{ABb{c}}Fd}FfGn}{{AJbFd}Ff}{{GhFd}Ff}0{{DdFd}Ff}0{{KlFd}Ff}{{AJdFd}Ff}0{{AAbFd}{{Fl{bALd}}}}{{AKlFd}{{Fl{bALd}}}}{{Dhc}b{{Cf{{An{Cd}}}}}}{cc{}}000000{cGhALf}1{{{An{c}}}Gh{{ALh{Gh}}}}{GhDd}0{AAbDd}4{GhKl}5{ALjKl}6{AKlAJd}77777777777777777777{ALlAAb}{ALnAAb}99{{AAbd}Dd}{eDh{{AM`{Ab}}}{{Fb{}{{B`{c}}}}}}{cDh{{Fb{}{{B`{{An{{A@b{Fh}}}}}}}}}}{cDh{{Fb{}{{B`{{An{Ab}}}}}}}}{cF`{{Fb{}{{B`{d}}}}}}{eLl{{AMb{Bf}}}{{Fb{}{{B`{c}}}}}}{eLl{{Jd{Bf}}}{{Fb{}{{B`{{An{c}}}}}}}}{eE`{{Jd{{Db{D`}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{eE`{{AMb{{Db{D`}}}}}{{Fb{}{{B`{c}}}}}}{e{{ABb{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{Bfc}{{j{Aj}}}{{Bd{}{{B`{{An{d}}}}}}}}{{Bfe}Ll{{Jd{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}E`{{Jd{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}{{ABb{c}}}Gn{{Bd{}{{B`{{An{c}}}}}}}}:<98756{eAGn{{AMb{{Db{D`}}}}}{{Fb{}{{B`{c}}}}}}{eAGn{{Jd{{Db{D`}}}}}{{Fb{}{{B`{{An{c}}}}}}}}6{{Bfc}{{j{Aj}}}{{Bd{}{{B`{d}}}}}}{{Bfe}Ll{{Jd{Bf}}}{{Bd{}{{B`{c}}}}}}{{Bfe}E`{{Jd{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{Bfe}{{ABb{c}}}Gn{{Bd{}{{B`{c}}}}}}{{AMdDd}Kl}{cDh{{Gd{}{{B`{{An{Ab}}}}}}}}{cF`{{Gd{}{{B`{{An{d}}}}}}}}{cF`{{Gd{}{{B`{d}}}}}}{eLl{{AMb{Bf}}HjHl}{{Gd{}{{B`{c}}}}}}{eLl{{Jd{Bf}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{eE`{{AMb{{Db{D`}}}}HjHl}{{Gd{}{{B`{c}}}}}}{eE`{{Jd{{Db{D`}}}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{{Bf{Db{d}}}F`}{{Bf{Db{c}}}Ll{{Jd{Bf}}}}{{Bf{Db{c}}}E`{{Jd{{Db{D`}}}}}}{{Bf{Db{c}}}{{ABb{c}}}Gn}{{Bf{Db{{An{d}}}}}F`}{{Bf{Db{{An{c}}}}}Ll{{Jd{Bf}}}}{{Bf{Db{{An{c}}}}}E`{{Jd{{Db{D`}}}}}}{{Bf{Db{{An{c}}}}}{{ABb{c}}}Gn}{cF`{{Gf{}{{B`{{An{d}}}}}}}}{{{Ej{c}}AAb}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{Ej{c}}AAb}{{AFl{}{{AI`{e}}{AIb{c}}{AId{g}}}}}{AIf{AIh{e}}}Nj{{El{}{{B`{e}}}}GfHjHl}}{{EncAAb}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfAbEn}Dh}{{BfdEn}F`}{{BfBfEn}Ll}{{Bf{Db{D`}}En}E`}{{Bf{Db{D`}}En}AGn}{{BfcEn}{{ABb{c}}}Gn}{{EnAAb}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfEn}Dh}{{BfEn}F`}{{BfEn}Ll}{{BfEn}E`}{{BfEn}AGn}{{BfEn}{{ABb{c}}}Gn}{{BfEnDd}Dh}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}En}{{An{c}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{HhEn}{{Ad{Gh}}}}{{AInEn}{{Ad{Gh}}}}0{{DhEn}{{Ad{Gh}}}}{{F`En}{{Ad{Gh}}}}{{LlEn}{{Ad{Gh}}}}{{E`En}{{Ad{Gh}}}}{{AGnEn}{{Ad{Gh}}}}{{{ABb{c}}En}{{Ad{Gh}}}Gn}{{HhEn}Gh}{{AInEn}Gh}0{{DhEn}Gh}{{F`En}Gh}{{LlEn}Gh}{{E`En}Gh}{{AGnEn}Gh}{{{ABb{c}}En}GhGn}{{DhEn}{{An{Ab}}}}{{}Dd}00000000000000000000000{DhAb}{{{ABb{c}}En}{{An{Gl}}}Gn}0{Gh{{An{Bf}}}}{{AMfEn}Gh}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}En}{{An{c}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{DhEn}{LlEn}{AGnEn}{{Dhdd}{{Ad{Ah}}}}{{F`dd}{{Ad{Ah}}}}{{Lldd}{{Ad{Ah}}}}{{E`dd}{{Ad{Ah}}}}{{AGndd}{{Ad{Ah}}}}{{{ABb{c}}dd}{{Ad{Ah}}}Gn}{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`E`}F`}{{E`{Db{D`}}}F`}543210{{Ghc}bADj}{{Ddc}bADj}{{AJdc}bADj}{{AAbc}bADj}{{AKlc}bADj}{{Ghcd}bADj}{{}En}00000000000000000000000000000000{DhDd}{Dd{{An{Dd}}}}{AAb{{An{AAb}}}}{ce{}{}}00000000000000000000000000000000{{AMh{An{En}}En}{{Ad{Hh}}}}{{AMh{An{En}}En}Hh}{Dhc{}}{F`c{}}{Llc{}}{E`c{}}{AGnc{}}{{{ABb{c}}}eGn{}}{HhAb}{AMhAb}{Gh{{Ad{Gh}}}}{Ddd}00{Ghd}101011111010101111011101{AAbd}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}{{AAl{cgAAj}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}{{An{c}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`E`}F`}{{E`{Db{D`}}}F`}542310{{AIjAIj}{{Ad{{Gb{AIjAIj}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{DdDd}{{Ad{d}}}}{F`{{An{d}}}}{F`Ab}{LlAb}{E`Ab}{F`{{An{Jb}}}}{AHf{{An{Hb}}}}{AHh{{An{Jb}}}}{AHfAb}{AHhAb}{{DdDd}{{Ad{Dd}}}}9876{{Bf{Db{D`}}EnEn}F`}{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{Ll{{Ad{En}}}}{E`{{Ad{En}}}}{KlAMd}`{{}c{}}00{{Bfc}Ll{{Jd{{Db{Bf}}}}}}{{Bfc}Ll{{Jd{{Db{{An{{AHd{Bf}}}}}}}}}}{{Bfc}Ll{{Jd{{Db{{AHd{Bf}}}}}}}}{{Bfc}Ll{{Jd{{Db{{An{Bf}}}}}}}}{{Bfc}E`{{Jd{{Db{{AHd{{Db{D`}}}}}}}}}}{{Bfc}E`{{Jd{{Db{{An{{Db{D`}}}}}}}}}}{{Bfc}E`{{Jd{{Db{{An{{AHd{{Db{D`}}}}}}}}}}}}{{Bfc}E`{{Jd{{Db{{Db{D`}}}}}}}}{{Bfe}{{ABb{c}}}Gn{{Jd{{Db{{An{c}}}}}}}}{{Bf{Db{c}}}{{ABb{c}}}Gn}{{BfDd}Kl}{Bf{{ABb{c}}}Gn}{{DhEnEn}Dh}{{F`EnEn}F`}{{LlEnEn}Ll}{{E`EnEn}E`}{{AGnEnEn}AGn}{{{ABb{c}}EnEn}{{ABb{c}}}Gn}{{Bf{Ej{c}}}{{ABb{c}}}Gn}{{Bf{Ej{c}}G`}{{ABb{c}}}Gn}{F`c{}}0{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`{Db{D`}}}F`}{{E`E`}F`}543210{Dh{{Ad{{ACn{Jl}}}}}}{Ll{{Ad{{ACn{Jl}}}}}}{Dh{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{Ll{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{Dh{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{Ll{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{GhGh}{{An{AMj}}}}{{AJdAJd}{{An{AMj}}}}{Hh{{An{En}}}}{{{AJ`{AK`Hf}}}{{An{En}}}}{{AHfJbKj}{{Ad{{An{Hb}}}}}}{{AHhJbKj}{{Ad{{An{Jb}}}}}}{{AHfJbKj}{{Ad{Ab}}}}{{AHhJbKj}{{Ad{Ab}}}}{{BfEnJb}{{Ad{F`}}}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{DhDh}{F`F`}{LlLl}{E`E`}{AGnAGn}{{{ABb{c}}}{{ABb{c}}}Gn}`{HhEn}{{{AJ`{AK`Hf}}}En}{{F`c{An{d}}}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}}{{Llc{An{Bf}}}{{Ad{Ll}}}{{Fb{}{{B`{L`}}}}}}{{E`c{An{{Db{D`}}}}}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}}{{F`ce}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{d}}}{{Bn{{An{d}}}}}}}}{{Llce}{{Ad{Ll}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{Bf}}}{{Bn{{An{Df}}}}}}}}{{E`ce}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{{Db{D`}}}}}{{Bn{{An{{Ej{D`}}}}}}}}}}{{F`F`{An{d}}}{{Ad{F`}}}}{{LlF`{An{Bf}}}{{Ad{Ll}}}}{{E`F`{An{{Db{D`}}}}}{{Ad{E`}}}}{Dhb}{{DhDd}b}{{KlAMd}b}{{DhJl}Dh}{{F`Jl}F`}{{LlJl}Ll}{{E`Jl}E`}{{AGnJl}AGn}{{{ABb{c}}Jl}{{ABb{c}}}Gn}{{DhJl{An{Ab}}}Dh}{{F`Jl{An{d}}}F`}{{LlJl{An{Bf}}}Ll}{{E`Jl{An{{Db{D`}}}}}E`}{{AGnJl{An{{Db{D`}}}}}AGn}{{{ABb{c}}Jl{An{{Gj{c}}}}}{{j{{Gj{c}}}}}Gn}{{F`d}F`}{{Lld}Ll}{{E`d}{{j{Cn}}}}{{AGnd}AGn}{{F`Dj}{{j{Aj}}}}{{LlDj}{{j{Cl}}}}{{E`Dj}{{j{Cn}}}}{{AGnDj}AGn}{{AHfD`}Ab}{{AHhD`}Ab}{{GhDd}{{Ad{Gh}}}}`{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{F`{{An{L`}}}}{F`Ab}{LlAb}{E`Ab}{{LlDl}Ll}{{E`Dl}E`}{{Ddd}AAb}{{Kld}ALj}{AJdAKl}{{DdBfd}ALj}{AJdBf}{{LlEn}{{Ad{Ab}}}}{{DhDd}b}{AAbAAb}{Dh{{Ad{Lh}}}}{ce{}{}}000000000000000000000000000{DdDd}{AAbAMl}{E`Ll}{cDf{}}00{{Dhc}{{Ad{Dh}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{Dhe}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{g{{Fl{AHje}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{{AAbg}{{Fl{AHle}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{AKn{{Fl{eg}}}{}{{AHj{c}}AFl}{}}0{{AKnAAb}{{Fl{eg}}}{}{{AHl{c}}AFl}{}}0{Gh{{Ad{c}}}J`}{c{{Fl{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000{{Ddd}{{Ad{AAb}}}}{{Dh{j{c}}e}{{Ad{Dh}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cM`{}}00000000000000000000000000000000{AAbAAb}{F`{{Ad{F`}}}}{Ll{{Ad{Ll}}}}{E`{{Ad{E`}}}}{{{ABb{c}}}{{Ad{{j{{Gj{c}}}}}}}Gn}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}En}cNj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}0{{DdGh}d}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}gNj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{AHfD`}Ab}{{AHhD`}Ab}{{F`Ld{Ej{Hd}}}{{Ad{b}}}}{{AMnLd{Ej{Hd}}}{{Ad{b}}}}{{AN`Ld{Ej{Hd}}}{{Ad{b}}}}{{ALbLd{Ej{Hd}}}{{Ad{b}}}}{{ANbLd{Ej{Hd}}}{{Ad{b}}}}{{ANdLd{Ej{Hd}}}{{Ad{b}}}}{{ANfLd{Ej{Hd}}}{{Ad{b}}}}{{ANhLd{Ej{Hd}}}{{Ad{b}}}}{{ANjLd{Ej{Hd}}}{{Ad{b}}}}{{AMhLd{Ej{Hd}}}{{Ad{b}}}}{{AHfLd{Ej{Hd}}}{{Ad{b}}}}{{AHhLd{Ej{Hd}}}{{Ad{b}}}}{{LlLd{Ej{Hd}}}{{Ad{b}}}}{{E`Ld{Ej{Hd}}}{{Ad{b}}}}{{AGnLd{Ej{Hd}}}{{Ad{b}}}}{{{ABb{c}}Ld{Ej{Hd}}}{{Ad{b}}}Gn}{{F`Ld{Db{Hd}}}{{Ad{b}}}}{{AMnLd{Db{Hd}}}{{Ad{b}}}}{{AN`Ld{Db{Hd}}}{{Ad{b}}}}{{ALbLd{Db{Hd}}}{{Ad{b}}}}{{ANbLd{Db{Hd}}}{{Ad{b}}}}{{ANdLd{Db{Hd}}}{{Ad{b}}}}{{ANfLd{Db{Hd}}}{{Ad{b}}}}{{ANhLd{Db{Hd}}}{{Ad{b}}}}{{ANjLd{Db{Hd}}}{{Ad{b}}}}{{AMhLd{Db{Hd}}}{{Ad{b}}}}{{AHfLd{Db{Hd}}}{{Ad{b}}}}{{AHhLd{Db{Hd}}}{{Ad{b}}}}{{LlLd{Db{Hd}}}{{Ad{b}}}}{{E`Ld{Db{Hd}}}{{Ad{b}}}}{{AGnLd{Db{Hd}}}{{Ad{b}}}}{{{ABb{c}}Ld{Db{Hd}}}{{Ad{b}}}Gn}{ce{}{}}00000000000000000000000000000000{Enc{}}0{En{{ANl{ce}}}{}{}}{{{Db{Mb}}e}c{}{{Md{Dl}{{Bn{c}}}}}}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}{An{G`}}}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}e}DhBl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}```````````{{cf}b{}}{AIjd}{{ANn{An{Bf}}}b}{{AIjAIj}{{Ad{b}}}}{ANnb}{{ANnBf}b}{{AIjDj}Dl}<<<<<<<<{{AIjAIjc}{{Ad{AIj}}}AIl}{{AIjDd}{{Ad{Ab}}}}{AIjAIj}{{ce}b{}{}}{{}AO`}{Enc{}}0000000{{ANnc}AIj{{Fb{}{{B`{{An{Bf}}}}}}}}{Enb}000{AIjDd}{{AIjLl}c{}}{{AIjAIj}c{}}{{AIjBf}c{}}120{{AIlALbALb}{{Ad{ALb}}}}{ANnAIj}{AO`{{AAn{AOb}}}}{cc{}}000{{ALb{AAn{AOb}}dAOd}AIj}{{ALbAOd}AIj}{{LlAL`AOd}{{Ad{AIj}}}}{{BfdEn}AIj}{{AIjEn}{{Ad{Gh}}}}{{AIjEn}Gh}{AIj{{AAn{AOb}}}};<=<=;{{}En}000{ce{}{}}0000{AIjAb}{AIjd}0{AIjAOf}{AIjEn}{{AIjBf}c{}}{{AIjAIj}c{}}{{AIjLl}c{}}102{{AIjAIj}{{Ad{{Gb{AIjAIj}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}8{{AO`{AAn{AOb}}}{{Ad{b}}}}9{AIj{{Ad{En}}}}{AIjBf}{{BfEnAOd}ANn}{{{AAn{AOb}}}AO`}{AOf{{An{c}}}{}}:8989:;{AIjALb}`{AOf{{Gb{En{An{En}}}}}}{{AIjd}AIj}{{AIjDj}AIj}`{{AIjdd}Eh}{{AIjAL`AOh}AIj}{AIj{{Ad{AIj}}}}{AIjAIj}{ce{}{}}{c{{Fl{e}}}{}{}}0000000{cM`{}}0004{AIjd}{AIj{{Ad{AOj}}}}4444``````{{cf}b{}}05555{AL`AOb}{AOdAOd}{AObAOb}{{ce}b{}{}}0{{}AOd}{{}AOb}{Enc{}}000{Enb}0{{AOdAOd}d}{{AObBf}{{An{Kd}}}}{{AOdFd}Ff}{{AObFd}Ff}{cc{}}0{{AObKd}Bf}{AObAL`}{{AObKd}{{An{Bf}}}}{{}En}0{ce{}{}}0{AObd}0{AObEn}{{AObAOb}d}33{c{{Fl{e}}}{}{}}000{cM`{}}055`55{{}AOl}{Enc{}}0{{}b}{AOlb}{Enb}2?4;:665{{}d};```````330`````````````````````{AOnBf}<<<<`5{AOn}66633`{{B@`Fd}{{Fl{bALd}}}}{{AOnFd}{{Fl{bALd}}}}0{cc{}}0{cAOn{{ALh{{AHd{Bf}}}}}}{{}{{Ij{BfB@`}{{Bn{b}}}}}}{{}En}0{ce{}{}}0{cAHbAG`}````{{{Ij{BfB@`}{{Bn{b}}}}}b}{cAHbB@b}{cDf{}}{c{{Fl{e}}}{}{}}000{cM`{}}066``````````````{{cf}b{}}77{B@dB@d}{{ce}b{}{}}{Enc{}}0{Enb}{{FdB@fEn}Ff}{cc{}}{{}B@h}{{}B@d}{{}{{An{En}}}}{{}Df}{{}d}{{}En}{ce{}{}}{{{An{B@h}}}b}{B@db}{{{An{En}}}b}2{{{An{d}}}b}4{c{{Fl{e}}}{}{}}0{cM`{}}6````````````{{cf}b{}}00{{AOj{Ej{Ab}}B@j}{{Ad{b}}}}{{AOjC`}{{Ej{Ab}}}}0{{AOjF`}{{Ad{AOj}}}}{{AOj{Db{AMd}}}{{Ad{AOj}}}}0{{AOjJlEn}AOj}{{AOjAOj}c{}}{{AOjAb}c{}}0{AOjAOj}0{{AOjBfe}{{Ad{AOj}}}B@l{{Md{Ab}{{Bn{c}}}}}}{{AOjEne}{{Ad{AOj}}}B@l{{Md{Ab}{{Bn{c}}}}}}22{ce{}{}}0000000003{B@nB@n}{BA`BA`}5{{ce}b{}{}}00{{AOjBf}{{Ad{Ab}}}}{{AOje}{{Ad{{Ej{Ab}}}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{}BA`}{{}AOj}{Enc{}}000000000=<<{Enb}0000{{AOjBf}{{Ad{AOj}}}}6{{AOj{Db{c}}}AOj{{Jd{Bf}}}}{{AOj{BAb{Bf}}}AOj}{{AOj{An{{Db{c}}}}}{{Ad{AOj}}}{{Jd{Bf}}}}{AOj{{Ej{Dd}}}}7{{BA`BA`}d}{{AOjAOj}d}00{{ce}d{}{}}00{AOjEn}`{{AOje}{{Ad{AOj}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOj{Ej{Ab}}}{{Ad{AOj}}}}{{AOjAOj}{{Ad{b}}}}{AOj{{Ej{Kl}}}}{{AOjACh}{{Ad{AOj}}}}{{AOjF`}{{Ad{AOj}}}}{{B@nFd}Ff}{{BA`Fd}Ff}{{AOjFd}Ff}0{cc{}}000{B@jAOj}{BAdAOj}2{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAOj{{Fb{}{{B`{Ab}}}}}}{{{Db{BAf}}}{{Ad{AOj}}}}{{{Db{BAf}}B@j}{{Ad{AOj}}}}{{cB@j}{{Ad{AOj}}}{{Bd{}{{B`{BAf}}}}}}{{AOjEn}{{An{{Ej{Gh}}}}}}{{AOjBf}{{An{En}}}}{AOj{{Ej{Bf}}}}{AOj{{Ej{AMd}}}}{AOj{{Db{Ab}}}}{AOj{{Ej{Ab}}}}{{AOjEn}{{Ad{BAf}}}}{{AOjEnBAf}{{Ad{b}}}}{{AOjEnBAf}b}{AOj{{An{{Ad{Dd}}}}}}`{{AOje}{{Ad{BAh}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}0{{AOj{Ej{Ab}}dd}{{Ad{BAh}}}}{{BA`c}bADj}{{AOj{An{Ld}}}{{Ad{ANb}}}}{{AOj{An{En}}}AOj}{AOjEn}{{AOj{Db{Ab}}}{{Ad{AOj}}}}0{{AOj{Db{Ab}}}AOj}{{AOjBAj}c{}}{{AOj{BAl{En}}}c{}}{{AOj{BAn{En}}}c{}}{{AOj{BB`{En}}}c{}}{{AOjEn}c{}}{{AOj{Jn{En}}}c{}}{{AOjBf}c{}}{{AOj{BBb{En}}}c{}}{{}En}0000{{AOjEnc}{{Ad{AOj}}}B@l}{ce{}{}}000000{AOj{{Ad{F`}}}}{AOjd}1{AOj{{Ih{Ab}}}}{{AOjd}BBd}{AOjBBf}{AOj{{Ad{{An{Ab}}}}}}{{AOjB@n}{{Ad{{An{Ab}}}}}}{{AOjce}{{Ad{AOj}}}{{BBh{AMd}}}{{BBh{AMd}}}}{{AOjBBj}{{Ad{AOj}}}}3{{AOjAb}c{}}0{{AOjAOj}c{}}{AOjEn}{{{Ej{c}}}{{Ad{AOj}}}B@l}{{{Ej{Ab}}}AOj}{{{Ej{Ab}}}{{Ad{AOj}}}}{BBd{{An{c}}}{}}{BBf{{An{c}}}{}}{AOjAOj}{{AOjcd}{{Ad{{Ej{AOj}}}}}{{BBh{Df}}}}0{{AOje}{{Ad{c}}}{}{{C`{AOj}{{Bn{{Ad{c}}}}}}}}0{{AOjgc}{{Ad{e}}}{}{}{{C`{AOjc}{{Bn{{Ad{e}}}}}}}}{AOj{{An{Ab}}}}{{AOjAOj}d}==<{{AOjBfBf}{{Ad{AOj}}}}{{AOjBfc}{{Ad{AOj}}}B@l}{{AOjEnc}{{Ad{AOj}}}B@l}18`{{AOjAbdd{An{Hd}}}{{Ad{AOj}}}}0{{AOjEndd{An{Hd}}}{{Ad{AOj}}}}{AOjB@j}{{AOjAOj}{{Ad{b}}}}{{AOje}{{Ad{AOj}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOjEn}{{An{Ab}}}}{{AOjc}{{Ad{AOj}}}{{BBl{En}}}}2{{AOjc}{{Ad{{Ej{Ab}}}}}{{BBh{AMd}}}}{{AOjeBBn}{{Ad{AOj}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOjeB@j}{{Ad{AOj}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOj{Db{c}}}{{Ad{b}}}{{Jd{Bf}}}}{AOj{{Gb{EnEn}}}}{{AOjJl}AOj}{AOjd}{AOjb}{BBd{{Gb{En{An{En}}}}}}{BBf{{Gb{En{An{En}}}}}}{{AOjJlEn}AOj}0{{AOjcDn}{{Ad{AOj}}}{{BBh{AMd}}}}0{AOj{{`{{Bd{}{{B`{AOj}}}}}}}}{{AOjEnd}{{Ej{AOj}}}}{{AOjAb}c{}}0{{AOjAOj}c{}}{{AOjB@n}{{Ad{{An{Ab}}}}}}{{AOj{An{En}}}AOj}{{AOjDl}{{Ad{AOj}}}}{{AOjDl}AOj}{{AOjDld}AOj}{{AOjBC`}{{Ad{Lh}}}}{ce{}{}}00{cDf{}}{{AOjEncDn}{{Ad{AOj}}}{{BBh{AMd}}}}{{AOj{An{Bf}}{An{{Ln{Df{Ej{Df}}}}}}}{{Ad{AOj}}}}{{AOjBfe}{{Ad{AOj}}}B@l{{Md{Ab}{{Bn{{Ad{c}}}}}}}}{{AOjEne}{{Ad{AOj}}}B@l{{Md{Ab}{{Bn{{Ad{c}}}}}}}}{c{{Fl{e}}}{}{}}0000{BCb{{Ad{AOj}}}}{{{Gb{BCd{Db{ALj}}}}}{{Ad{AOj}}}}{{cB@j}{{Ad{AOj}}}{{Bd{}{{B`{{Ad{BAf}}}}}}}}{{AOjBf}{{Ad{En}}}}44444{cM`{}}0000{{AOj{An{{Db{Df}}}}BA`{An{{Gb{JlEn}}}}}{{Ad{AOj}}}}{{AOjd{An{{Db{Df}}}}BA`{An{{Gb{JlEn}}}}}{{Ad{AOj}}}}1{{AOjAOj}{{Ad{AOj}}}}0>>>>>{AOjEn}{{AOjc}{{Ad{AOj}}}B@l}{{AOjcB@j}{{Ad{AOj}}}B@l}{{AOjAb}AOj}{{AOjBf{An{L`}}}{{Ad{AOj}}}}{{AOjBf{An{L`}}}AOj}`{{cf}b{}}{ce{}{}}0{BBjBBj}{{ce}b{}{}}{{}BBj}{Enc{}}0{Enb}{{BBjBBj}d}{{ce}d{}{}}00{{BBjFd}Ff}{cc{}}{{BBjc}bADj}`{{}En};`;{c{{Fl{e}}}{}{}}0{cM`{}}```=````````````````````````````````>>>>{BAh{{Ad{AOj}}}}`{BCf{{Db{BCh}}}}{{BAhc}{{Ad{AOj}}}{{Cf{AOj}{{Bn{{Ad{AOj}}}}}}HjHl}}{AhDh}{ce{}{}}000000000000000{BCfBCf}{AhAh}{BAhBAh}{BCjBCj}{{ce}b{}{}}0009{{}BCf}{{}Ah}{Enc{}}00{BClc{}}1111111111111`{{BCne}{}{}{{BD`{c}}}}{Enb}000{BCfb}1111{{BCfBCf}d}{{AhAh}d}{{ce}d{}{}}00000`{BDbL`}{BCf{{Db{L`}}}}{BAh{{Ad{AOj}}}}{BCf{{Ej{L`}}}}{{BCfFd}Ff}{{AhFd}Ff}{{BAhFd}Ff}{{BCjFd}Ff}0{{BfBCj}Df}{cc{}}000{{{Ej{{Ej{BDd}}}}}BCf}1{{{Ej{BDd}}}BCf}{{{Ej{{Gb{{Ej{L`}}{Ej{BCh}}}}}}}BCf}3{BCfAh}44{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cBCf{{Fb{}{{B`{BDd}}}}}}{cBCf{{Gd{}{{B`{BDd}}}}}}{{AhEn}BDb}{BAhAh}0{AhDl}{{AhBf}Dl}{{BDfdd}{{Ad{Ah}}}}0{BAh{{Ad{AOj}}}}{AhBCf}{{}En}0000000{ce{}{}}000000020{BCfc{}}0100{BDbd}{Ahd}{BCfd}{BCf{{BDj{{BDh{{Ih{L`}}}}{Ih{BCh}}}}}}{AhBDl}{BAh{{Ej{Ab}}}}{{BAh{An{{Gb{JlEn}}}}}{{Ej{Ab}}}};{BDbEn}{AhEn}====={{{Ej{L`}}{Ej{BCh}}d}BCf}{{AOj{Ej{Ab}}Ah{An{{Ej{Df}}}}}BAh}{BDl{{An{c}}}{}}{{BDlEn}{{An{c}}}{}}{{BAhc}{{Ad{AOj}}}{{C`{AOj}{{Bn{{Ad{AOj}}}}}}HjHl}}{c{}{}}{AhBCn}{{BAhJbKj}{{Ad{AOj}}}}{{BAhe}BAh{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AhJlEn}BCl}{BCfb}{Ahb}{{BAhD`}{{Ad{AOj}}}}{BAh{{Ad{AOj}}}}{Ah{{Ej{L`}}}}0{BAhAh}0{ce{}{}}000{cDf{}}{c{{Fl{e}}}{}{}}000000000000000{cM`{}}0000000{AhAh}{AhBCf}{AhBDn}:66666666`````{{BCfc}Ab{{C`{{Gb{L`BCh}}}{{Bn{An}}}}HjHl}}{{BCfc}Ab{{C`{{Gb{L`BCh}}}{{Bn{}}}}HjHl}}{{{Db{{BE`{L`}}}}c}Ab{{C`{{BE`{L`}}}{{Bn{An}}}}HjHl}}{{{Db{{BE`{L`}}}}c}Ab{{C`{{BE`{L`}}}{{Bn{}}}}HjHl}}{{{Db{c}}eBEb}{{AGd{c}}}{BEdBEf}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{Db{c}}G`eBEb}{{AGd{c}}}{BEdBEf}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{j{c}}L`L`}{{j{c}}}Bl}{{BDn{Db{Eh}}}d}{{BEhAh}Ab}{{BEjBEj}BEj}0`{{BElAOjAh}{{Ad{Ab}}}}{BEl{{Ad{Bf}}}}```````````````````````{{cf}b{}}00{{BEnGh}{{An{b}}}}{{BF`Gh}b}0{ce{}{}}00000{BEnBEn}{BF`BF`}{BAfBAf}{{ce}b{}{}}00{{{Db{c}}}Dd{{AM`{Dd}}}}{{}BAf}{Enc{}}00000{Enb}00{{BAfBAf}d}{{ce}d{}{}}00{{BAfFd}Ff}{{{Gb{DdEn}}}BEn}{cc{}}0{{{Gb{DdEn}}}BF`}1{{eEn}B@j{{ALh{Dd}}}{{Bd{}{{B`{{Ej{{Gb{Dfc}}}}}}}}}}{{}En}00{ce{}{}}00{BEnAb}{BF`Ab}{{DdEn}BEn}{{DdEn}BF`}{{{Ej{Gh}}}BAf}{{BEnEn}Ab}{{BF`En}Ab}{{{Db{BAf}}{An{En}}}{{Ad{B@j}}}}0{{{Db{BAf}}{An{En}}}{{Ad{{Ej{Dd}}}}}}999{c{{Fl{e}}}{}{}}00000{cM`{}}00;;;{{{Db{AOj}}}{{Ad{AOj}}}}0`````{{HdHd}Hd}{{{Db{AOj}}{An{Ld}}}{{Ad{{Gb{{Ej{ANb}}Ld}}}}}}{{{BFb{Jl}}Ld{Ej{Hd}}}b}????{{}BFd}{Enc{}}000{Enb}0{BFdHd}{{BFfFd}Ff}{cc{}}0{{BFfc}bADj}``{{}En}0{ce{}{}}0{{{BFh{BFfce}}L`HdAOjgi}b{}BFj{{C`{}{{Bn{c}}}}}{{Cf{c}}}}????>>{{BFlLd{Ej{Hd}}}{{Ad{b}}}}0{{BFlLd{Db{Hd}}}{{Ad{b}}}}033{{BFd{Db{D`}}}b}{{BFdJh}b}{{BFdJl}b}{{BFdKd}b}{{BFdHd}b}````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000{{{AAn{ce}}}e{}BFn}{{{AAn{c}}}BG`{BGbLb}}{{{AAn{ce}}}{}LbBFn}{{{AAn{c}}}JhBGd}{{{AAn{ce}}}cLbBFn}{{{AAn{{Db{{BGf{c}}}}e}}}{{AAn{{Db{c}}e}}}{}BFn}{{{AAn{{BGf{c}}e}}}{{AAn{ce}}}{}BFn}{ce{}{}}00300000000000000000000000{{AIjAIjc}{{Ad{AIj}}}AIl}{{{AAn{c}}}{{An{AG`}}}{AG`Lb}}`{{BGhAb}{{Ad{Ab}}}}{{BGhc}{{Ad{Ab}}}A`}{MbMb}{BGjBGj}{{{AAn{ce}}}{{AAn{ce}}}Lb{BFnNj}}{KnKn}{BC`BC`}{ALjALj}{BAdBAd}{KjKj}{BGlBGl}{BGnBGn}{BH`BH`}{{ce}b{}{}}0000000000{{{AAn{ce}}{AAn{ce}}}AMj{BHbLb}BFn}{AKne{}{{AHj{c}}AFl}}0{{AKnAAb}e{}{{AHl{c}}AFl}}0{{ce}AMj{}{}}{{FhAAb}{{A@b{Fh}}}}{ALjAAb}```{{}b}{cbBFn}{{}{{AAn{c}}}BHd}{{}Kn}{{}BC`}{{}ALj}{{}BAd}{{}Kj}`{Enc{}}000{{{AAn{ce}}}cLbBFn}1111111111111111111111{{{AAn{c}}}Bf{AG`Lb}}`{{{AAn{AAdc}}}{{Fl{{AAn{ec}}{AAn{AAdc}}}}}BFn{AAdHjHl}}{{{AAn{AAdc}}}{{AAn{ec}}}BFn{AAdHjHl}}{{{AAn{ce}}}{{BHf{ce}}}Lb{NjBFn}}{Enb}000{{{AAn{ce}}}bLbBFn}111111111{{MbMb}d}{{{AAn{Fh}}Fh}d}{{{AAn{BHh}}BHh}d}{{{AAn{ce}}{AAn{ce}}}d{BHjLb}BFn}{{BC`BC`}d}{{ALjALj}d}{{BAdBAd}d}{{KjKj}d}{{BH`BH`}d}{{ce}d{}{}}00000000000000000000{BGj{{Gb{KdKd}}}}`{{BAdc}BAd{{C`{EnALj}{{Bn{d}}}}}}{{AIlALbALb}{{Ad{ALb}}}}{{{AAn{BHl}}}{{Fl{bBHn}}}}{{AHbFd}{{Fl{bALd}}}}0{{MbFd}{{Fl{bALd}}}}{{BGjFd}{{Fl{bALd}}}}{{{AAn{ce}}Fd}{{Fl{bALd}}}{AAfLb}BFn}{{{AAn{ce}}Fd}{{Fl{bALd}}}LbBFn}{{{AAn{ce}}Fd}{{Fl{bALd}}}{B@bLb}BFn}{{BC`Fd}Ff}{{ALjFd}{{Fl{bALd}}}}{{BAdFd}{{Fl{bALd}}}}{{KjFd}{{Fl{bALd}}}}{{BGlFd}{{Fl{bALd}}}}{{BGnFd}{{Fl{bALd}}}}{{BH`Fd}{{Fl{bALd}}}}`{BI`AHb}{BIbAHb}{cc{}}{BIdAHb}{BHnAHb}2{KdMb}3{{{AHd{c}}}{{AAn{c}}}{BIfLb}}{{{Db{c}}}{{AAn{{Db{c}}}}}Nj}{{{BE`{c}}}{{AAn{{Db{c}}}}}{}}{BIh{{AAn{BIh}}}}{BIj{{AAn{BIl}}}}{BIl{{AAn{BIl}}}}{BIn{{AAn{BIh}}}}{{{A@b{ce}}}{{AAn{ce}}}LbBFn}{{{AAn{Bf}}}{{AAn{{Db{D`}}}}}}{Bf{{AAn{Bf}}}}{c{{AAn{c}}}{}}{BJ`{{AAn{BJb}}}}{{{Ej{ce}}}{{AAn{{Db{c}}e}}}{}{BFnNj}}{BJdc{}}{Df{{AAn{Bf}}}}{cc{}}{BJb{{AAn{BJb}}}}1111{{{Ej{ALj}}}BAd}22222{{c{An{G`}}}BJf{}}{{{BJh{Jl}}{BJh{D`}}{An{G`}}}BJj}{{{BJh{Jl}}{BJh{D`}}{An{G`}}}BJl}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{e{{AAn{{Db{c}}}}}{}{{Fb{}{{B`{c}}}}}}{{gEn}{{BJn{Jl}}}Jd{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}0{e{{BJn{Jl}}}{{Fb{}{{B`{{An{d}}}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{{gAAb}{{BJn{Jl}}}BEf{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}2{e{{AAn{{Db{c}}}}}Hj{{Gd{}{{B`{c}}}}}}{{}{{AAn{c}}}Lb}{c{{AAn{ec}}}BFnLb}{Bf{{Fl{BK`}}}}{{Bfc}BKb{}}{{{AAn{ce}}{AAn{ce}}}d{BKdLb}BFn}{{{AAn{ce}}}{{An{c}}}LbBFn}{{{AAn{ce}}}cLbBFn}{BAd{{Ej{Bf}}}}{{EhEn}Gh}4{BKfd}{{{AAn{ce}}g}b{BKhLb}BFnADj}{{BC`c}bADj}{{ALjc}bADj}{{Kjc}bADj}{{BH`c}bADj}{MbKd}{{}b}{cb{NjBFn}}{{BAdBf}{{An{En}}}}{{{Db{Kd}}}{{`{{Bd{}{{B`{En}}}}}}}}{{}En}000000000000`{BGjHd}`{ce{}{}}000000000000{{{AAn{ce}}}{{An{c}}}{}BFn}{{{AAn{ce}}}{}LbBFn}{{{AAn{BKj}}}Ab}{BAdd}{BGjd}{Mbd}`{{{AAn{BHl}}}d}{cd{}}1{{{AAn{ce}}{AAn{ce}}}d{BKdLb}BFn}{BAdEn}`1{{AIjAIj}{{Ad{{Gb{AIjAIj}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{{AAn{ce}}}cNj{BFnNj}}{BKlAb}0{BKnAb}``11``{{{AAn{ce}}{AAn{ce}}}d{BHjLb}BFn}{{BL`En}{{An{En}}}}{{Bfc}BLb{}}{c{{AAn{c}}}{}}{{cAAbd}ALj{{ALh{Df}}}}{e{{AAn{c}}}{}{{Md{{BHf{c}}}{{Bn{c}}}}}}{{ce}{{AAn{ce}}}{}BFn}{{}{{AAn{{BGf{c}}}}}{}}{c{{AAn{{BGf{e}}c}}}BFn{}}{En{{AAn{{Db{{BGf{c}}}}}}}{}}{{Enc}{{AAn{{Db{{BGf{e}}}}c}}}BFn{}}3210`{{}Mb}{{}BGj}{{{AAn{ce}}{AAn{ce}}}{{An{AMj}}}{BKdLb}BFn}{c{{BLd{{AAn{c}}}}}{}}{{ce}{{BLd{{AAn{ce}}}}}{}BFn}`````{BKlAb}0{{{AAn{c}}BLf}b{AG`Lb}}{{{AAn{ce}}{AAn{ce}}}dLbBFn}{{BKnJbKj}{{Ad{Ab}}}}{{{AAn{BHl}}{Db{D`}}}{{Fl{EnBHn}}}}{{{AAn{BHl}}BLh}{{Fl{bBHn}}}}{{{AAn{BHl}}{Ej{D`}}}{{Fl{EnBHn}}}}{{{AAn{BHl}}Df}{{Fl{EnBHn}}}}{{{AAn{BHl}}{Db{BLj}}}{{Fl{EnBHn}}}}`{{{AAn{BHl}}BLl}{{Fl{HdBHn}}}}`{{AGhEnEn}AGh}0{AHb{{An{AG`}}}}{{{AAn{c}}}{{An{AG`}}}{AG`Lb}}{{BLnD`}Ab}{{KdKd}BGj}`{{{AAn{ce}}}EnLbBFn}??{Mb{{An{Kd}}}}{ce{}{}}0000000000{cDf{}}0{AKn{{Fl{eg}}}{}{{AHj{c}}AFl}{}}0{{AKnAAb}{{Fl{eg}}}{}{{AHl{c}}AFl}{}}0{c{{Fl{e}}}{}{}}000{{{AAn{{Db{c}}e}}}{{Fl{{AAn{{BE`{c}}e}}}}}{}BFn}1111111111111111111111{{BL`En}{{Fl{EnAHb}}}}{c{{Fl{{AAn{c}}BM`}}}{}}{{ce}{{Fl{{AAn{ce}}BM`}}}{}BFn}{{}{{Fl{{AAn{{BGf{c}}}}BM`}}}{}}{c{{Fl{{AAn{{BGf{e}}c}}BM`}}}BFn{}}10{c{{Fl{{BLd{{AAn{c}}}}BM`}}}{}}{{ce}{{Fl{{BLd{{AAn{ce}}}}BM`}}}{}BFn}{{{AAn{ce}}}{{Fl{c{AAn{ce}}}}}{}BFn}{cM`{}}000000000000{{{AAn{ce}}}cNj{BFnNj}}`{{BLnD`}Ab}{ce{}{}}000000000000{{{AAn{ce}}}EnLbBFn}``{{ALj{BMb{DfDf}}}ALj}{{BAd{BMb{DfDf}}}BAd}{{AHbC`}AHb}{{{AAn{BHl}}{Db{D`}}}{{Fl{EnBHn}}}}{{{AAn{BHl}}{Db{BMd}}}{{Fl{EnBHn}}}}```{{c{An{G`}}}BJf{}}{{{BJh{Jl}}{BJh{D`}}{An{G`}}}BJj}{{{BJh{Jl}}{BJh{D`}}{An{G`}}}BJl}`99{Enc{}}0{Enb}{{BMf{An{AAb}}}{{Fl{{BJn{Jl}}AHb}}}}{cc{}}{{}En}>{BMfd}{EnBMf}{BMf{{Db{Jl}}}}{{BMfFh}b}{BMfb}{{BMf{Db{{A@b{Fh}}}}}b}1{{BMf{An{Fh}}}b}{BMf{{BMh{Jl}}}}{c{{Fl{e}}}{}{}}0{cM`{}}{ce{}{}}`{{cf}b{}}{BMjAAd}{BMj{{A@b{Fh}}}}133{BMjBMj}{{ce}b{}{}}{BMjAAb}{{}BMj}{Enc{}}0{Enb}{{BMjEn}b}{{BMjFd}{{Fl{bALd}}}}{cc{}}{{}En}={BMjEn}{EnBMj}{BMjb}60{ce{}{}}{c{{Fl{e}}}{}{}}0{cM`{}}{BMj{{An{BMl}}}}3```````{{AGhEnEn}AGh}0`{{}b}0{{}d}``{{eEnEn}{{BMn{Jl}}}{{Jd{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEnEn}{{BFb{Jl}}}{{Jd{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{Hdb}```{{cf}b{}}::{B@jB@j}{{ce}b{}{}}{{B@jBf}d}{{}B@j}{Enc{}}0{Enb}{{B@jB@j}d}{{ce}d{}{}}00{{B@jFd}Ff}{BN`B@j}{cc{}}{{{Db{Ab}}}B@j}{BAfB@j}{BAdB@j}04{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{eB@j{{ALh{Kl}}}{{Fb{}{{B`{c}}}}}}{{B@jBf}{{An{Dd}}}}{{B@jEn}{{An{{Gb{AMdDd}}}}}}0{{B@jBf}{{An{Kl}}}}{{B@jBf}{{An{{Gb{EnAMdDd}}}}}}{BNb{{Ej{Bf}}}}{B@j{{Ej{Bf}}}}{{B@jc}bADj}{{BNbBf}{{An{En}}}}{{B@jBf}{{An{En}}}}{{}En}{{B@jEnAMdDd}{{Ad{{An{Dd}}}}}}{ce{}{}}{B@jc{}}{B@jd}{B@j{{`{{Bd{}{{B`{{Gb{AMdDd}}}}}}}}}}{B@j{{`{{Hn{}{{B`{Dd}}}}}}}}0{B@j{{`{{Hn{}{{B`{Kl}}}}}}}}{B@j{{`{{Hn{}{{B`{AMd}}}}}}}}{B@jEn}{{B@jB@j}b}{{}B@j}{{B@jEnAMdDd}{{Ad{B@j}}}}{{B@jBf}{{An{Dd}}}}{{B@jBfAMd}{{An{AMd}}}}{{B@jBfDd}{{An{Dd}}}}{{B@jEnDd}{{An{Dd}}}}3{{B@jEn}{{An{{Gb{AMdDd}}}}}}{{B@jd}BAd}{ce{}{}}{{B@jB@j}{{Ad{d}}}}{c{{Fl{e}}}{}{}}{{B@jBf}{{Ad{Dd}}}}{{B@jEn}{{Ad{{Gb{AMdDd}}}}}}{{B@jBf}{{Ad{Kl}}}}{{B@jBf}{{Ad{{Gb{EnAMdDd}}}}}}3{{BNbBf}{{Ad{En}}}}5{cM`{}}8{EnB@j}{{B@jAMdDd}{{An{Dd}}}}``````````````{{cf}b{}}0{BKj{{Ad{Ab}}}}0{{Bf{Ej{Eh}}AAb}{{Ad{Ab}}}}{{Bf{Ej{Eh}}AAb{An{BNd}}}{{Ad{Ab}}}}{{Abc}e{nJ`}{}}{{AbAb}c{}}01{{AbAb}{{Ad{Ab}}}}{{BKjDj}Dl}0{BKj{{Ad{Dl}}}}0`{{AbEn}Eh}{BKjAAd}00{AbDh}{BKj{{j{c}}}Bl}0{AbBKj}{BKj{{Ad{En}}}}0{Ab{{Ad{En}}}}{Ab{{Ad{E`}}}}{Ab{{Ad{AGn}}}}{{BKjAb}{{Ad{Ab}}}}00000{Ab{{Ad{F`}}}}{ce{}{}}00000{{BKjDd}{{Ad{Ab}}}}{{AbDd}{{Ad{Ab}}}}0{Ab{{Ad{AIj}}}}55{{AbAb}{{Ad{Ab}}}}{{Abc}{{Ad{Ab}}}A`}{BKjEf}{BKj{{Ej{Eh}}}}0{Ab{{Ej{Eh}}}}{AbAb}{H`H`}1{BKj{{AAn{BKj}}}}{{ce}b{}{}}0{Abb}{Ab{{Ad{Hh}}}}{{}Ab}{Enc{}}00{Abc{}}111{{AbAb}c{}}{{Abc}e{nJ`}{}}01{{AbAb}{{Ad{Jb}}}}{Enb}00{BKjAb}0{BKjDd}0{{H`H`}d}{{AbAb}d}{{Abc}{{Ad{F`}}}ALf}{{AbAb}{{Ad{F`}}}}{{AbBf}{{Ad{F`}}}}1{{AbBf}c{}}{{Abc}eALf{}}55{{ce}d{}{}}00{AbEn}{Ab{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}{{AbGhEn}{{Ad{Ab}}}}{Ab{{Ad{AHf}}}}{Ab{{Ad{AHh}}}}{BKj{{AHd{Kl}}}}0{{AbACh}{{Ad{Ab}}}}{{BKjF`}{{Ad{Ab}}}}{{AbF`d}{{Ad{Ab}}}}{{H`Fd}Ff}{{AbFd}Ff}0{AbDf}{cc{}}00{{{j{c}}}AbBl}{{Bf{Db{Gh}}d}{{Ad{Ab}}}}{{Bf{Db{Gh}}Ddd}{{Ad{Ab}}}}{{BfEh}{{Ad{Ab}}}}{{Bf{Ej{Eh}}Dd}Ab}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAb{{Fb{}{{B`{{An{Jh}}}}}}}}{cAb{{Fb{}{{B`{Bf}}}}}}{cAb{{Fb{}{{B`{Hd}}}}}}{cAb{{Fb{}{{B`{{An{d}}}}}}}}1{cAb{{Fb{}{{B`{{An{Kd}}}}}}}}{cAb{{Fb{}{{B`{Kd}}}}}}{cAb{{Fb{}{{B`{Jl}}}}}}{cAb{{Fb{}{{B`{{An{Hb}}}}}}}}{cAb{{Fb{}{{B`{Hb}}}}}}{cAb{{Fb{}{{B`{d}}}}}}3{cAb{{Fb{}{{B`{Jh}}}}}}{cAb{{Fb{}{{B`{{An{Jl}}}}}}}}{cAb{{Fb{}{{B`{Jb}}}}}}023{cAb{{Fb{}{{B`{{An{Hd}}}}}}}}85{cAb{{Fb{}{{B`{Df}}}}}}{cAb{{Fb{}{{B`{{An{Jb}}}}}}}}{{Bf{Ej{Kd}}}Ab}{{Bf{Ej{Hd}}}Ab}{{Bf{Ej{Jl}}}Ab}{{Bf{Ej{Jh}}}Ab}{{Bf{Ej{Hb}}}Ab}{{Bf{Ej{Jb}}}Ab}{{BfEnDd}Ab}{{AbEnEn}Ab}{{BKjEn}{{Ad{Gh}}}}{AbEn}{AbAl}{{BKjEn}{{An{Gl}}}}0{{BKjEnEn}{{An{Gl}}}}0{{BKjEn}Gh}0{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALf}{{AbAb}{{Ad{F`}}}}10{{AbBf}c{}}{BKjd}{{H`c}bADj}{{Ab{An{En}}}Ab}{Ab{{Ad{ANf}}}}{Ab{{Ad{ANh}}}}{Ab{{Ad{ANj}}}}{Ab{{Ad{ANd}}}}{Ab{{Ad{Dl}}}}`{Ab{{Ad{Dh}}}}{{}En}00{ce{}{}}00{AbAOj}1{B@lAb}{AbAb}=={Ab{{Ad{F`}}}}000{BKjF`}0{{}d}00{AbH`}{AbBNf}{BKjEn}{{BKjEn}Ab}0<{{AbAb}{{Ad{F`}}}}{{AbBf}c{}}{{Abc}{{Ad{F`}}}ALf}102{Ab{{Ad{{An{c}}}}}J`}{BKj{{Ad{Ab}}}}0{BKj{{An{Jb}}}}0=0011211{{AbAb}c{}}{{Abc}e{nJ`}{}}0199{BKj{{Ad{En}}}}0{BKjBf}{{Bfc}Ab{{Jd{{Db{{An{Kd}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{{AHd{Bf}}}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{{AHd{{Db{D`}}}}}}}}}}}}{{Bfc}Ab{{Jd{{Db{{AHd{{Db{D`}}}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Df}}}}}}}}{{Bfc}Ab{{Jd{{Db{Bf}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Hd}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{{Db{D`}}}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Ab}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Bf}}}}}}}}{{Bf{Jn{Jl}}}Ab}{{Bfc}Ab{{Jd{{Db{Jb}}}}}}{{Bfc}Ab{{Jd{{Db{Jh}}}}}}{{Bfc}Ab{{Jd{{Db{Hb}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Jl}}}}}}}}{{Bfc}Ab{{Jd{{Db{Gh}}}}}}{{Bfc}Ab{{Jd{{Db{d}}}}}}{{Bfc}Ab{{Jd{{Db{{Db{D`}}}}}}}}{{Bf{Jn{Kd}}}Ab}{{Bfc}Ab{{Jd{{Db{{An{Jh}}}}}}}}{{Bf{Jn{Hd}}}Ab}{{Bfc}Ab{{Jd{{Db{Ab}}}}}}{{Bfc}Ab{{Jd{{Db{Jl}}}}}}{{Bfc}Ab{{Jd{{Db{{AHd{Bf}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Hb}}}}}}}}{{Bfc}Ab{{Jd{{Db{{Ej{D`}}}}}}}}{{Bfc}Ab{{Jd{{Db{{An{Jb}}}}}}}}{{Bfc}Ab{{Jd{{Db{Kd}}}}}}{{Bf{Jn{Jh}}}Ab}{{Bfc}Ab{{Jd{{Db{{An{{Ej{D`}}}}}}}}}}{{Bfc}Ab{{Jd{{Db{Hd}}}}}}{{BfAb}Ab}{{Bfc}Ab{{Jd{{Db{Df}}}}}}{{Bfc}AbB@l}{{Bfc}Ab{{Jd{{Db{{An{d}}}}}}}}{{BfDd}Ab}{{BKjEnEn}Ab}{{BfEn}Ab}{BNf{{An{c}}}{}}{{AbAb}{{Ad{F`}}}}{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALf}{{Abc}eALf{}}{{AbBf}c{}}4{Ab{{Ad{`}}}}{BKjEn}`{AbBNh}{Ab{{Ad{Ab}}}}{{BKjJbKj}{{Ad{Ab}}}}0{BKjAb}{{Abc}e{nJ`}{}}0{{AbAb}c{}}{{BKjBf}b}{{AbBf}Ab}{{Ab{Db{Jl}}}{{Ad{Ab}}}}5{H`H`}{{BKjC`Kn}{{Ad{Ab}}}}0{{AbJbdd{An{Hd}}}{{Ad{Ab}}}}{{AbEndd{An{Hd}}}{{Ad{Ab}}}}{{AbH`}b}{{BKjJl}Ab}{BKjb}0{Abb}{{Ab{An{Hd}}}Ab}{BNf{{Gb{En{An{En}}}}}}{{BKjJlEn}Ab}{{AbDj}{{Ad{Ab}}}}{{BKjDj}{{Ad{Ab}}}}0{{BKjD`}{{An{Jb}}}}0{{BKjD`}{{Ad{Ab}}}}0{Ab{{Ad{Ll}}}}{{AbEn}{{Ad{{AHd{Bf}}}}}}{{AbDd}{{Ad{Ab}}}}{{Abc}e{nJ`}{}}{{AbAb}c{}}10{Ab{{Ad{c}}}J`}{Ab{{Ad{Ab}}}}{{Ab{An{En}}}Ab}{{BKjDl}{{Ad{Ab}}}}{{BKj{Db{L`}}}{{Ad{Ab}}}}{{BKj{Db{L`}}}Ab}{{Ab{Db{L`}}d}Ab}{{AbDld}{{Ad{Ab}}}}{{BKjDl}Ab}{{Ab{Db{L`}}}Ab}{{AbDld}Ab}{{AbEnd}Eh}:{ce{}{}}0{Ab{{AHd{Ab}}}}{cDf{}}{{AbAb}{{Ad{Ab}}}}{c{{Fl{e}}}{}{}}0{{{Gb{ALjEh}}}{{Ad{Ab}}}}{{{Gb{Bf{Ej{Eh}}}}}{{Ad{Ab}}}}{{{Gb{ALj{Ej{Eh}}}}}{{Ad{Ab}}}}{{{Gb{BfEh}}}{{Ad{Ab}}}}4444{cM`{}}00{Ab{{Ad{AN`}}}}{Ab{{Ad{ALb}}}}{Ab{{Ad{ANb}}}}{Ab{{Ad{AMn}}}}{BKj{{Ad{Ab}}}}0{Ab{{Ad{Ab}}}}{BKj{{Ad{{j{c}}}}}Bl}`{{BKjD`}{{An{Jb}}}}0{{BKjD`}{{Ad{Ab}}}}0{ce{}{}}00{{AbBf}Ab}{{Abc}Ab{nJ`}}{{AbF`Ab}{{Ad{Ab}}}}````{{{BNj{}{{Bn{c}}}}Ab}c{}}{{BNlAb}{{Ad{Ab}}}}{{{j{Af}}Ab}{{Ad{Ab}}}}0`2100210021002100``{{BGhAb}{{Ad{Ab}}}}{{{j{Ed}}Ab}{{Ad{Ab}}}}0{{BGhc}{{Ad{Ab}}}A`}{{{j{Ed}}c}{{Ad{Ab}}}A`}0```{{cf}b{}};;{BNnBNn}{{ce}b{}{}}{{}BNn}{Enc{}}0{Enb}{{BNnBNn}d}{{ce}d{}{}}00{{BNnFd}Ff}{cc{}}{{BNnc}bADj}{{}En}{ce{}{}}0{c{{Fl{e}}}{}{}}0{cM`{}}2``>{CdAb}033{CdCd}>1<<;754{AbCd}{{CdEh}b}65546{{CdEhe}c{}{{C`{Cd}{{Bn{c}}}}}}````````{{cf}b{}}9{{{Ej{AOj}}}{{Ad{AOj}}}}{c{{Ad{AOj}}}{{Fb{}{{B`{AOj}}}}}}{cAOj{{Fb{}{{B`{AOj}}}}}}{c{{An{AOj}}}{{Fb{}{{B`{AOj}}}}}}{{{j{c}}{j{e}}}{{Gb{{AHd{{j{c}}}}{AHd{{j{e}}}}}}}BlBl}{{{j{c}}{j{e}}{j{g}}}{{Gb{{AHd{{j{c}}}}{AHd{{j{e}}}}{AHd{{j{g}}}}}}}BlBlBl}{BO`d}{c{{Ad{Dd}}}{{Fb{}{{B`{Gh}}}}}}{c{{Ad{{Gb{DdEn}}}}}{{Fb{}{{B`{Gh}}}}}}`{ce{}{}}00000{{{BOb{ec}}}{{BOb{ec}}}Nj{Nj{Bd{}{{B`{c}}}}}}{{ce}b{}{}}{{{j{c}}{j{c}}}{{Gb{{AHd{{j{c}}}}{AHd{{j{c}}}}}}}Bl}{{AbAb}{{Gb{AbAb}}}}{BO`e{}{{BOd{c}}}}{BO`e{}{{BOf{c}}}}>={{BO`c}dBHj}{{{BOh{c}}}e{}{}}{Enc{}}{{{AGj{c}}}e{}{}}111011{Enb}00{cB@j{{Fb{}{{B`{Dd}}}}}}{c{{Ad{Dd}}}{{Fb{}{{B`{Dd}}}}}}{{AbBf}{{Ad{b}}}}{{{BOh{Ab}}{BOh{Ab}}}d}{{ce}d{}{}}00`{{BO`cg}{{An{c}}}{}{}{{Cf{ce}{{Bn{c}}}}}}{cc{}}00{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{c{{AGj{F`}}}{{Fb{}{{B`{d}}}}}}{c{{AGj{{j{e}}}}}{{Fb{}{{B`{}}}}}l}{eBOf{}{{Fb{}{{B`{c}}}}}}12{c{{AGj{{j{e}}}}}{{Gd{}{{B`{}}}}}l}{c{{AGj{{j{e}}}}}{{Gf{}{{B`{}}}}}l}{c{{AGj{F`}}}{{Gf{}{{B`{d}}}}}}{{DdDd}{{An{Dd}}}}{{AJdAJd}AJd}{{AbAb}{{Ad{b}}}}{{{BOh{Ab}}c}bADj}{{}En}00{ce{}{}}00{{{AGj{c}}}c{}}1{BBh{{Ej{c}}}{}}{c{{Ej{Df}}}{}}{c{{Ej{{BOl{BOj}}}}}{}}{c{{AGj{c}}}{}}{{eEn}{{BOb{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{BOb{ec}}}An{}{{Bd{}{{B`{c}}}}}}{{{BOb{ec}}}An{}{{Bd{}{{B`{c}}}}El}}`{{{BOb{ec}}}{{Gb{En{An{En}}}}}{}{{Bd{}{{B`{c}}}}}}{{{Db{c}}JlEn}{{Db{c}}}{}}{{{j{c}}En}{{Ad{{Ej{{j{c}}}}}}}Bl}{{AOjEnd}{{Ad{{Ej{AOj}}}}}}<{{BO`En}{{BOb{BO`c}}}{}}{c{{Fl{e}}}{}{}}00{{DdDd}{{Ad{Dd}}}}111{cM`{}}00{ce{}{}}00{{Dde}c{}{{C`{Cd}{{Bn{c}}}}}}{{{Db{{Ej{c}}}}}{{Gb{En{Ej{En}}}}}{}}{AOj{{`{{Bd{}{{B`{AOj}}}}}}}}{{{Db{c}}}{{AGd{L`}}}{{Jd{{Db{Mb}}}}HjHl}}{{{Db{e}}}{{Ej{c}}}{HjHlCb}{{Jd{{Db{c}}}}}}{Ab{{Ej{Ab}}}}","D":"IGf","p":[[1,"unit"],[1,"bool"],[5,"Private",4858],[5,"ListType",1228],[5,"ChunkedArray",39],[10,"PolarsNumericType",1228],[10,"Num",4859],[10,"ToPrimitive",4860],[5,"Series",4281],[8,"PolarsResult",3577],[10,"NumOpsDispatchInner",4662],[6,"GroupsProxy",3178],[5,"BooleanType",1228],[5,"Settings",39],[6,"Option",4861],[17,"Item"],[8,"ArrayBox",4721],[10,"Iterator",4862],[1,"str"],[17,"Structure"],[5,"Flat",1228],[10,"PolarsDataType",1228],[17,"Output"],[10,"Fn",4863],[10,"Copy",4864],[5,"UnstableSeries",4721],[10,"FnMut",4863],[5,"Float64Type",1228],[5,"Float32Type",1228],[5,"StringType",1228],[5,"BinaryType",1228],[1,"u8"],[1,"slice"],[6,"DataType",1228],[5,"String",4865],[8,"ListChunked",1228],[5,"SortOptions",1146],[8,"IdxCa",1228],[5,"SortMultipleOptions",1146],[8,"BinaryChunked",1228],[10,"PolarsIntegerType",1228],[10,"NumOpsDispatchCheckedInner",4687],[8,"ChunkIdIter",39],[8,"ArrayRef",3577],[5,"Vec",4866],[10,"DoubleEndedIterator",4867],[1,"usize"],[8,"BooleanChunked",1228],[10,"IntoIterator",4868],[5,"Formatter",4869],[8,"Result",4869],[10,"Array",4870],[17,"Array"],[6,"Result",4871],[10,"FallibleIterator",4872],[5,"Bitmap",4873],[1,"tuple"],[10,"IntoParallelIterator",4874],[10,"TrustedLen",4875],[6,"AnyValue",1228],[5,"ObjectType",1228],[10,"PolarsObjectSafe",817],[10,"PolarsObject",817],[6,"IsSorted",4281],[1,"f32"],[1,"u64"],[5,"Int128Type",1228],[8,"DecimalChunked",1228],[10,"Send",4864],[10,"Sync",4864],[10,"ExactSizeIterator",4876],[10,"PolarsFloatType",1228],[10,"PolarsIterator",778],[5,"Iter",4877],[5,"IterNames",4877],[5,"Iter",4878],[1,"fn"],[5,"Map",4879],[6,"ChunkedArrayLayout",39],[10,"NumCast",4860],[1,"f64"],[10,"AsRef",4880],[5,"Int32Type",1228],[1,"i32"],[5,"Int64Type",1228],[1,"i64"],[5,"Range",4881],[5,"UInt64Type",1228],[5,"UInt32Type",1228],[1,"u32"],[10,"ParallelIterator",4874],[10,"IndexedParallelIterator",4874],[6,"QuantileInterpolOptions",3577],[5,"Field",1228],[5,"RollingOptionsFixedWindow",3577],[8,"IdxSize",3577],[10,"Sized",4864],[5,"RandomState",4882],[5,"BytesHash",4883],[8,"Array2",4884],[8,"ArrayView1",4884],[8,"StringChunked",1228],[6,"Either",4885],[5,"TypeId",4886],[5,"NullableIdxSize",3577],[10,"FnOnce",4863],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",476],[10,"ChunkedBuilder",504],[5,"BinViewChunkedBuilder",504],[10,"ViewType",4887],[5,"BooleanChunkedBuilder",504],[5,"NullChunkedBuilder",504],[5,"PrimitiveChunkedBuilder",504],[10,"Clone",4888],[8,"StringChunkedBuilder",504],[8,"BinaryChunkedBuilder",504],[10,"NewChunkedArray",504],[5,"AnonymousListBuilder",608],[5,"AnonymousOwnedListBuilder",608],[5,"ListBooleanChunkedBuilder",608],[5,"ListPrimitiveChunkedBuilder",608],[10,"ListBuilderTrait",608],[5,"ListStringChunkedBuilder",608],[5,"ListBinaryChunkedBuilder",608],[5,"ListNullChunkedBuilder",608],[5,"Box",4889],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[5,"BooleanArray",4890],[5,"BoolIterNoNull",778],[5,"SomeIterator",778],[5,"ObjectArray",817],[6,"ArrowDataType",1228],[10,"Any",4886],[10,"Debug",4869],[8,"ObjectValueIter",817],[5,"BitmapIter",4891],[6,"ZipValidity",4892],[5,"Arc",3577],[5,"ObjectChunkedBuilder",888],[8,"ObjectChunked",1228],[10,"AnonymousObjectBuilder",911],[5,"ObjectRegistry",911],[8,"ObjectConverter",911],[8,"BuilderConstructor",911],[17,"FuncRet"],[10,"ChunkApply",939],[10,"ChunkApplyKernel",939],[10,"ChunkSort",939],[10,"ChunkUnique",939],[10,"ChunkCast",939],[6,"FillNullStrategy",939],[10,"ChunkCompare",939],[10,"ChunkExplode",939],[5,"OffsetsBuffer",4893],[10,"ChunkFillNullValue",939],[10,"ChunkFilter",939],[10,"ChunkFull",939],[10,"ChunkFullNull",939],[10,"ChunkAnyValue",939],[10,"Hasher",4894],[10,"IsFirstDistinct",939],[10,"IsLastDistinct",939],[10,"ChunkAgg",939],[10,"ChunkQuantile",939],[10,"ChunkExpandAtIndex",939],[10,"ChunkReverse",939],[10,"ChunkRollApply",939],[10,"ChunkSet",939],[10,"ChunkShift",939],[10,"ChunkShiftFill",939],[10,"ChunkVar",939],[10,"ChunkTake",939],[10,"ChunkTakeUnchecked",939],[10,"ChunkBytes",939],[10,"ChunkZip",939],[10,"BinaryFnMut",1062],[10,"StaticArray",1228],[10,"TernaryFnMut",1062],[10,"Error",4895],[10,"UnaryFnMut",1062],[5,"PrimitiveArray",4896],[6,"SearchSortedSide",1102],[10,"SlicedArray",3577],[5,"NoNull",4745],[5,"RowsEncoded",4897],[8,"BinaryOffsetChunked",1228],[5,"NaiveDateTime",4898],[6,"PolarsError",3577],[6,"Cow",4899],[8,"Float32Chunked",1228],[8,"Float64Chunked",1228],[10,"ArrayFromIter",1228],[10,"ArrayFromIterDtype",1228],[10,"AsRefDataType",1228],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",4900],[10,"From",4880],[5,"CategoricalChunked",2563],[10,"CategoricalMergeOperation",2563],[10,"LogicalType",1228],[5,"Logical",1228],[5,"OwnedObject",1228],[6,"TimeUnit",1228],[5,"UInt8Type",1228],[5,"UInt16Type",1228],[5,"Int8Type",1228],[5,"Int16Type",1228],[5,"DateType",1228],[5,"DecimalType",1228],[5,"DatetimeType",1228],[5,"DurationType",1228],[5,"CategoricalType",1228],[5,"TimeType",1228],[5,"BinaryOffsetType",1228],[6,"ArrowTimeUnit",1228],[10,"ArrayCollectIterExt",3577],[8,"Utf8ViewArray",4887],[8,"UInt32Chunked",1228],[5,"Error",4869],[10,"NumericNative",1228],[10,"Into",4880],[5,"ArrowField",3577],[6,"IntegerType",4901],[6,"PrimitiveType",4902],[10,"Borrow",4903],[10,"PolarsAsRef",1223],[8,"String",4904],[10,"GetAnyValue",1228],[8,"Int128Chunked",1228],[6,"Ordering",4905],[6,"PhysicalType",4901],[8,"UInt8Chunked",1228],[8,"UInt16Chunked",1228],[8,"UInt64Chunked",1228],[8,"Int8Chunked",1228],[8,"Int16Chunked",1228],[8,"Int32Chunked",1228],[8,"Int64Chunked",1228],[8,"PlIdHashMap",1228],[5,"CategoricalChunkedBuilder",2563],[5,"GlobalRevMapMerger",2563],[6,"RevMapping",2701],[6,"CategoricalOrdering",2701],[5,"CatIter",2563],[1,"u128"],[5,"DataFrame",2885],[5,"StringCacheHolder",2753],[5,"ErrString",2782],[6,"PolarsWarning",2782],[10,"Display",4869],[6,"FloatFmt",2855],[1,"i128"],[1,"char"],[5,"Schema",4209],[10,"IntoSeries",4281],[6,"NullStrategy",2885],[6,"UniqueKeepStrategy",2885],[8,"PlHashSet",1228],[5,"ArrowSchema",3577],[5,"Row",3433],[5,"GroupBy",3178],[5,"RangeFull",4881],[5,"RangeInclusive",4881],[5,"RangeFrom",4881],[5,"RangeTo",4881],[5,"RangeToInclusive",4881],[5,"RecordBatchIter",2885],[5,"PhysRecordBatchIter",2885],[10,"IntoVec",4745],[5,"MeltArgs",3149],[10,"RangeBounds",4881],[8,"SchemaRef",4209],[6,"IndexOrder",3577],[5,"StructArray",4906],[8,"ArrowChunk",2885],[5,"GroupsIdx",3178],[8,"IdxVec",4907],[6,"GroupByMethod",3178],[5,"SlicedGroups",3178],[5,"GroupsProxyParIter",3178],[10,"UnindexedConsumer",4908],[6,"GroupsIndicator",3178],[8,"IdxItem",3178],[10,"IntoGroupsProxy",3178],[5,"Copied",4909],[5,"Zip",4910],[5,"GroupsProxyIter",3178],[8,"GroupsSlice",3178],[1,"array"],[8,"DynArgs",3577],[10,"IsFloat",4911],[10,"NativeType",4912],[10,"AggList",3417],[10,"TakeExtremum",3417],[10,"PhysicalAggExpr",3430],[6,"AnyValueBuffer",3433],[6,"AnyValueBufferTrusted",3433],[5,"BinaryArray",4913],[5,"IdHasher",3529],[5,"IdxHash",3529],[5,"HashMap",4914],[10,"BuildHasher",4894],[10,"VecHash",3529],[10,"Allocator",4915],[5,"BorrowedFd",4916],[10,"AsFd",4916],[10,"AsRawFd",4917],[20,"MaybeUninit",4918],[10,"NumOpsDispatchChecked",3577],[5,"ChunkId",3577],[5,"RollingVarParams",3577],[5,"RollingQuantileParams",3577],[6,"NonExistent",3577],[10,"Ord",4905],[10,"Default",4919],[5,"Weak",4920],[10,"Scalar",4921],[10,"PartialEq",4905],[5,"File",4922],[5,"Error",4923],[5,"TryReserveError",4924],[5,"Utf8Error",4925],[6,"Error",4926],[10,"ToOwned",4899],[5,"Path",4927],[5,"OsString",4928],[5,"OsStr",4928],[5,"PathBuf",4927],[5,"CString",4929],[5,"CStr",4930],[1,"never"],[10,"FromData",4132],[5,"Buffer",4931],[10,"FromDataUtf8",4132],[10,"FromDataBinary",4132],[5,"ListArray",4932],[6,"Ambiguous",3577],[10,"NamedFromOwned",3577],[10,"PartialOrd",4905],[10,"PolarsArray",3577],[10,"Hash",4894],[10,"SeriesTrait",4281],[10,"ChunkAggSeries",3577],[10,"QuantileAggSeries",3577],[10,"IndexToUsize",3577],[10,"NamedFrom",3577],[5,"Pin",4933],[5,"Request",4895],[5,"BorrowedCursor",4934],[5,"IoSliceMut",4935],[6,"SeekFrom",4935],[10,"VarAggSeries",3577],[5,"AllocError",4915],[5,"BTreeMap",4936],[5,"IoSlice",4935],[5,"AnonymousBuilder",4138],[5,"Offsets",4893],[5,"MutableNullArray",4161],[5,"MutableBitmap",4937],[5,"Utf8Array",4938],[8,"ArrowSchemaRef",4939],[10,"IndexOfSchema",4209],[8,"Metadata",4940],[5,"SeriesIter",4281],[8,"SeriesPhysIter",4281],[10,"LhsNumOps",4662],[10,"NumOpsDispatch",4662],[6,"NullBehavior",4695],[10,"CustomIterTools",4745],[5,"TrustMyLength",4745],[10,"FromIteratorReversed",4941],[10,"FromTrustedLenIterator",4745],[5,"Wrap",4745],[5,"LazyCompact",4942],[5,"SmartString",4943],[8,"FillNullLimit",939],[10,"InitHashMaps",1228],[10,"InitHashMaps2",1228],[5,"Nested",1228],[15,"Count",3414],[15,"Slice",3415],[10,"ListFromIter",3577],[10,"Utf8FromIter",4204],[10,"BinaryFromIter",4204]],"b":[[53,"impl-Add-for-ChunkedArray%3CT%3E"],[54,"impl-Add-for-%26ChunkedArray%3CT%3E"],[55,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[56,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[76,"impl-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CBinaryType%3E"],[99,"impl-Flags-for-Settings"],[100,"impl-Settings"],[140,"impl-Div-for-ChunkedArray%3CT%3E"],[141,"impl-Div-for-%26ChunkedArray%3CT%3E"],[142,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[143,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[163,"impl-Debug-for-ChunkedArray%3CT%3E"],[164,"impl-LowerHex-for-Settings"],[165,"impl-Octal-for-Settings"],[166,"impl-Binary-for-Settings"],[167,"impl-UpperHex-for-Settings"],[168,"impl-Debug-for-Settings"],[176,"impl-Settings"],[177,"impl-Flags-for-Settings"],[185,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[186,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[190,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[191,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[258,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[259,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[269,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[270,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkedArray%3CBooleanType%3E"],[276,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[277,"impl-ChunkedArray%3CBooleanType%3E"],[280,"impl-ChunkedArray%3CBooleanType%3E"],[281,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[284,"impl-ChunkedArray%3CT%3E"],[285,"impl-ChunkedArray%3CBooleanType%3E"],[286,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[287,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[288,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[289,"impl-Mul-for-ChunkedArray%3CT%3E"],[293,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[295,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[296,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[297,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[298,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[299,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[301,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[302,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[303,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[304,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[305,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[306,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[307,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[308,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[309,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[310,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[311,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[312,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[314,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[322,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[323,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkedArray%3CStringType%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[331,"impl-ChunkedArray%3CListType%3E"],[332,"impl-ChunkedArray%3CStringType%3E"],[343,"impl-Rem-for-ChunkedArray%3CT%3E"],[344,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[345,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[346,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[372,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[373,"impl-Sub-for-ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[375,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[379,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkedArray%3CBooleanType%3E"],[384,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[393,"impl-ChunkedArray%3CListType%3E"],[394,"impl-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[556,"impl-BinViewChunkedBuilder%3Cstr%3E"],[557,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[822,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[823,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[855,"impl-ObjectArray%3CT%3E"],[856,"impl-StaticArray-for-ObjectArray%3CT%3E"],[868,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[869,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[879,"impl-ObjectArray%3CT%3E"],[880,"impl-StaticArray-for-ObjectArray%3CT%3E"],[882,"impl-ObjectArray%3CT%3E"],[883,"impl-StaticArray-for-ObjectArray%3CT%3E"],[885,"impl-ObjectArray%3CT%3E"],[886,"impl-Array-for-ObjectArray%3CT%3E"],[889,"impl-ObjectChunkedBuilder%3CT%3E"],[890,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[892,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[893,"impl-ObjectChunkedBuilder%3CT%3E"],[1451,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1452,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1453,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1454,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1455,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1456,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1457,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1458,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1531,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1532,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1533,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1534,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1535,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1536,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1809,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1810,"impl-PartialEq-for-DataType"],[1818,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1819,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1820,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1821,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1824,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1825,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1826,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1827,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1863,"impl-Display-for-AnyValue%3C\'_%3E"],[1864,"impl-Debug-for-AnyValue%3C\'a%3E"],[1865,"impl-Display-for-DataType"],[1866,"impl-Debug-for-DataType"],[1868,"impl-Display-for-TimeUnit"],[1869,"impl-Debug-for-TimeUnit"],[1880,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[1882,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1883,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1884,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1885,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1887,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1889,"impl-From%3C%26Field%3E-for-Field"],[1912,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1913,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1917,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1918,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1919,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1921,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1922,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1923,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1924,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1930,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1931,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1933,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1934,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1935,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1936,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1937,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1938,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1946,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1947,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1948,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1949,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1950,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1951,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2039,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2040,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2041,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2042,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2045,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2046,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2047,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2048,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2168,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2169,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2170,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2171,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2174,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2175,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2176,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2177,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2211,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2212,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2213,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2214,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2215,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2216,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2217,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2218,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2219,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2220,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2231,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2232,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2235,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2236,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2237,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2238,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2241,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2242,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2243,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2244,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2608,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2609,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2610,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2611,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2612,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2613,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2628,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2629,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2630,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2631,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2632,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2633,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2648,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2649,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2650,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2651,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2652,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2653,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2664,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2665,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2666,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2667,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2668,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2669,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2818,"impl-Debug-for-ErrString"],[2819,"impl-Display-for-ErrString"],[2907,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2908,"impl-Add%3C%26Series%3E-for-DataFrame"],[2909,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2947,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[2948,"impl-Div%3C%26Series%3E-for-DataFrame"],[2949,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[2979,"impl-Display-for-DataFrame"],[2980,"impl-Debug-for-DataFrame"],[2985,"impl-From%3C%26Schema%3E-for-DataFrame"],[2986,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3014,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3015,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3016,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3017,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3018,"impl-Index%3Cusize%3E-for-DataFrame"],[3019,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3020,"impl-Index%3C%26str%3E-for-DataFrame"],[3021,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3046,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3047,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3048,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3063,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3064,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3065,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3097,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3098,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3099,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3119,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3120,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3290,"impl-Debug-for-GroupByMethod"],[3291,"impl-Display-for-GroupByMethod"],[3297,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3299,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3300,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3335,"impl-IntoIterator-for-GroupsIdx"],[3336,"impl-IntoIterator-for-%26GroupsIdx"],[3338,"impl-IntoParallelIterator-for-GroupsIdx"],[3339,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3697,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3698,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3820,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3821,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3822,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3854,"impl-Display-for-PolarsError"],[3855,"impl-Debug-for-PolarsError"],[3858,"impl-Debug-for-Arc%3CT,+A%3E"],[3859,"impl-Pointer-for-Arc%3CT,+A%3E"],[3860,"impl-Display-for-Arc%3CT,+A%3E"],[3869,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3870,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3872,"impl-From%3CError%3E-for-PolarsError"],[3873,"impl-From%3CError%3E-for-PolarsError"],[3877,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3878,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3879,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3880,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3881,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3882,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3883,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3884,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3885,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3886,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3887,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3888,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3889,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3891,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3893,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4227,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4229,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4230,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4231,"impl-From%3CArrowSchema%3E-for-Schema"],[4232,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4233,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4301,"impl-Add%3CT%3E-for-Series"],[4302,"impl-Add-for-Series"],[4303,"impl-Add-for-%26Series"],[4304,"impl-Add%3CT%3E-for-%26Series"],[4365,"impl-Div-for-Series"],[4366,"impl-Div%3CT%3E-for-Series"],[4367,"impl-Div%3CT%3E-for-%26Series"],[4368,"impl-Div-for-%26Series"],[4379,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4380,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4381,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4382,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4383,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4384,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4402,"impl-Debug-for-Series"],[4403,"impl-Display-for-Series"],[4414,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4415,"impl-FromIterator%3C%26str%3E-for-Series"],[4416,"impl-FromIterator%3C%26u64%3E-for-Series"],[4417,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4418,"impl-FromIterator%3Cu64%3E-for-Series"],[4419,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4420,"impl-FromIterator%3C%26u32%3E-for-Series"],[4421,"impl-FromIterator%3C%26i64%3E-for-Series"],[4422,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4423,"impl-FromIterator%3C%26f32%3E-for-Series"],[4424,"impl-FromIterator%3C%26bool%3E-for-Series"],[4425,"impl-FromIterator%3Ci64%3E-for-Series"],[4426,"impl-FromIterator%3Ci32%3E-for-Series"],[4427,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4428,"impl-FromIterator%3Cf64%3E-for-Series"],[4429,"impl-FromIterator%3C%26f64%3E-for-Series"],[4430,"impl-FromIterator%3C%26i32%3E-for-Series"],[4431,"impl-FromIterator%3Cbool%3E-for-Series"],[4432,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4433,"impl-FromIterator%3Cu32%3E-for-Series"],[4434,"impl-FromIterator%3Cf32%3E-for-Series"],[4435,"impl-FromIterator%3CString%3E-for-Series"],[4436,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4437,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4438,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4439,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4440,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4441,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4442,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4454,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4455,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4456,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4457,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4458,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4459,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4497,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4498,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4499,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4500,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4501,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4502,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4516,"impl-Mul-for-Series"],[4517,"impl-Mul%3CT%3E-for-%26Series"],[4518,"impl-Mul%3CT%3E-for-Series"],[4519,"impl-Mul-for-%26Series"],[4525,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4526,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4527,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4528,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4529,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4530,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4531,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4532,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4533,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4534,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4535,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4536,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4537,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4538,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4539,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4540,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4541,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4542,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4543,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4544,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4545,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4546,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4547,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4548,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4549,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4550,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4551,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4552,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4553,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4554,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4555,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4556,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4557,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4558,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4559,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4564,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4565,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4566,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4567,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4568,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4569,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4578,"impl-Rem%3CT%3E-for-%26Series"],[4579,"impl-Rem%3CT%3E-for-Series"],[4580,"impl-Rem-for-%26Series"],[4608,"impl-Sub%3CT%3E-for-Series"],[4609,"impl-Sub-for-Series"],[4610,"impl-Sub%3CT%3E-for-%26Series"],[4611,"impl-Sub-for-%26Series"],[4632,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4633,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4634,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4635,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4805,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4806,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4808,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4809,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4811,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4812,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAI8M1gwUDRcNGA0ZDRoNGw0gDSMNKA0pDU4N","e":"OzAAAAEAAD8O4gEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZAAAAGYAAABpAAYAcQAAAHMAAgB5AAQAfwAAAIQABwCNAAgAmAAEAJ8AAQCiAAoAsgAAALQAAQC4AAQAvgACAMMAAwDJAAMAzgADANUAAADXAAUA3wADAOoABQDzAAMA+gABAP8AAQACAQYADgEOAB8BBQAmARkAQwEDAEgBAABKAQQAUAEBAFYBAABYAQQAXwEAAGQBAgBoAQEAbAECAHEBBwB7AQMAhgEBAIwBAQCSAQgAnAEKAKgBAACqAQAArQEFALUBAAC3ASMA3AEpAAoCAgAQAiMAOgIFAEQCAABGAiYAbwJMAMMCDADXAjMADgMJABoDAQAeAwEAIQMSADYDEwBLAwcAVAMAAFYDAABZAwIAXgMOAG4DAABxAwAAcwMCAHcDAgB7AwIAfwMHAIgDAACKAwUAkgMBAJUDAACXAwEAmgMDAJ8DAwCkAwIAqAMDAK4DAACxAwAAuQMAAL4DAADBAwEAxgMBAMkDAADMAwAA1gMAAN8DAgDkAwUA7AMCAPIDAAD0AwAA9gMBAPwDAQD/AwEABgQBAAwEAAAPBAAAEgQAABQEAAAWBAAAGAQAAB0EBAAkBAEAJwQHADAEAgA2BAAAOAQDAD0EAQBABAUATAQVAGMEAQBnBAQAbQQDAHMEBwB+BA8AkAQLAJ0EAACfBAQAsAQJAMQEAwDJBAgA1AQCANgEBQDgBAAA4gQMAPIEAAD0BAAA+QQBAPwEAAD+BAIAAwUAAAYFAAAJBQAACwUBAA4FAAAQBQIAFAUKACAFAAAiBQEAJQUAACcFAQAqBQAALAUBAC8FAAAxBQEANwUAADsFAQA/BQAAQgUAAEQFAABGBQQATAUAAE8FBwBYBQEAWwUEAGEFAABkBQAAZgUAAGgFAABsBQIAcAUAAHIFAAB0BQEAdwUAAHkFAQB8BQAAfgUBAIEFAACDBQEAhgUAAIoFOQDKBQQA0QUJAN0FBADjBQgA7QUAAO8FowCUBgcAnQZvAA4HAAAQB0EAWQcAAFsHAwBgBwAAYgcAAGQHAAB5BwEAfQcXAJkHIwC/BwYAyAceAO0HOwArCAAATQgJAFkIAABbCAAAXQgAAF8IAABkCAUAawgAAG4IAQByCCEAlQgJAKAIDQCvCBwAzQgGANUIGgDxCBUACAkNABkJAAAbCQAAIAkbAD8JeAC5CUkABAoEAAoKAQANCgIAEQoDABYKIwBBCgIARQoJAFMKAwBYChcAcQoBAHQKBAB6Cg0AiQoFAJAKAACSChUAqQoBAK8KAgC0CgEAuAoJAMMKBADJCgEAzgoAANAKAgDUCgEA1woAANkKAQDfCgMA5AoEAOoKDgD6CgoABwsDAA0LBAATCyAANQsFADwLCQBHCwAASgsAAE0LCgBZCwUAZQsQAHgLEwCTCwEAlwsCAJsLAACdCwAAogsDAKoLAQCtCwAAvAsAAL8LAQDHCwwA2gsBAOcLAgDuCwEA+AsCAAAMAAADDAAACQwAABIMAQAVDAAAGAwEACMMBAArDAYANAwJAD8MAABDDAQATwwNAF4MAgBjDAoAbwwBAHIMAwB3DAMAfAwJAIcMBwCQDAEAkwwYAK0MKADXDAYA4gwAAOQMAQDnDAAA6gwDAPAMAQD2DAcABg0NABUNAQAcDQMAIQ0BACUNAgAqDQAALA0fAE8NDABeDQUAZQ0HAG4NFgCHDQsAlA0PAKYNAACoDQMArw0GALkNDgDKDQEAzQ0RAOENBADpDQUA8Q0JAPwNAgABDgcACg4KABYOAwAbDhYAMw4IAD0OBQBEDhQAXA4QAG4OAABwDgEAdA4cAJMOAgCXDhIAqw4EALMOAQC4DiIA3g4DAOMOCwDwDhoADQ8SACEPAQAkDwAAMw8AADsPAABBDwAARA8AAEsPAABODwAAUw8BAFYPBgBfDxEAgA8DAIUPAgCJDwEAjA8BAKcPAgCtDwQAtA8AALcPBwDBDwEAxA8BAMkPLQAAEAwADhAAABAQDAAiEAYAKxAGADMQAAA1EBwAUxAAAFUQCwBiEAAAZBABAG0QBAB0EAUAexAJAIYQBgCTEAEAlhABAJoQAQCsEAAArhAAALAQAAC0EAMAuhAEAMAQAwDFEAQAzhADANcQAADdEAIA5RAFAOwQBgD2EAMA/hACAAIRAQAGEQ8AGhECAB4RAAAgEQEAJBECADIRAwA5EQAAPBEAAD4RHgBgEQAAZxEBAGoRAABsEQAAbhEAAHQRAQB3EQIAfREDAIkRAwCTEQMAnREAAKURAwCuEQ4AvhESANMRAQDWEQMA3REBAOMRAgDoEQAA6hEAAO4RAQD0EQEA+BEBAP8RAAABEgMAEhIBABUSDgArEgEAMRICADUSAAA3EhoAVRICAFoSDgBqEgEAbRIFAHQSCgCAEgAAghIAAIQSBACKEgQAkBIEAJcSAACaEgAAnRIIAKcSAgCsEgwAuxIGAMUSCADPEgUA2BIOAOgSAgDsEggA9hIEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNCMMMNNNNNNNNNNCHCCOCMMMOCCCCCONNNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGGFFPPPPPPGGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNOOONCNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNHHHFFNNNNHOONNNNNNNOOOOOONNNNFGFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFPFFPFIPFFPPPGFGFFIPPPPFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONHNNNNNNOCNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNEEEJJJHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","export","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","is_cloud_url","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","set_rechunk","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","AllColumns","AllColumnsSingle","Always","BatchedWriter","CommentPrefix","CsvEncoding","CsvReader","CsvWriter","LossyUtf8","Multi","Named","Necessary","Never","NonNumeric","NullValues","QuoteStyle","SerializeOptions","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_comment_prefix","batched","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count_rows","date_format","datetime_format","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","float_precision","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_path","has_header","hash","hash","hash","hash","hash","include_bom","include_header","infer_schema","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","line_terminator","low_memory","n_threads","new","new","new_multi","new_single","null","quote_char","quote_style","raise_if_empty","read_impl","sample_size","separator","serialize","serialize","serialize","serialize","serialize","time_format","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_chunk_size","with_columns","with_comment_prefix","with_date_format","with_datetime_format","with_dtypes","with_dtypes_slice","with_encoding","with_end_of_line_char","with_float_precision","with_ignore_errors","with_line_terminator","with_missing_is_null","with_n_rows","with_n_threads","with_null_value","with_null_values","with_path","with_predicate","with_projection","with_quote_char","with_quote_char","with_quote_style","with_rechunk","with_row_index","with_schema","with_separator","with_separator","with_skip_rows","with_skip_rows_after_header","with_time_format","with_try_parse_dates","write_batch","BatchedCsvReaderMmap","BatchedCsvReaderRead","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","next_batches","next_batches","next_batches","next_batches","to_batched_owned_mmap","to_batched_owned_read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","infer_file_schema","infer_file_schema_inner","is_compressed","ParquetStatistics","Statistics","borrow","borrow_mut","deref","deref_mut","deserialize","distinct_count","distinct_count","drop","eq","fmt","from","from","init","into","max_value","max_value","min_value","min_value","null_count","null_count","try_from","try_into","type_id","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","LZ4","ZSTD","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count_rows","create_writer","create_writer","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","from","from","from","from","from","from","from","from","from","from","from_uri","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","from","from","from","from","infer_schema_len","init","init","init","init","into","into","into","into","new","new","new","set_rechunk","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","Auto","BatchedParquetReader","BatchedWriter","Brotli","BrotliLevel","BrotliLevel","Columns","FileMetaData","FileMetaDataRef","Gzip","GzipLevel","GzipLevel","Lz4Raw","Lzo","None","ParallelStrategy","ParquetAsyncReader","ParquetCompression","ParquetReader","ParquetWriter","RowGroupIter","RowGroups","Snappy","Uncompressed","Zstd","ZstdLevel","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_order","column_orders","created_by","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","finish","finishes_this_batch","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_uri","get_metadata","get_metadata","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_thrift","is_finished","iter","key_value_metadata","key_value_metadata","limit_reached","materialize_empty_df","new","new","new","next_batches","num_rows","num_rows","num_rows","predicates","read_parallel","read_parallel","row_groups","schema","schema","schema","schema","schema_descr","serialize","serialize","serialize","serialize","serialize","set_low_memory","set_parallel","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_compression","with_data_page_size","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_group_size","with_row_index","with_row_index","with_schema","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","BOOLEAN_RE","FLOAT_RE","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[83,"polars_io::avro"],[149,"polars_io::cloud"],[219,"polars_io::cloud::options"],[398,"polars_io::csv"],[644,"polars_io::csv::read_impl"],[704,"polars_io::csv::utils"],[707,"polars_io::export"],[733,"polars_io::ipc"],[935,"polars_io::json"],[1004,"polars_io::mmap"],[1025,"polars_io::ndjson"],[1027,"polars_io::ndjson::core"],[1107,"polars_io::parquet"],[1401,"polars_io::partition"],[1417,"polars_io::pl_async"],[1438,"polars_io::predicates"],[1492,"polars_io::prelude"],[1495,"polars_io::utils"],[1505,"dyn_clone::sealed"],[1506,"alloc::boxed"],[1507,"std::io"],[1508,"core::result"],[1509,"serde::de"],[1510,"std::path"],[1511,"polars_core::frame"],[1512,"polars_error"],[1513,"core::fmt"],[1514,"core::fmt"],[1515,"std::path"],[1516,"std::io"],[1517,"core::option"],[1518,"serde::ser"],[1519,"core::any"],[1520,"polars_arrow::datatypes::schema"],[1521,"std::io"],[1522,"alloc::string"],[1523,"alloc::vec"],[1524,"object_store"],[1525,"alloc::sync"],[1526,"std::io::error"],[1527,"crossterm::command"],[1528,"std::io::error"],[1529,"object_store::path"],[1530,"bytes::bytes"],[1531,"core::ops::range"],[1532,"object_store"],[1533,"parquet_format_safe::thrift::varint::decode"],[1534,"core::convert"],[1535,"polars_core::schema"],[1536,"core::num::nonzero"],[1537,"polars_core::datatypes::dtype"],[1538,"polars_arrow::datatypes::field"],[1539,"polars_parquet::parquet::metadata::row_metadata"],[1540,"polars_error"],[1541,"futures_io::if_std"],[1542,"core::marker"],[1543,"core::marker"],[1544,"polars_arrow::datatypes::schema"],[1545,"core::any"],[1546,"polars_arrow::array::growable::structure"],[1547,"polars_arrow::array::struct_::mutable"],[1548,"polars_arrow::bitmap::immutable"],[1549,"polars_arrow::scalar"],[1550,"polars_arrow::array::struct_::iterator"],[1551,"polars_arrow::bitmap::utils::iterator"],[1552,"polars_arrow::bitmap::utils::zip_validity"],[1553,"polars_parquet::parquet::metadata::column_order"],[1554,"core::iter::traits::iterator"],[1555,"polars_parquet::arrow::write::file"],[1556,"std::sync::mutex"],[1557,"parquet_format_safe::parquet_format"],[1558,"parquet_format_safe::parquet_format"],[1559,"polars_parquet::parquet::metadata::schema_descriptor"],[1560,"polars_parquet::parquet::error"],[1561,"core::marker"],[1562,"tokio::runtime::task::join"],[1563,"polars_core::datatypes::field"],[1564,"core::marker"]],"i":[0,0,0,0,0,0,3,4,0,0,3,4,3,4,3,4,3,4,0,5,0,4,3,4,3,4,3,4,3,4,4,3,4,3,3,3,4,4,4,0,5,14,6,3,4,3,4,3,4,3,4,3,4,0,0,0,0,3,0,14,6,23,3,0,0,0,0,0,4,3,4,14,3,4,3,4,3,4,3,4,0,3,4,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,43,39,44,43,39,39,0,43,43,39,44,43,39,44,43,39,44,44,43,39,39,44,39,44,43,39,44,43,39,39,43,43,43,0,43,44,43,39,44,43,39,44,43,39,44,0,39,44,39,44,43,44,43,39,44,43,39,44,43,39,44,43,39,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,76,76,77,0,0,0,0,0,75,66,76,77,77,77,0,0,0,66,75,75,76,66,77,78,65,68,65,65,65,65,65,68,69,75,76,66,77,78,65,68,69,75,76,66,77,78,75,76,66,77,78,75,76,66,77,78,0,78,78,77,78,65,68,69,75,76,66,77,78,65,68,69,75,76,66,77,78,75,76,66,77,78,65,68,69,75,76,66,77,78,75,76,66,77,78,75,75,75,76,76,76,66,66,66,77,77,77,78,78,78,65,68,69,78,75,76,66,77,78,65,68,69,75,76,66,77,78,65,65,75,76,66,77,78,68,68,65,65,68,69,75,76,66,77,78,65,68,69,75,76,66,77,78,78,65,68,65,68,66,66,78,78,78,65,0,65,78,75,76,66,77,78,78,75,76,66,77,78,65,65,68,69,75,76,66,77,78,65,68,69,75,76,66,77,78,65,68,69,75,76,66,77,78,0,65,68,69,75,76,66,77,78,68,65,65,65,68,68,65,65,65,65,68,65,68,65,65,65,68,65,65,65,65,65,68,68,65,65,65,65,68,65,65,68,65,69,0,0,0,0,70,73,71,74,70,73,71,74,70,73,71,74,70,73,71,74,70,73,73,71,74,74,70,73,71,74,70,73,71,74,70,73,71,74,70,73,71,74,0,0,70,73,71,74,70,73,71,74,70,73,71,74,70,73,71,74,0,0,0,0,0,86,86,86,86,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0,0,0,0,0,95,95,95,96,89,90,90,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,91,101,97,95,96,95,96,95,96,97,100,101,97,100,101,95,96,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,91,101,97,95,96,95,102,89,103,100,90,91,101,97,95,96,95,95,95,95,100,101,102,89,103,90,91,102,95,102,89,103,100,90,91,101,97,95,96,97,95,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,91,101,97,95,96,102,97,102,89,103,100,90,101,90,102,89,95,102,89,95,96,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,91,101,97,95,96,102,89,103,100,90,101,100,101,102,89,103,90,96,102,89,96,102,89,96,96,91,0,108,0,108,0,0,108,105,107,106,108,105,107,106,108,105,107,106,108,105,107,106,108,105,107,106,105,106,108,105,107,106,106,108,105,107,106,108,105,107,106,105,107,106,106,108,105,107,106,108,105,107,106,108,105,107,106,108,105,107,106,106,106,105,106,106,106,106,107,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,67,67,83,83,83,83,0,0,0,0,110,110,110,110,114,110,114,110,110,110,110,110,114,110,114,110,114,110,110,110,110,114,110,114,110,110,110,114,110,114,114,110,114,110,110,110,110,110,114,114,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,114,110,114,110,110,114,110,110,110,110,110,114,110,114,114,114,114,114,114,114,114,110,110,127,0,0,131,0,0,127,0,0,131,0,0,131,131,127,0,0,0,0,0,0,127,131,131,131,0,0,127,128,129,130,131,132,122,124,125,122,124,123,125,126,127,128,129,130,131,132,122,124,123,125,126,127,128,129,130,131,132,127,128,129,130,131,132,127,128,129,130,131,132,132,132,132,127,131,122,124,123,125,126,127,128,129,130,131,132,122,124,123,125,126,127,128,129,130,131,132,127,128,129,130,131,122,124,123,125,126,127,128,129,130,131,132,126,127,128,129,130,131,127,127,127,128,128,128,129,129,129,130,130,130,131,131,131,122,124,125,126,123,127,128,129,130,131,132,122,124,123,125,126,127,128,129,130,131,132,124,122,124,126,127,128,129,130,131,122,124,123,125,126,127,128,129,130,131,132,122,124,123,125,126,127,128,129,130,131,132,132,123,123,132,132,123,0,122,123,125,123,122,124,132,0,122,124,132,122,124,123,132,132,127,128,129,130,131,122,125,122,124,127,128,129,130,131,132,122,124,123,125,126,127,128,129,130,131,132,132,122,124,123,125,126,127,128,129,130,131,132,128,129,130,122,124,123,125,126,127,128,129,130,131,132,122,124,132,122,124,123,125,126,127,128,129,130,131,132,122,125,125,122,124,122,124,122,124,122,124,125,122,124,122,125,126,126,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,0,0,149,149,149,149,149,149,149,149,0,149,149,151,149,149,149,0,149,149,0,0,0,0,0,0,82,155,154,155,154,154,155,154,155,154,155,154,155,154,155,82,155,154,155,154,155,155,155,155,155,154,155,154,155,154,155,154,155,154,154,155,154,153,155,155,155,155,154,155,154,155,154,155,154,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{cb}d{}}0``{ce{}{}}000{ff}{hh}{{ce}d{}{}}0`{{jc}{{n{l}}}A`}`{{}h}{Abc{}}000{c{{Ad{f}}}Af}{c{{Ad{h}}}Af}{Abd}0`{{ff}Ah}{{hh}Ah}{{ce}Ah{}{}}00000`{jAj}{Al{{B`{An}}}}{{lAn}{{B`{d}}}}{{fBb}Bd}{{hBb}Bd}{cc{}}0{{fc}dBf}{{hc}dBf}{{}Ab}0{ce{}{}}0`{cAh{{Bj{Bh}}}}````{cAlBl}{clA`}{Bn{{B`{{Cb{C`}}}}}}```````{{fc}AdCd}{{hc}AdCd}{{AlAh}Al}77{c{{Ad{e}}}{}{}}000{cCf{}}0`99````````{{cb}d{}}{{{Ch{c}}}{{B`{Cj}}}{BlCl}};;;;;;{CnCn}{{ce}d{}{}}{Abc{}}00000{Abd}00{{CnCn}Ah}{{ce}Ah{}{}}00{{{Ch{c}}}{{B`{An}}}{BlCl}}{{{D`{c}}An}{{B`{d}}}A`}{{CnBb}{{Ad{dDb}}}}{cc{}}00{{Cnc}dBf}{{}Ab}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}A`}{{{Ch{c}}}{{B`{Dd}}}{BlCl}}{{{Ch{c}}Ah}{{Ch{c}}}{BlCl}}4{c{{Ad{e}}}{}{}}00000{cCf{}}00666{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}A`}{{{Ch{c}}{Cb{Ab}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}A`}{{{Ch{c}}{Cb{{Dh{Ab}}}}}{{Ch{c}}}{BlCl}}```{{cb}d{}}<<<<<<`{{Dj{Cb{Dl}}}{{B`{{Ed{Dn{Eb{E`}}}}}}}}{EfEf}{{ce}d{}{}}{{}Dn}{Abc{}}00000{Abd}{Ehd}11{{DnDn}Ah}{{ce}{{Ad{gEj}}}{}El{}}`{Eh{{En{d}}}}{{EfBb}Bd}{{DnBb}Bd}{cc{}}00{F`{{B`{Dn}}}}{{EfFb}{{B`{Fd}}}}{{EfFb{Ff{Ab}}}{{B`{Fd}}}}{{EfFb{Fh{{Ff{Ab}}}}}{{B`{{Dh{Fd}}}}}}{{Dj{Cb{Dl}}}{{B`{{Dh{Df}}}}}}{{EfFb}{{B`{Fj}}}}{{}Ab}00{ce{}{}}00{{Dj{Cb{Dl}}}{{B`{Eh}}}}{{{Eb{E`}}}Ef}{Dj{{B`{Dn}}}}{{{Eb{E`}}Fb}{{B`{Eh}}}}``{{ce}{{Ad{gEj}}}{}El{}}`{{ci}{{Ad{gEj}}}{}{}{}{{Fn{e}{{Fl{g}}}}}}6{c{{Ad{e}}}{}{}}00000{cCf{}}00888{{Eh{Fh{G`}}}{{En{Ab}}}}{{ce}{{Ad{AbEj}}}{}Gb}``````````````````````````````````````````````````````{{cb}d{}}000{GdDj}{GfDj}{GhDj}>>>>>>>>>>{{DlDj}{{B`{{`{E`}}}}}}00{DlDl}{GdGd}{GfGf}{GhGh}{{ce}d{}{}}000{{}Dl}{Abc{}}000000000{c{{Ad{Dl}}}Af}{c{{Ad{Gd}}}Af}{c{{Ad{Gf}}}Af}{c{{Ad{Gh}}}Af}{Abd}0000{{DlDl}Ah}{{GjGj}Ah}{{GdGd}Ah}{{GfGf}Ah}{{GhGh}Ah}{{ce}Ah{}{}}00000000000{{DlBb}Bd}{{GdBb}{{Ad{dDb}}}}{{GfBb}{{Ad{dDb}}}}{{GhBb}{{Ad{dDb}}}}{cc{}}0000{Dj{{Ad{Gjc}}}{}}{Dj{{Ad{Gd}}}}{Dj{{Ad{Gf}}}}{Dj{{Ad{Gh}}}}{{Djg}{{B`{Dl}}}{{Bj{Dj}}}{{Gl{Df}}}{{H`{}{{Gn{{Ed{ce}}}}}}}}{{Dlc}dBf}{{Gdc}dBf}{{Gfc}dBf}{{Ghc}dBf}{{}Ab}0000{ce{}{}}0000`{{Dlc}AdCd}{{Gdc}AdCd}{{Gfc}AdCd}{{Ghc}AdCd}4444{c{{Ad{e}}}{}{}}000000000{cCf{}}000066666{{Dle}Dl{{Gl{Df}}}{{H`{}{{Gn{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gl{Df}}}{{H`{}{{Gn{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gl{Df}}}{{H`{}{{Gn{{Ed{Ghc}}}}}}}}```````````````````{{cb}d{}}0000{{{Hb{c}}{Cb{Hd}}}{{Hb{c}}}Hf}{{{Hh{c}}Dd}{{B`{{Hj{c}}}}}A`}{{{Hb{c}}}{{B`{Hl}}}Hf}{{{Hb{c}}}{{B`{Hn}}}Hf}{{{Hb{{n{Hf}}}}{Cb{I`}}}{{B`{Ib}}}}{{{Hb{{n{Hf}}}}{Cb{I`}}}{{B`{Id}}}}{ce{}{}}000000000000000{IfIf}{IhIh}{HdHd}{IjIj}{IlIl}{{ce}d{}{}}0000{{AjG`{Cb{G`}}{Cb{Hd}}G`Ah}{{B`{Ab}}}}``{{}Ij}{{}Il}{Abc{}}000000000000000{c{{Ad{If}}}Af}{c{{Ad{Ih}}}Af}{c{{Ad{Hd}}}Af}{c{{Ad{Ij}}}Af}{c{{Ad{Il}}}Af}{Abd}0000000{{IfIf}Ah}{{IhIh}Ah}{{HdHd}Ah}{{IjIj}Ah}{{IlIl}Ah}{{ce}Ah{}{}}00000000000000{{{Hb{c}}}{{B`{An}}}Hf}{{{Hh{c}}An}{{B`{d}}}A`}{{{Hj{c}}}{{B`{d}}}A`}`{{IfBb}Bd}{{IhBb}Bd}{{HdBb}Bd}{{IjBb}Bd}{{IlBb}Bd}{cc{}}0000000{c{{B`{{Hb{In}}}}}{{Gl{Aj}}}}{{{Hb{c}}Ah}{{Hb{c}}}Hf}{{Ifc}dBf}{{Ihc}dBf}{{Hdc}dBf}{{Ijc}dBf}{{Ilc}dBf}{{{Hh{c}}Ah}{{Hh{c}}}A`}0{{{Hb{c}}{Cb{Ab}}}{{Hb{c}}}Hf}{{}Ab}0000000{ce{}{}}0000000`9{{{Hh{c}}Ab}{{Hh{c}}}A`}{c{{Hb{c}}}Hf}{c{{Hh{c}}}A`}{Df{{Cb{Hd}}}}{G`Hd}```>`{{{Hb{c}}Ab}{{Hb{c}}}Hf}`{{Ifc}AdCd}{{Ihc}AdCd}{{Hdc}AdCd}{{Ijc}AdCd}{{Ilc}AdCd}`;;;;;{{{Hb{c}}Ah}{{Hb{c}}}Hf}{c{{Ad{e}}}{}{}}000000000000000{cCf{}}0000000`>>>>>>>>{{{Hh{c}}J`}{{Hh{c}}}A`}9{{{Hb{c}}{Cb{{Dh{Df}}}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{Dj}}}{{Hb{c}}}Hf}{{{Hh{c}}{Cb{Df}}}{{Hh{c}}}A`}0{{{Hb{c}}{Cb{I`}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{{Fh{Jb}}}}}{{Hb{c}}}Hf}{{{Hb{c}}If}{{Hb{c}}}Hf}{{{Hb{c}}G`}{{Hb{c}}}Hf}{{{Hh{c}}{Cb{Ab}}}{{Hh{c}}}A`};{{{Hh{c}}Df}{{Hh{c}}}A`}<{{{Hb{c}}{Cb{Ab}}}{{Hb{c}}}Hf}01{{{Hb{c}}{Cb{Ih}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{e}}}{{Hb{c}}}Hf{{Gl{Aj}}}}{{{Hb{c}}{Cb{{Eb{Jd}}}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{{Dh{Ab}}}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{G`}}}{{Hb{c}}}Hf}{{{Hh{c}}G`}{{Hh{c}}}A`}{{{Hh{c}}Ij}{{Hh{c}}}A`}{{{Hb{c}}Ah}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{f}}}{{Hb{c}}}Hf}?<3{{{Hb{c}}Ab}{{Hb{c}}}Hf}0{{{Hh{c}}{Cb{Df}}}{{Hh{c}}}A`}3{{{Hj{c}}An}{{B`{d}}}A`}````{ce{}{}}0000000{Abc{}}0000000{Abd}0{Ibd}1{Idd}2{cc{}}000{{}Ab}0006666{{HlAb}{{B`{{Cb{{Dh{An}}}}}}}}{{IbAb}{{B`{{Cb{{Dh{An}}}}}}}}{{HnAb}{{B`{{Cb{{Dh{An}}}}}}}}{{IdAb}{{B`{{Cb{{Dh{An}}}}}}}}{{{Hb{{n{Hf}}}}I`}Ib}{{{Hb{{n{Hf}}}}I`}Id}{c{{Ad{e}}}{}{}}0000000{cCf{}}000>>>>{{JfG`{Cb{Ab}}Ah{Cb{Dd}}AbAb{Cb{Hd}}{Cb{G`}}G`{Cb{Ih}}AhAh{Cb{Ab}}}{{B`{{Ed{DdAbAb}}}}}}{{JfG`{Cb{Ab}}Ah{Cb{Dd}}AbAb{Cb{Hd}}{Cb{G`}}G`{Cb{Ih}}AhG`Ah{Cb{Ab}}}{{B`{{Ed{DdAbAb}}}}}}{{{Fh{G`}}}Ah}``{ce{}{}}0{Abc{}}0{{JhJj}{{Ad{JlJn}}}}``{Abd}{{JlJl}Ah}{{JlBb}{{Ad{dDb}}}}{K`Jl}{cc{}}{{}Ab}8``````==<8````````````{{cb}d{}}0{{{Kb{c}}}{{B`{Cj}}}Bl}{{{Kd{c}}Dd}{{B`{{Kf{c}}}}}A`}{{{Kd{c}}Dd}{{B`{{`{c}}}}}{KhKjKl}}<<<<<<<<<<<<<<<<<<<<{KnKn}{L`L`}{{ce}d{}{}}0{{Lb{Cb{Ld}}}{{B`{Lf}}}}{{Lhc}{{n{l}}}A`}{{Ljc}{{n{l}}}A`}{{Lb{Cb{Ld}}L`Ah}{{B`{An}}}}{{}Lh}{{}Lj}{{}Kn}{{}L`}{Abc{}}0000000000000000000{c{{Ad{Kn}}}Af}{Abd}000000000{{KnKn}Ah}{{ce}Ah{}{}}00{LhAj}{LjAj}{{{Ll{c}}}{{B`{An}}}Hf}{{{Kb{c}}}{{B`{An}}}Bl}{{{Ln{c}}An}{{B`{d}}}A`}{{{Kd{c}}An}{{B`{d}}}A`}{{{Kf{c}}}{{B`{d}}}A`}{{{Ll{c}}{Cb{{Eb{Jd}}}}Ah}{{B`{An}}}Hf}{{KnBb}Bd}{cc{}}000000000{{Dj{Cb{Dl}}}{{B`{Lb}}}}{{Knc}dBf}{{}Ab}000000000{ce{}{}}000000000{{{Ll{c}}Ah}{{Ll{c}}}Hf}{Lb{{B`{Ld}}}}{c{{Ll{c}}}Hf}{c{{Kb{c}}}Bl}{c{{Ln{c}}}A`}{{}Lh}{c{{Kd{c}}}A`}{{}Lj}{c{{Kd{c}}}{KhKjKl}}{{{Ll{c}}}{{B`{M`}}}Hf}{{{Kb{c}}}{{B`{Dd}}}Bl}{{Knc}AdCd};{{{Kb{c}}Ah}{{Kb{c}}}Bl}=={c{{Ad{e}}}{}{}}0000000000000000000{cCf{}}000000000??????????{{{Ll{c}}{Cb{{Dh{Df}}}}}{{Ll{c}}}Hf}{{{Kb{c}}{Cb{{Dh{Df}}}}}{{Kb{c}}}Bl}{{{Ln{c}}{Cb{Kn}}}{{Ln{c}}}{}}{{Lh{Cb{Kn}}}Lh}{{{Kd{c}}{Cb{Kn}}}{{Kd{c}}}A`}{{Lj{Cb{Kn}}}Lj}{{LhAj}Lh}{{LjAj}Lj}{{{Ll{c}}{Cb{Ab}}}{{Ll{c}}}Hf}{{{Kb{c}}{Cb{Ab}}}{{Kb{c}}}Bl}{{{Ln{c}}Ah}{{Ln{c}}}{}}{{{Kd{c}}Ah}{{Kd{c}}}A`}{{L`c}L`{{Gl{{Cb{{Eb{Jd}}}}}}}}{{{Ll{c}}{Cb{{Dh{Ab}}}}}{{Ll{c}}}Hf}{{{Kb{c}}{Cb{{Dh{Ab}}}}}{{Kb{c}}}Bl}{{L`c}L`{{Gl{{Cb{{Dh{Df}}}}}}}}{{{Ll{c}}{Cb{f}}}{{Ll{c}}}Hf}{{{Kb{c}}{Cb{f}}}{{Kb{c}}}Bl}{{L`c}L`{{Gl{{Cb{f}}}}}}{{L`c}L`{{Gl{{Cb{Ab}}}}}}{{{Kf{c}}An}{{B`{d}}}A`}``````{ce{}{}}0000000{Abc{}}0000000{Abd}000{{{Mb{c}}An}{{B`{d}}}A`}{{{Md{c}}}{{B`{An}}}Hf}{cc{}}000{{{Md{c}}{Cb{Ab}}}{{Md{c}}}Hf}{{}Ab}0007777{c{{Mb{c}}}A`}{c{{Mf{c}}}A`}{c{{Md{c}}}Hf}{{{Md{c}}Ah}{{Md{c}}}Hf}{c{{Ad{e}}}{}{}}0000000{cCf{}}000===={{{Md{c}}J`}{{Md{c}}}Hf}3{{{Mb{c}}Mh}{{Mb{c}}}A`}{{{Md{c}}Mh}{{Md{c}}}Hf}{{{Md{c}}{Cb{{Dh{Df}}}}}{{Md{c}}}Hf}{{{Md{c}}I`}{{Md{c}}}Hf}{{{Md{c}}Dd}{{Md{c}}}Hf}{{{Mf{c}}An}{{B`{d}}}A`}`````{ce{}{}}0{Abc{}}{Jf{{Fh{G`}}}}1{Abd}{cc{}}{cJfHf}{{}Ab}6{Hf{{Cb{{Fh{G`}}}}}}{Hf{{Cb{In}}}}{c{{Ad{e}}}{}{}}0{cCf{}}:`{{c{Cb{Ab}}}{{B`{Dd}}}Mj}``{{cb}d{}}{Ml{{Eb{Mn}}}}{MlN`}0>>>>{Ml{{n{Mn}}}}{MlMl}{{ce}d{}{}}{MlNb}{Abc{}}000{Abd}0{{MlMn}Ah}{{MlMl}Ah}{Ml{{Fh{Jh}}}}{{{Nd{c}}}{{B`{An}}}Hf}{{MlBb}{{Ad{dDb}}}}{cc{}}{NfMl}{NhMl}2{c{{B`{{Nd{In}}}}}{{Gl{Aj}}}}{Nb{{Fh{Jh}}}}{{{Nd{c}}{Cb{Ab}}}{{Nd{c}}}Hf}{{}Ab}0{ce{}{}}0{Ml{{Ed{{Dh{Jh}}{Dh{{n{Mn}}}}{Cb{Nj}}}}}}{Ml}{Ml{{Ob{{Dh{{n{Nl}}}}NnO`}}}}{MlAb}{{{Nd{c}}Ah}{{Nd{c}}}Hf}{c{{Nd{c}}}Hf}{{Nb{Dh{{n{Mn}}}}{Cb{Nj}}}Ml}{NbMl}{{NbAb}Ml}{{Ml{Cb{Nj}}}d}{{MlAbAb}d}0{{cAbAb}e{}{}}011{{MlAbAb}Ml}0{Ml{{Cb{Nj}}}}{Ml{{n{Mn}}}}?{c{{Ad{e}}}{}{}}000{{Nb{Dh{{n{Mn}}}}{Cb{Nj}}}{{Ad{MlJn}}}}{cCf{}}044{Ml{{Fh{{n{Mn}}}}}}{MlNn}{ce{}{}}0{{{Nd{c}}{Cb{J`}}}{{Nd{c}}}Hf}{{{Nd{c}}Ah}{{Nd{c}}}Hf}{{{Nd{c}}{Cb{Ab}}}{{Nd{c}}}Hf}0{{{Nd{c}}{Cb{e}}}{{Nd{c}}}Hf{{Gl{Aj}}}}2{{{Nd{c}}I`}{{Nd{c}}}Hf}{{{Nd{c}}Dd}{{Nd{c}}}Hf}{{Ml{Cb{Nj}}}{{n{Mn}}}}{{Ml{Cb{Nj}}}Ml}```````````````````````````{{cb}d{}}00000{{{Od{c}}Ab}{{B`{Of}}}Hf}{{OhAb}{{B`{Of}}}}{{{Oj{c}}Dd}{{B`{{Ol{c}}}}}A`}<<<<<<<<<<<<<<<<<<<<<<{OnOn}{A@`A@`}{A@bA@b}{A@dA@d}{A@fA@f}{A@hA@h}{{ce}d{}{}}00000{{A@hAb}A@j}``{{}On}{{}A@f}{Abc{}}000000000000000000000{c{{Ad{On}}}Af}{c{{Ad{A@`}}}Af}{c{{Ad{A@b}}}Af}{c{{Ad{A@d}}}Af}{c{{Ad{A@f}}}Af}{Abd}0000000000{{{Ol{c}}An}{{`{{A@n{}{{Gn{{B`{{A@l{Jn}}}}}}}}}}}A`}{{OnOn}Ah}{{A@`A@`}Ah}{{A@bA@b}Ah}{{A@dA@d}Ah}{{A@fA@f}Ah}{{ce}Ah{}{}}00000000000000{{{Od{c}}}{{B`{An}}}Hf}{Oh{{B`{An}}}}{{{Oj{c}}An}{{B`{AA`}}}A`}{{{Ol{c}}}{{B`{AA`}}}A`}{{OfAb}Ah}{{OnBb}Bd}{{A@`Bb}Bd}{{A@bBb}Bd}{{A@dBb}Bd}{{A@fBb}Bd}{{A@hBb}{{Ad{dDb}}}}{cc{}}0000000000{{Dj{Cb{Dl}}{Cb{M`}}{Cb{{Eb{A@h}}}}}{{B`{Oh}}}}{{{Od{c}}}{{B`{AAb}}}Hf}{Oh{{B`{{Eb{A@h}}}}}}{{{Ol{c}}}{{AAf{{AAd{c}}}}}A`}{{Onc}dBf}{{A@`c}dBf}{{A@bc}dBf}{{A@dc}dBf}{{A@fc}dBf}{{}Ab}0000000000{ce{}{}}0000000000{A@hAAh}{OfAh}`{A@h{{Cb{{Dh{AAj}}}}}}`1{{{Cb{{Fh{Ab}}}}Cj{Cb{{Fh{AAl}}}}{Cb{f}}}An}{c{{Od{c}}}Hf}`{c{{Oj{c}}}{A`A`}}{{OfAb}{{B`{{Cb{{Dh{An}}}}}}}}{{{Od{c}}}{{B`{Ab}}}Hf}{Oh{{B`{Ab}}}}``{{{Od{c}}On}{{Od{c}}}Hf}{{OhOn}Oh}`{{{Od{c}}}{{B`{M`}}}Hf}{Oh{{B`{M`}}}}{OfM`}{A@hAAn}`{{Onc}AdCd}{{A@`c}AdCd}{{A@bc}AdCd}{{A@dc}AdCd}{{A@fc}AdCd}{{{Od{c}}Ah}{{Od{c}}}Hf}{{{Oj{c}}Ah}{{Oj{c}}}A`}1{{OhAh}Oh}{ce{}{}}00000{c{{Ad{e}}}{}{}}0000000000{AAh{{Ad{A@hAB`}}}}11111111111{G`{{B`{A@`}}}}{ABb{{B`{A@b}}}}{ABd{{B`{A@d}}}}{cCf{}}000000000097`66666666666{{{Od{c}}{Cb{{Dh{Df}}}}}{{Od{c}}}Hf}{{{Oj{c}}A@f}{{Oj{c}}}A`}{{{Oj{c}}{Cb{Ab}}}{{Oj{c}}}A`}{{{Od{c}}{Cb{{Dh{AAl}}}}}{{Od{c}}}Hf}{{Oh{Cb{{Dh{AAl}}}}}Oh}{{{Od{c}}{Cb{Ab}}}{{Od{c}}}Hf}{{Oh{Cb{Ab}}}Oh}{{{Od{c}}{Cb{{Eb{Jd}}}}}{{Od{c}}}Hf}{{Oh{Cb{{Eb{Jd}}}}}Oh}{{{Od{c}}{Cb{{Dh{Ab}}}}}{{Od{c}}}Hf}{{Oh{Cb{{Dh{Ab}}}}}Oh}8{{{Od{c}}{Cb{f}}}{{Od{c}}}Hf}{{Oh{Cb{f}}}Oh}{{{Od{c}}{Cb{M`}}}{{Od{c}}}Hf}{{{Oj{c}}Ah}{{Oj{c}}}A`}{{{Ol{c}}An}{{B`{d}}}A`}{{{Ol{c}}{Dh{{A@l{Jn}}}}}{{B`{d}}}A`}`{ce{}{}}0{Abc{}}0{Abd}{{{ABf{c}}An}{{B`{d}}}{jKlABh}}{cc{}}{{}Ab}5{{cei}{{ABf{c}}}{jKlABh}{{Gl{Aj}}}{{Bj{Dj}}}{{H`{}{{Gn{g}}}}}}{c{{Ad{e}}}{}{}}0{cCf{}}8{{{ABf{c}}Ah}{{ABf{c}}}{jKlABh}}``{{ABjc}{}ABl}{{ABjc}{}{ABlKl}};;::97{{}ABj}7<{ABnAA`}{{ABjc}AC`{ABlKl}}77{{ABbe}{}ABl{{Fn{}{{Fl{c}}}}}}7?0````{{An{Cb{Jd}}Ah}{{B`{d}}}}{Jd{{Cb{ACb}}}}{ce{}{}}000{ACd{{Fh{ACf}}}}{Abc{}}000{c{{Ad{ACf}}}Af}{c{{Ad{ACd}}}Af}{Abd}0{ACfJb}{{JdAn}{{B`{AAl}}}}{{ACfBb}Bd}{{ACdBb}Bd}{cc{}}0{AAlACf}{AChACf}{ACf{{Cb{AAl}}}}00{{ACdDj}{{B`{ACf}}}}{{}Ab}0??{{ACh{Cb{AAl}}{Cb{AAl}}{Cb{AAl}}}ACf}{{I`{Dh{ACf}}{Cb{Ab}}}ACd}{ACf{{Cb{Ab}}}}{ACd{{Cb{Ab}}}}{ACdI`}{{ACfc}AdCd}{{ACdc}AdCd}{{ACbACd}{{B`{Ah}}}}:::{c{{Ad{e}}}{}{}}000{cCf{}}0{ce{}{}}0``````{{CjCj{Cb{{Fh{Df}}}}Dj}{{B`{d}}}}{{DdDd{Cb{{Fh{Df}}}}Dj}{{B`{d}}}}0{c{{B`{Jf}}}{BlHfACj}}{{cAb}{{Dh{{Ed{AbAb}}}}}{{A@n{}{{Gn{Ab}}}}}}{{{Cb{{Fh{Df}}}}Dd{Cb{{Fh{AAl}}}}Ah}{{Cb{{Dh{Ab}}}}}}{BhAj}","D":"CFb","p":[[5,"Private",1505],[1,"unit"],[5,"RowIndex",0],[5,"HiveOptions",0],[10,"WriterFactory",0],[10,"SerWriter",0],[5,"Box",1506],[10,"Write",1507],[1,"usize"],[6,"Result",1508],[10,"Deserializer",1509],[1,"bool"],[5,"PathBuf",1510],[10,"SerReader",0],[5,"DataFrame",1511],[8,"PolarsResult",1512],[5,"Formatter",1513],[8,"Result",1513],[10,"Hasher",1514],[5,"Path",1510],[10,"AsRef",1515],[10,"Read",1507],[10,"ArrowReader",0],[8,"ArrowChunk",1516],[6,"Option",1517],[10,"Serializer",1518],[5,"TypeId",1519],[5,"AvroReader",83],[5,"ArrowSchema",1520],[10,"Seek",1507],[6,"AvroCompression",83],[5,"AvroWriter",83],[5,"Error",1513],[5,"Schema",1521],[5,"String",1522],[5,"Vec",1523],[1,"str"],[5,"CloudOptions",219],[5,"CloudLocation",149],[10,"ObjectStore",1524],[5,"Arc",1525],[1,"tuple"],[5,"PolarsObjectStore",149],[5,"CloudWriter",149],[5,"Error",1526],[10,"Command",1527],[8,"Result",1526],[5,"Url",1528],[5,"Path",1529],[5,"Bytes",1530],[5,"Range",1531],[1,"slice"],[5,"ObjectMeta",1524],[17,"Output"],[10,"FnOnce",1532],[1,"u8"],[10,"VarInt",1533],[6,"AmazonS3ConfigKey",219],[6,"AzureConfigKey",219],[6,"GoogleConfigKey",219],[6,"CloudType",219],[10,"Into",1515],[17,"Item"],[10,"IntoIterator",1534],[5,"CsvReader",398],[6,"CommentPrefix",398],[10,"MmapBytesReader",1004],[5,"CsvWriter",398],[5,"BatchedWriter",398],[5,"BatchedCsvReaderMmap",644],[5,"BatchedCsvReaderRead",644],[8,"SchemaRef",1521],[5,"OwnedBatchedCsvReaderMmap",644],[5,"OwnedBatchedCsvReader",644],[6,"CsvEncoding",398],[6,"NullValues",398],[6,"QuoteStyle",398],[5,"SerializeOptions",398],[5,"File",1535],[8,"NonZeroUsize",1536],[6,"DataType",1537],[10,"PhysicalIoExpr",1438],[6,"ReaderBytes",1004],[5,"Field",1538],[5,"RowGroupMetaData",1539],[5,"Statistics",707],[6,"PolarsError",1512],[5,"MutableStatistics",1540],[5,"IpcStreamReader",733],[5,"IpcWriter",733],[5,"BatchedWriter",733],[10,"AsyncWrite",1541],[10,"Unpin",1542],[10,"Send",1542],[6,"IpcCompression",733],[5,"IpcReadOptions",733],[5,"IpcReaderAsync",733],[5,"FileMetadata",1543],[1,"i64"],[5,"IpcStreamWriterOption",733],[5,"IpcWriterOption",733],[5,"IpcReader",733],[5,"IpcStreamWriter",733],[8,"ArrowSchemaRef",1520],[5,"JsonWriter",935],[5,"JsonReader",935],[5,"BatchedWriter",935],[6,"JsonFormat",935],[10,"BufRead",1507],[5,"StructArray",1027],[10,"Array",1544],[10,"Any",1519],[6,"ArrowDataType",1545],[5,"JsonLineReader",1027],[5,"GrowableStruct",1546],[5,"MutableStructArray",1547],[5,"Bitmap",1548],[10,"Scalar",1549],[5,"StructValueIter",1550],[5,"BitmapIter",1551],[6,"ZipValidity",1552],[5,"ParquetReader",1107],[5,"BatchedParquetReader",1107],[5,"ParquetAsyncReader",1107],[5,"ParquetWriter",1107],[5,"BatchedWriter",1107],[6,"ParallelStrategy",1107],[5,"GzipLevel",1107],[5,"BrotliLevel",1107],[5,"ZstdLevel",1107],[6,"ParquetCompression",1107],[5,"FileMetaData",1107],[6,"ColumnOrder",1553],[8,"RowGroupIter",1107],[10,"Iterator",1554],[1,"u64"],[8,"FileMetaDataRef",1107],[5,"FileWriter",1555],[5,"Mutex",1556],[5,"FileMetaData",1557],[5,"KeyValue",1557],[5,"Series",1558],[5,"SchemaDescriptor",1559],[6,"Error",1560],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1401],[10,"Sync",1542],[5,"RuntimeManager",1417],[10,"Future",1561],[10,"GetSize",1417],[5,"JoinHandle",1562],[10,"StatsEvaluator",1438],[5,"BatchStats",1438],[5,"ColumnStats",1438],[5,"Field",1563],[10,"Sized",1542]],"b":[[1047,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1048,"impl-PartialEq-for-StructArray"],[1053,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1054,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1073,"impl-Array-for-StructArray"],[1074,"impl-StructArray"],[1077,"impl-Array-for-StructArray"],[1078,"impl-StructArray"],[1091,"impl-StructArray"],[1092,"impl-Array-for-StructArray"],[1105,"impl-Array-for-StructArray"],[1106,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADAEjAAAAAEAAwAPABQAAAAWABMAKwACADAAAwA2AAAAOQACAD0AAgBBAAYASQAKAFwAAABeABcAeQADAIAAAQCDAA0AlAAAAJkABgCiAA0AsgACALgAAwC+AAIAxQAAAMgAAADNAA4A4gABAO4AAAD6AAEA/QAAABIBEAAmATAAXAEDAGEBCABvARwAkgECAJ0BAQCiAQQAqAEeAMoBMgD+AQAAAQIEABACBAAYAgcAKgIAACwCAAAxAgAAMwIAADYCBAA8AgQAQgIgAGwCAAB2AgAAhQIZAKMCAwCrAhUAwgIAAMYCAwDNAgMA0gIAANoCBADgAgAA5QIAAOcCAADqAgEA7QJKADkDAQBFAwsAXAMHAGYDLACdAwIAogMAAKUDAQCoAwAArgMUAMkDAwDSAxIA5wMBAO0DAQDwAwcA+QMBAPwDCAAGBAAACAQFAA8ECgAbBAEAHgQBACMEAgApBAAAKwQAADIEAAA0BAIAOwQFAEIEAQBFBAAASAQBAEwEBgBVBAQAXAQFAGMEAABlBAAAaAQAAGoEAgBvBCoAnQQ+AN4EBgDwBBMAEAUAABQFAQAXBQAAGQUAABsFAAAdBQAAHwUAACIFAQAmBQQALQUSAEEFGABdBQoAawUBAG4FAgByBQAAdQUAAHkFAAB7BQUAggUAAIQFBACKBQIAjgUEAJQFAQCXBQAAmQUFAKEFAgClBQMAqgUHALQFAQC+BQEAxwUCAM0FDQDdBQEA4AUBAA=="}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPKPGPPPFPFFPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPGPPPGKFPFIPPPPPPPPGKPPPIPPPPPPPKPPPPPPPPPPPPPFPPPPPFKPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPKPPPPPFPPPPPKKPPPPPPPPPFPPFPFPPPPPFPPPPKPPPFPPFPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNHOHHHHHHNNHNNHHHHHHHHHHHHHHHHHHOONNNNHHHHHNOONHHNHHHHHHOOOHOOOOHOHHOHHHHOOHHHHOOONONNNNOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNMNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONNONNNNNNONNMNNOOOONNNNNNNNNOMNNMNNCOONOONNMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNHHCCCFKNNNNNMNNNNNNNNFKKFNNNNNNNNNNNNNNMNMMOMNNNNONNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFFFPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONOONNNONNNNNOOONONOOOMOMNNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalNameSpace","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","Correlation","Count","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","GetOutput","GroupsToRows","Gt","GtEq","Hash","Hist","Implode","Interpolate","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","KeepName","Kurtosis","Last","Len","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PctChange","PeakMax","PeakMin","Plus","Pow","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","Reverse","Rolling","RollingCovOptions","RollingExpr","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Sort","SortBy","SpecialEq","Std","StringExpr","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","TemporalExpr","Ternary","Then","ToPhysical","TopK","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_mean","rolling_median","rolling_min","rolling_quantile","rolling_skew","rolling_std","rolling_sum","rolling_var","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_dot","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","super_type","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","DatetimeArgs","DurationArgs","UnionArgs","__clone_box","all","ambiguous","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","borrow","borrow_mut","cast","clone","clone_into","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","default","deref","deref_mut","drop","dtype_col","dtype_cols","duration","fold_exprs","format_str","from","hour","hours","init","int_range","int_ranges","into","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","parallel","pearson_corr","quantile","rechunk","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","to_owned","to_supertypes","try_from","try_into","type_id","vzip","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","get_current_optimizations","group_by","group_by_dynamic","group_by_stable","has_header","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","outer_join","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","raise_if_empty","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_dtype_overwrite","with_encoding","with_end_of_line_char","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","expressions","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","AggregationContext","PartitionedAggregation","PhysicalExpr","PhysicalIoHelper","as_expression","as_partitioned_aggregator","as_stats_evaluator","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","expr","finalize","fmt","fmt","from","from","has_window_function","init","init","into","into","is_literal","to_field","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","Error","ExtContext","Filter","Float32","Float64","GroupBy","HConcat","HStack","Inner","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","Outer","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","RollingOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","String","Time","UInt16","UInt32","UInt64","UInt8","Union","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","center","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cmp","compare","compression","compression","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_constant_duration","is_full_days","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","merges_join_keys","method","min_periods","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parse","parsed_int","partial_cmp","period","period","predicate","rolling","row_group_size","scan","schema","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weeks","weeks_only","weights","window_size","with_columns","aggs","apply","by_column","cache_hits","contexts","df","err","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","schema","schema","schema","schema","schema","schema","selection","slice","sort_options","coalesce","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1224,"polars_lazy::dsl::AggExpr"],[1231,"polars_lazy::dsl::BooleanFunction"],[1234,"polars_lazy::dsl::Expr"],[1268,"polars_lazy::dsl::FunctionExpr"],[1311,"polars_lazy::dsl::binary"],[1331,"polars_lazy::dsl::cat"],[1332,"polars_lazy::dsl::dt"],[1388,"polars_lazy::dsl::functions"],[1481,"polars_lazy::dsl::python_udf"],[1526,"polars_lazy::dsl::string"],[1588,"polars_lazy::dsl::udf"],[1594,"polars_lazy::frame"],[2018,"polars_lazy::frame::pivot"],[2020,"polars_lazy::physical_plan"],[2023,"polars_lazy::physical_plan::executors"],[2039,"polars_lazy::physical_plan::expressions"],[2082,"polars_lazy::physical_plan::planner"],[2083,"polars_lazy::prelude"],[2666,"polars_lazy::prelude::DslPlan"],[2726,"polars_lazy::prelude::JoinType"],[2727,"polars_lazy::prelude::LiteralValue"],[2730,"dyn_clone::sealed"],[2731,"polars_error"],[2732,"core::result"],[2733,"core::convert"],[2734,"core::convert"],[2735,"polars_core::series"],[2736,"core::option"],[2737,"core::ops::function"],[2738,"core::marker"],[2739,"core::marker"],[2740,"core::ops::function"],[2741,"polars_core::chunked_array::ops::sort::options"],[2742,"polars_core::chunked_array::ops::sort::options"],[2743,"alloc::vec"],[2744,"alloc::string"],[2745,"core::clone"],[2746,"polars_core::utils"],[2747,"polars_time::windows::group_by"],[2748,"polars_core::datatypes::time_unit"],[2749,"serde::de"],[2750,"polars_core::series::ops"],[2751,"core::marker"],[2752,"polars_core::chunked_array::ops"],[2753,"core::fmt"],[2754,"core::fmt"],[2755,"polars_plan::dsl::function_expr::business"],[2756,"polars_plan::dsl::function_expr::datetime"],[2757,"polars_plan::dsl::function_expr::array"],[2758,"polars_plan::dsl::function_expr::struct_"],[2759,"polars_plan::dsl::function_expr::strings"],[2760,"polars_plan::dsl::function_expr::range"],[2761,"polars_plan::dsl::function_expr::cat"],[2762,"polars_plan::dsl::function_expr::binary"],[2763,"polars_plan::logical_plan::options"],[2764,"polars_core::schema"],[2765,"polars_plan::logical_plan"],[2766,"polars_core::datatypes::field"],[2767,"core::hash"],[2768,"polars_ops::chunked_array::interpolate"],[2769,"core::fmt"],[2770,"core::ops::function"],[2771,"polars_arrow::legacy::kernels::rolling::no_nulls"],[2772,"polars_core::chunked_array::ops::rolling_window"],[2773,"polars_core::datatypes"],[2774,"polars_core::chunked_array"],[2775,"core::marker"],[2776,"serde::ser"],[2777,"polars_core::series::series_trait"],[2778,"polars_ops::chunked_array::list::to_struct"],[2779,"core::any"],[2780,"polars_arrow::legacy::kernels::time"],[2781,"polars_core::frame"],[2782,"polars_error"],[2783,"pyo3::types::any"],[2784,"pyo3::instance"],[2785,"polars_core::schema"],[2786,"polars_utils::aliases"],[2787,"polars_io::cloud::options"],[2788,"core::iter::traits::collect"],[2789,"polars_core::frame::explode"],[2790,"std::path"],[2791,"std::path"],[2792,"polars_utils::arena"],[2793,"polars_plan::logical_plan::aexpr"],[2794,"polars_utils::arena"],[2795,"pyo3::instance"],[2796,"polars_core::frame"],[2797,"polars_io::csv::read"],[2798,"polars_io::csv::read"],[2799,"polars_core::frame::group_by::proxy"],[2800,"core::fmt"],[2801,"chrono_tz::timezones"],[2802,"core::cmp"],[2803,"polars_plan::dot"],[2804,"ahash::random_state"],[2805,"hashbrown::map"],[2806,"alloc::borrow"],[2807,"polars_core::datatypes::any_value"],[2808,"chrono::naive::datetime"]],"i":[0,0,0,0,0,0,25,4,0,32,4,50,50,36,4,50,50,25,25,25,25,0,25,25,25,4,25,0,25,0,25,4,25,0,25,0,0,25,25,4,4,25,25,32,25,25,25,25,25,25,25,0,25,36,25,25,48,4,0,25,36,36,25,25,25,25,4,0,25,4,57,0,0,0,25,0,0,25,25,4,32,25,36,25,4,0,0,25,4,25,0,57,36,36,25,25,32,25,0,50,50,50,50,50,50,50,50,50,50,50,50,57,0,4,25,32,4,25,0,0,4,25,25,36,36,25,36,36,32,25,32,25,32,0,32,25,36,25,36,36,32,48,25,50,36,36,4,25,0,36,56,25,25,25,36,25,25,32,25,25,25,25,25,25,4,0,25,25,25,25,56,0,25,25,25,25,4,0,0,25,25,25,25,25,25,4,4,4,0,32,25,0,25,0,4,32,25,25,4,0,25,25,25,36,0,25,25,25,0,25,32,0,4,4,0,0,36,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,3,3,3,3,4,4,4,4,0,8,9,4,0,55,51,4,8,9,4,0,4,4,0,4,4,4,0,4,0,4,4,4,4,4,4,4,8,9,4,8,9,4,4,0,4,0,55,4,30,32,0,0,4,0,4,0,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,0,54,39,41,30,42,41,0,4,0,4,4,4,4,4,4,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,0,0,0,0,0,0,8,9,4,4,4,4,8,9,0,4,0,4,4,4,0,4,60,60,4,0,0,0,0,51,52,53,4,16,16,16,51,52,54,55,56,57,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,16,50,25,51,52,53,54,55,56,57,41,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,32,4,48,36,16,16,16,50,25,53,54,55,56,57,9,4,4,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,9,4,0,4,0,0,0,4,32,4,4,48,36,16,16,50,25,53,54,55,56,57,4,4,4,4,48,48,48,36,36,36,50,50,50,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,72,72,4,4,4,4,54,4,4,4,4,4,74,74,4,4,4,4,0,9,4,4,16,4,4,30,42,39,78,4,4,48,36,36,16,50,50,25,25,51,52,53,54,55,56,57,41,0,55,54,0,4,43,8,97,9,3,103,74,44,45,46,47,32,4,4,4,4,4,4,4,4,4,4,4,4,4,4,48,36,16,16,16,16,16,16,16,16,16,16,16,16,50,25,25,25,25,25,51,52,53,54,55,56,56,57,41,16,41,4,0,9,4,9,4,8,9,4,43,66,14,97,30,78,4,4,3,32,4,4,48,36,50,25,53,54,55,56,57,9,4,4,51,52,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,41,0,0,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,100,9,3,4,3,4,4,4,4,4,4,4,4,0,4,0,4,3,3,4,8,9,74,103,4,0,9,4,0,9,4,4,0,4,4,4,4,4,4,4,103,4,0,4,97,97,16,16,4,16,103,16,4,0,4,4,0,97,4,97,97,97,97,0,8,9,4,0,0,9,4,0,0,8,9,4,4,51,52,52,0,8,9,4,0,53,51,52,4,51,4,8,9,4,4,41,4,4,52,4,4,4,97,97,16,51,52,41,4,4,0,4,4,41,4,45,47,3,4,4,4,4,4,0,4,3,4,103,103,4,0,4,4,0,4,4,4,0,4,4,74,0,4,4,97,4,41,8,9,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,3,4,4,55,55,16,4,9,9,4,4,51,52,32,4,48,36,16,16,16,50,25,53,54,55,56,57,9,9,4,9,8,9,4,4,4,4,4,4,4,4,9,4,8,9,4,4,0,4,8,9,4,4,54,4,0,4,4,103,103,0,8,9,4,0,16,9,4,4,4,0,44,46,0,51,52,51,9,4,4,8,103,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,97,4,36,50,25,8,9,103,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,97,97,4,97,30,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,0,3,9,8,9,4,4,8,9,4,4,4,8,9,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,52,0,45,47,53,51,51,52,97,52,51,52,51,52,51,52,52,51,52,51,52,97,97,51,52,51,51,52,51,4,51,200,201,202,200,201,202,200,203,204,205,206,207,208,208,209,210,206,211,212,213,214,215,211,210,213,207,216,215,217,216,216,217,209,213,214,215,215,214,212,210,217,206,208,212,218,219,220,221,222,223,224,225,226,223,227,227,221,222,218,221,222,218,222,218,228,229,224,230,231,219,231,232,233,234,235,236,218,237,238,239,240,241,242,232,230,236,243,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,124,0,51,0,0,0,0,0,0,124,124,0,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,52,124,124,124,124,0,0,0,0,0,124,51,52,124,0,0,124,0,0,0,0,0,0,51,52,52,0,51,52,51,52,0,124,0,0,124,0,0,0,0,51,52,0,0,0,0,51,52,51,124,124,124,124,124,124,52,51,0,0,0,0,130,106,130,106,130,106,130,130,130,106,130,106,130,130,106,130,130,130,130,130,130,106,130,130,106,106,130,106,130,106,130,130,106,130,106,130,106,106,130,106,130,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,128,134,138,143,144,136,145,146,128,134,135,136,128,128,134,136,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,128,128,144,145,141,128,128,141,128,134,138,143,144,136,145,146,141,128,134,138,143,144,136,145,146,147,147,144,145,128,128,155,146,155,146,147,147,143,128,128,128,138,144,145,146,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,128,128,128,128,135,141,141,128,128,134,138,143,144,136,145,146,128,155,146,128,128,155,146,141,128,141,155,146,128,128,128,135,147,147,147,143,136,128,146,135,135,141,128,128,128,134,138,143,144,136,145,146,128,128,128,128,143,134,145,135,138,135,141,128,134,138,143,144,136,145,146,128,135,141,128,134,138,143,144,136,145,146,147,147,128,128,135,128,154,128,128,135,128,128,134,143,136,145,128,128,128,128,128,128,144,128,128,147,143,136,138,144,145,138,135,143,136,143,136,128,135,128,128,145,147,143,136,147,143,136,0,155,146,128,155,146,128,143,147,143,136,144,145,128,128,135,128,155,146,147,143,136,138,144,145,136,128,128,128,128,128,128,136,138,128,128,128,128,128,155,146,128,128,128,128,128,128,138,128,155,146,128,128,128,155,146,135,128,128,134,128,128,128,141,128,134,138,143,144,136,145,146,128,143,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,155,146,135,141,128,134,138,143,144,136,145,146,128,128,128,145,135,128,135,141,128,134,138,143,144,136,145,146,135,136,143,128,128,128,128,128,143,128,143,143,143,143,136,143,136,143,147,143,143,136,136,143,128,147,143,136,147,143,136,128,128,143,147,143,136,128,147,128,143,143,136,136,143,136,143,143,128,143,143,128,128,143,128,128,0,0,0,0,0,0,0,178,178,178,178,178,177,178,178,178,178,178,178,178,178,0,0,0,0,179,179,179,182,182,184,182,184,182,184,182,184,182,184,179,182,179,180,182,180,179,184,182,184,182,182,184,182,184,179,179,182,184,182,184,182,184,182,184,0,0,0,0,151,151,188,189,189,68,151,0,68,189,189,188,68,0,0,189,0,68,68,68,189,189,68,68,68,151,189,189,189,189,0,68,0,0,0,0,151,0,0,173,173,68,188,188,0,0,189,173,173,188,151,0,0,68,189,0,0,0,0,68,68,151,189,68,68,68,189,189,189,189,189,189,68,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,68,63,63,63,137,137,137,137,167,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,115,150,110,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,63,170,168,170,63,63,115,150,110,153,173,109,170,168,167,169,190,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,109,68,68,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,68,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,150,150,150,110,110,110,63,63,63,153,153,153,151,151,151,173,173,173,170,170,170,168,168,168,167,167,167,169,169,169,190,190,190,150,115,150,110,63,63,137,153,151,151,173,173,188,109,189,170,168,167,169,190,68,190,115,115,150,110,63,165,196,153,153,151,173,188,109,189,170,168,167,169,190,68,189,195,150,110,63,153,151,173,188,109,189,170,168,167,169,190,153,167,150,167,150,110,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,63,63,63,153,150,104,196,189,170,168,167,169,151,109,115,63,63,63,165,63,173,63,63,153,150,110,165,63,63,63,150,110,165,195,170,137,137,68,165,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,68,167,190,153,150,170,153,153,68,189,115,150,110,63,153,151,173,188,109,189,170,168,167,169,190,68,63,151,173,63,63,63,63,115,150,110,63,165,196,153,151,173,188,109,189,189,170,168,167,169,190,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,153,115,150,110,63,165,196,153,151,173,188,109,189,170,168,167,169,190,68,115,63,63,115,115,165,244,244,245,246,247,248,249,250,251,252,252,253,246,254,246,250,244,251,255,245,256,253,247,257,249,258,258,259,260,244,258,256,244,256,261,250,244,258,251,255,259,260,248,252,257,254,252,248,258,252,248,250,244,258,251,260,247,248,245,245,262,263,263,263],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000000{fh}{{fh}{{l{hj}}}}00{hh}{{hh}}1{{hn}h}{{}h}{A`h}{Abh}{{hAd}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}``{{hc}h{{Aj{h}}}}4321{{hcAd}h{{Aj{h}}}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{Bnj}}}{{C`{h}{{Bd{{l{Bnj}}}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}{{ce{B`{{An{Al}}}}Ad}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}?{{hhCdCf}h}{hh}0000{{hh}h}1>=1>=1{{hCh}h}{{cCj}h{{Ah{{Af{h}}}}}}3{ch{{Aj{h}}}}`{hA`}{ClCn}{D`h}{{{Db{h}}}h}{nh}{{h{Bf{Dd}}}h}`{hDf}{{hDhh}h}{ce{}{}}000000000000000000000000000000000000000000000000000<{{hh{Dj{Ad}}{Db{Dl}}}h}`{{Dnn}{{l{E`j}}}}{{Eb{Db{h}}}{{l{hj}}}}{{Cl{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{EdBbBb}{{l{Bbj}}}}{{Eb{Db{h}}}h}{{hCf}h}0`{hEf}{hh}0{{hhh}h}{{hh}h}0{EhEh}{EjEj}{ElEl}{EnEn}{D`D`}7{F`F`}{DhDh}{{{B`{c}}}{{B`{c}}}Fb}{FdFd}{CbCb}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{EbEb}{{ce}d{}{}}000000000000000000{{{Af{h}}}h}{nh}{ch{{Gd{E`}}}}{{eAd}{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{e{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{A`c}h{{Aj{h}}}}{{Abc}h{{Aj{h}}}}{hh}00021{{hhGf}h}{{hAd}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}111{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}2{{GhhGjAd}h}0{{h{Db{Gl}}{Bf{{Db{E`}}}}AdAd}h}{{hhGnH`{Bf{Hb}}{Bf{E`}}}h}{Ffh}11```{{}h}{{}{{B`{{An{Ed}}}}}}{{}{{B`{{An{Al}}}}}}{{}{{B`{{An{Hd}}}}}}{{}Ff}{{}Fh}{{}Fl}{{}Fn}{{}G`}{{}Gb}{hh}{Gjc{}}00000000000000{{{B`{c}}}{}{}}1111111111111111111111111111111111111{c{{l{D`}}}Hf}{c{{l{h}}}Hf}{c{{l{F`}}}Hf}{c{{l{Dh}}}Hf}{c{{l{{B`{Bb}}}}}Hf}{c{{l{{B`{{An{Hh}}}}}}}Hf}{c{{l{{B`{{An{Cl}}}}}}}Hf}{c{{l{Fd}}}Hf}{c{{l{Cb}}}Hf}{c{{l{Fj}}}Hf}{c{{l{Fl}}}Hf}{c{{l{Fn}}}Hf}{c{{l{G`}}}Hf}{c{{l{Gb}}}Hf}{{AbCdHj}h}{{hCdHj}h}{{hh}}{{hc}h{{Aj{h}}}}{Gjd}0000000000000000000000000{hh}{Abh}1`{hHl}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Fhh}{{hGlAd}h}{{D`D`}Ad}9{{hh}Ad}{{F`F`}Ad}{{DhDh}Ad}{{{B`{Bb}}{B`{Bb}}}Ad}{{{B`{{An{c}}}}{B`{{An{c}}}}}AdHn}{{FdFd}Ad}{{CbCb}Ad}{{FjFj}Ad}{{FlFl}Ad}{{FnFn}Ad}{{G`G`}Ad}{{GbGb}Ad}{{hc}h{{Aj{h}}}}{{ce}Ad{}{}}00000000000000000000000000{{I`hAd}h}0{{hIb}h}{{hhGnAd}h}11`{{hc}h{{Gd{E`}}}}{{hc}h{{Ah{{Af{Cf}}}}}}{hh}0{{hhh}h}{{IdCd}h}{{Idn}h}::{{hIf}h};{{}h}{Abh}66{{}{{B`{{An{Al}}}}}}7{{hh}h}{{ClIh}{{l{dIj}}}}{{EdIh}{{l{dIj}}}}{{DnIh}{{l{dIj}}}}{{IlIh}{{l{dIj}}}}{{hIh}{{l{dIj}}}}0{{F`Ih}{{l{dIj}}}}{{DhIh}{{l{dIj}}}}0{{{B`{c}}Ih}{{l{dIj}}}{}}{{FdIh}{{l{dIj}}}}0{{CbIh}{{l{dIj}}}}0{{FfIh}{{l{dIj}}}}{{FhIh}{{l{dIj}}}}{{FjIh}{{l{dIj}}}}{{FlIh}{{l{dIj}}}}{{FnIh}{{l{dIj}}}}{{G`Ih}{{l{dIj}}}}{{GbIh}{{l{dIj}}}}{{EbIh}{{l{dIj}}}}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}``{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{{h{Bf{Dd}}}h}{cc{}}00000000000{Dlh}{Cdh}2{Inh}{D`h}{Gfh}{nh}{Adh}{Glh}{J`h}{Jbh}{Jdh}{Jfh}{Ddh}=={Jh{{B`{{An{Cl}}}}}}{Jj{{B`{{An{Cl}}}}}}{Jl{{B`{{An{Cl}}}}}}{Jn{{B`{{An{Cl}}}}}}{cc{}}{K`{{B`{{An{Cl}}}}}}{Kb{{B`{{An{Cl}}}}}}{Kd{{B`{{An{Cl}}}}}}{Fd{{B`{{An{Cl}}}}}}{Kf{{B`{{An{Cl}}}}}}{Kh{{B`{{An{Cl}}}}}}{Cb{{B`{{An{Cl}}}}}}7{KfCb}{FdCb}{KhCb}:{KbCb};;;;;{GbG`}<<<{Cf{{B`{{An{Al}}}}}}`{{hc{B`{{An{Al}}}}Kj}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}`{{AbhAd}h}{{hc}h{{Aj{h}}}}{{Abhh}h}{{hGjGj}h}{{A`hAd}h}43{Efh}{{HdKlKnL`L`}{{Bf{L`}}}}{{AlKlKn{Af{L`}}}L`}{LbGj}{Cl{{Bf{{B`{{An{Al}}}}}}}}{{IlKl}{{l{{An{Kl}}j}}}}99{fAd}{{D`c}dLd}{{hDdDdDdDd}h}{{hc}dLd}{{F`c}dLd}{{Dhc}dLd}{{Fdc}dLd}{{Cbc}dLd}{{Fjc}dLd}{{Flc}dLd}{{Fnc}dLd}{{G`c}dLd}{{Gbc}dLd}{{Abh}h}{{h{Bf{Gj}}}h}{{h{Bf{h}}{Bf{Gj}}AdAd}h}``{hh}{{}Gj}0000000000000000000000000`{{hhCdCf}h}{{hhh}h}{{hLf}h}{ce{}{}}0000000000000000000000000{h}{LhAb}{AbAb}{f{{l{{`{Lj}}j}}}}{{hccLl}h{{Aj{h}}}}{fAd};;;{{hc}h{{Aj{h}}}}<<<<<<<<11<{{A`hAd}h}{{AbhAd}h}{Idh}{Lnh}{{hAdAd}h}{{}h}{Abh}{hh}210{hAb}{chM`}{{hGl}h}3;;3;;{{Lnc}h{{Bh{n}{{Bd{{l{E`j}}}}}}BjBl}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Lb{Bf{E`}}}{{l{L`j}}}}{{Lbc}{{l{L`j}}}{{Mb{Cf}{{Bd{Cf}}}}}}{c{{B`{{An{Al}}}}}{{Bh{Cf}{{Bd{Cf}}}}BjBl}}{c{{B`{{An{Al}}}}}{{Bh{{Af{Cf}}}{{Bd{Cf}}}}BjBl}}{{hc}h{{C`{h}{{Bd{h}}}}}}{c{{B`{{An{Al}}}}}{{Bh{L`}{{Bd{L`}}}}BjBl}}{{Ln{An{Bh}}}h}{c{{B`{{An{Al}}}}}{{Bh{{Af{L`}}}{{Bd{L`}}}}BjBl}}:{{ce{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}2{Lb{{l{L`j}}}}{{hMdAd}h}1111{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}42104321{hf}```54321```2`{{hh}}543{hLn}`44`{h}{{hc}h{{Aj{h}}}}0;{{{Af{L`}}}Lb}{c{{B`{c}}}{}}{{hhh}Ff}{{}Fh}{{n{Db{L`}}{B`{{An{Al}}}}c}EbCl}{{h{Mf{h}}}d}0<<<`6{{Ejc}h{{Aj{h}}}}{{Enc}h{{Aj{h}}}}{f{{l{{An{n}}j}}}}{{he}h{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{heGb}h{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{hh}h}{hh}0{{hhGf}h}{{}h}{f{{Db{h}}}}{{hc}h{{Aj{h}}}}{{Lnn}h}05`{{h{Db{Gl}}{Bf{{Db{E`}}}}AdAdAd}h}{{hGj{Bf{{Db{E`}}}}AdAdAd}h}{{nhMh}h}{{hhMh}h}9{{hMj{Bf{Dd}}}h}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{hAd}h}{{hh}}{{Id{Db{E`}}}h}{{ch}h{{Aj{h}}}};{{hcc{Bf{c}}{Bf{Cf}}}h{{Aj{h}}}}{{Lb{Bf{Cf}}}{{l{L`j}}}}{{h{Af{Cd}}}h}`{A`h}{Abh}{hh}00{{hMl}h}{{hhFj}h}0{{h{An{Bh}}{B`{{An{Al}}}}Mn}h}{{hGjc}h{{C`{{Nb{N`}}}{{Bd{{Bf{Gl}}}}}}BjBlNd}}{{hNf}h}000{{hMhGlNf}h}{{hGjAd}h}222{f{{Db{{An{n}}}}}}{{hIn}h}{{hDl}h}``{{}{{B`{{An{Al}}}}}}{{hhAdAd{Bf{Dd}}}h}{{AbhAdAd{Bf{Dd}}}h}01{{hcNh}h{{Aj{h}}}}``{{D`c}lNj}{{hc}lNj}{{F`c}lNj}{{Dhc}lNj}{{{B`{{An{Cl}}}}c}lNj}{{{B`{{An{Hh}}}}c}lNj}{{{B`{Bb}}c}lNj}{{Fdc}lNj}{{Cbc}lNj}{{Fjc}lNj}{{Flc}lNj}{{Fnc}lNj}{{G`c}lNj}{{Gbc}lNj}{{Abc}h{{Aj{h}}}}0{{hNl}h}1{{A`h}h}{{Abh}h}{{hh}h}{{hce}h{{Aj{h}}}{{Aj{h}}}}{hh}{{h{Bf{Dd}}}h}111{{hAd}h}{{Abhh}h}4{{A`Ch}h}{{AbCh}h}{{hCh}h}{{heCj}h{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{hhGfAd}h}8{{A`Gf}h}{{AbGf}h}{{hGf}h}{hNn}`{{hCf}h}`{hId}{{hh}}{{Lnn}h}0{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}{{}{{B`{{An{Al}}}}}}{{Abh}h}{{h{Bf{Gj}}}h}44{{hhh}h}{{Ehc}Ej{{Aj{h}}}}{{Elc}En{{Aj{h}}}}{{hhGnH`}h}```{{AbGj}h}{h{{l{E`j}}}}{{hKlKn}{{l{L`j}}}}={Lnh}{ce{}{}}000000000000000000={Lb{{l{L`j}}}}{cE`{}}000{{A`{Bf{{An{Bh}}}}}h}{{AbO`{Bf{{An{Bh}}}}Gj}h}5{{hh}h}{c{{l{e}}}{}{}}000000000000000000000000000000000000000000000000000{{Lbc}{{l{L`j}}}{{Mb{Cf}{{Bd{{l{Cfj}}}}}}}}{{Lbc}{{l{L`j}}}{{Mb{{Af{Cf}}}{{Bd{{l{Cfj}}}}}}}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Lbc}{{l{L`j}}}{{Mb{L`}{{Bd{{l{L`j}}}}}}}}{{Cl{Db{Gf}}}{{l{dj}}}}{cOb{}}0000000000000000000000000`{fh}{{Abc}h{{Aj{h}}}}{A`h}{Abh}{hh}02100{{hAdAd}h}{{A`Gf}h}{{AbGf}h}{{hGf}h}{ce{}{}}0000000000000000000000000`{cEh{{Aj{h}}}}{{Ejc}El{{Aj{h}}}}{{Enc}El{{Aj{h}}}}`{{Ffh}Ff}0{{Fhh}Fh}{{LbCf}{{l{L`j}}}}{{Fhhhh}Fh}{{Ffhhh}Ff}1434334343{{Lb{Bf{Cf}}}{{l{L`j}}}}{Lb{{l{L`j}}}}65{{FfHb}Ff}{{Ff{Bf{E`}}}Ff}78{{hc}h{{Aj{h}}}}`````````````````````````````````````````````````````````````````````````````````````````{{DfAd}h}{Dfh}??{{Dfh}h}{Gjc{}}0{Gjd}2{cc{}}54{{}Gj}{ce{}{}}5{c{{l{e}}}{}{}}0{cOb{}}2``{{Hlh{Dj{Ad}}{Db{Dl}}Od}h}{Hlh}44{{HlHb}h}1{{HlhHb}h}{{HlE`}h}333;;:393873333333333{{Hlh}h}44{{Hl{Bf{E`}}hOf}h}{{Hlcc}h{{Ah{n}}}}6{{Hln}h}7607777777{{HlhE`}h};;:<8878```{{cb}d{}}{{}h}`{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhCdCf}h}{{cCj}h{{Ah{{Af{h}}}}}}{ch{{Aj{h}}}}{{{Db{h}}}h}{nh}{ce{}{}}0{{hCf}h}{OhOh}{{ce}d{}{}}{{{Af{h}}}h}5{c{{Ol{{Db{Oj}}}}}{{A@b{}{{On{A@`}}}}}}{ch{{Gd{E`}}}}{{cOh}{{Ol{A@`}}}{{Ah{{Af{A@`}}}}}}{{eAd}{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}11{e{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{hhGf}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{hhGnH`{Bf{Hb}}{Bf{E`}}}h}0{Ffh}11``{{}Oh}{Gjc{}}0{Gjd}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Fhh}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{cc{}}``{{}Gj}{{hhCdCf}h}{{hhh}h}{ce{}{}}{hh}0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{nh}00```0````2`{{hhGf}h}{{nhMh}h}`{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{ch}h{{Aj{h}}}}{{hhFj}h}0``{{hhGfAd}h}6{{hhGnH`}h}0```:`{c{{l{e}}}{}{}}0{cOb{}}<``````{{cb}d{}}===={{Md{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{A@dOj}{{l{Ojj}}}}{A@dA@d}{{ce}d{}{}}{Gjc{}}000{c{{l{A@d}}}Hf}{Gjd}0{{A@dA@d}Ad}{{ce}Ad{}{}}00{{A@dIh}{{l{dIj}}}}{cc{}}{{{A@h{A@f}}}A@d}1{Md{{Bf{{B`{{An{Al}}}}}}}}{{}Gj}0{ce{}{}}0{{{A@h{A@f}}{Bf{Cf}}Ad}Md}{{A@dc}lNj}2{c{{l{e}}}{}{}}000{{Md{Db{Gf}}}{{l{dj}}}}{cOb{}}055`{{NnAd}h}{Nnh}77{{NnnAd}h}{{NnhAd}h}{{Nnh}h}1{Gjc{}}0{Gjd}25{{NnhGj}h}3{{Nnn}{{l{hj}}}}54{cc{}}598{{}Gj}{ce{}{}}{{Nn{Bf{Cf}}{Bf{Gj}}}h}{{NnE`}h}<<{{NnGjA@j}h}0{{NnhhAd}h}0{{NnhhAdCd}h}?{{Nnhh}h}=::=:======{{NnCfFlh}h}>{{NnFl}h}{{Nn{Bf{Hb}}{Bf{E`}}Flh}h}{{NnGj}h}{{NnhAd}h}{Nnh}400{c{{l{e}}}{}{}}0{cOb{}}>{{Nnh}h}````````````````````{{cb}d{}}00000000{{A@`Ad}A@`}{{A@lc}A@`{{Ah{{Af{h}}}}}}{{A@nAd}A@n}{AA`Ad}{{{An{AAb}}AAd}{{Ol{A@`}}}}{{A@`A@`cc}A@`{{Aj{h}}}}{{A@lcAAf}A@`{{Bh{Oj}{{Bd{{Ol{Oj}}}}}}BjBl}}{AA`Cn}{ce{}{}}0000000000000000000{{A@`AAhcCj}A@`{{Ah{{Af{h}}}}}}{A@`A@`}``{AAjd}{{A@`{AAl{nCf}}Ad}A@`}{{A@`CfAd}A@`}{AAjAAj}4{A@lA@l}{AAdAAd}{AAnAAn}{AB`AB`}{AA`AA`}{ABbABb}{ABdABd}{{ce}d{}{}}00000000{ABf{{Bf{ABh}}}}0``{A@`{{Ol{Oj}}}}{A@`{{Ol{AAj}}}}````{{ABf{Db{A@`}}}{{Ol{A@`}}}}0{{AAn{Db{A@`}}}{{Ol{A@`}}}}{A@`A@`}{{A@`A@`}A@`}{{}A@`}{{}AAd}{{}AB`}{{}ABb}{{}ABd}{Gjc{}}0000000000000000000{A@`{{Ol{E`}}}}0{A@`E`}0{Gjd}0{AAjd}1{{A@`e}A@`{{Ah{n}}}{{ABj{}{{On{c}}}}}}2222222{{A@`{Bf{{Db{h}}}}}A@`}``{{A@`Ad}{{Ol{E`}}}}{{A@`e}A@`{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}``{AAj{{Bf{{Ol{Oj}}}}}}{{A@`Gj}{{Ol{Oj}}}}{AAj{{Ol{Oj}}}}``{{A@`c}A@`{{Aj{h}}}}0{{A@`h}A@`}{A@nA@`}{ABf{{Ol{A@`}}}}00{AAn{{Ol{A@`}}}}{AA`{{Ol{A@`}}}}{A@`A@`}{{ABdIh}{{l{dIj}}}}{{A@nAd}A@n}{cc{}}0{HhA@`}{A@lA@`}22222222{A@`ABd}{{A@`e}A@l{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{A@`hcABl}A@l{{Ah{{Af{h}}}}}}1{{AAnAd}AAn}{{A@l{Bf{Gj}}}A@`}`{{A@nABn}A@n}`{{}Gj}000000000{{A@`A@`cc}A@`{{Aj{h}}}}{ce{}{}}000000000{ABf{{Ol{{Bf{AC`}}}}}}0{{A@`A@`ccACb}A@`{{Ah{{Af{h}}}}}}{A@`A@n}?{A@`A@`}{ACdA@`}16{{A@nc}A@n{{Ah{{Af{h}}}}}}{{A@`AAh}A@`}``<{{AA`Ad}AA`}`{{A@`cACf{Bf{{An{Il}}}}{Bf{n}}}A@`{{Bh{Oj}{{Bd{{Ol{Oj}}}}}}BjBl}}{{A@`A@dACf{Bf{AAf}}Ad}A@`}{A@`{{Ol{A@`}}}}00{{A@`ACh}A@`}`{{A@`A@`n}{{Ol{A@`}}}}2{ABf{{Bf{Gj}}}}{AAn{{Bf{Gj}}}}{AA`{{Bf{Gj}}}}````={cAAn{{Ah{ACj}}}}{cAA`{{Ah{ACj}}}}{{{An{{Af{ACl}}}}}AAn}{{{An{{Af{ACl}}}}}AA`}{A@`A@`}?{{A@`{AD`{ACn}}{AD`{ADb}}}{{Ol{ADd}}}}{{A@`A@`cc}A@`{{Aj{h}}}}`{ABfACj}{AAnACj}{AA`ACj}{ABf{{Af{ACl}}}}{AAn{{Af{ACl}}}}{AA`{{Af{ACl}}}}```{A@`{{Ol{{ADf{OjOj}}}}}}``{{A@`hMh}{{Ol{A@`}}}}{{AAnAd}AAn}{ABfAd}{AAnAd}{AA`Ad}``{{A@`ei}A@`{{Ah{n}}}{{ABj{}{{On{c}}}}}{{Ah{n}}}{{ABj{}{{On{g}}}}}}?{{A@nc}A@n{{Ah{{Af{h}}}}}}{{A@`hcMl}A@l{{Ah{{Af{h}}}}}}``{ABf{{Bf{ADh}}}}{AAn{{Bf{ADh}}}}{AA`{{Bf{ADh}}}}```{{AA`ADj}{{Ol{Oj}}}}{{KlADlAd}A@`}{{cAB`}{{Ol{A@`}}}{{Ah{ACj}}}}{{{An{{Af{ACl}}}}AB`}{{Ol{A@`}}}}{{cABb}{{Ol{A@`}}}{{Ah{ACj}}}}{{{An{{Af{ACl}}}}ABb}{{Ol{A@`}}}}{A@`{{Ol{AAf}}}}{{AA`{Bf{Gj}}}{{Ol{AAf}}}}`{{A@`c}A@`{{Ah{{Af{h}}}}}}0{{A@`A@`cc}A@`{{Aj{h}}}}{{A@`c}A@`{{Aj{h}}}}{{A@`ce}A@`{{Aj{h}}}{{Aj{h}}}}``{{A@`AClADn}{{Ol{d}}}}{{A@`AClAE`}{{Ol{d}}}}{{A@`E`{Bf{ABh}}AE`}{{Ol{d}}}}{{A@`AClAEb}{{Ol{d}}}}{{A@`AClAEd}{{Ol{d}}}}{{A@`E`{Bf{ABh}}AEd}{{Ol{d}}}}`{{A@`CdAAh}A@`}``{{A@`cCj}A@`{{Gd{AEf}}}}{{A@`cCj}A@`{{Ah{{Af{h}}}}}}{{A@`Gf}{{Ol{A@`}}}}``{{A@nc}A@n{{Ah{n}}}}{A@`{{Ol{A@`}}}}{{A@`AAh}A@`}{{A@l{Bf{Gj}}}A@`}{A@`{{Ol{{ADf{ADd{AD`{ACn}}{AD`{ADb}}}}}}}}0{{A@`Ad}{{Ol{E`}}}}{ce{}{}}00000000{{A@`AAhcCj}A@`{{Ah{{Af{h}}}}}}{{AAnAd}AAn}{c{{l{e}}}{}{}}0000000000000000000``{cOb{}}000000000{{A@`{Bf{{Db{E`}}}}AEh}A@`}0{{A@`e}A@`{{Ah{n}}}{{ABj{}{{On{c}}}}}}`{{A@nAEj}A@n}>7777777777{{A@nA@`}A@n}{{AA`{Bf{AEl}}}AA`}7{{A@`h}A@`}{{A@`c}A@`{{Ah{{Af{h}}}}}}0{{A@`Ad}A@`}0{{AAn{Bf{n}}}AAn}{{A@`c}A@`{{Ah{{Af{A@`}}}}}}{{AAn{Bf{Kl}}}AAn}{{AAnAEn}AAn}{{AAnGf}AAn}?{{AA`Ad}AA`}{{AAn{Bf{Gj}}}AAn}{{AA`{Bf{Gj}}}AA`}{{AAnAd}AAn}{{ABfc}ABf{{Aj{{Bf{Gj}}}}}}3{{AAnc}AAn{{Aj{{Bf{Gj}}}}}}3{{AA`c}AA`{{Aj{{Bf{Gj}}}}}}{{AAn{Bf{AF`}}}AAn}{{A@`ABd}A@`}{{ABfACl}ABf}{{AAnACl}AAn}{{AA`ACl}AA`}{{ABf{An{{Af{ACl}}}}}ABf}{{AAn{An{{Af{ACl}}}}}AAn}{{AA`{An{{Af{ACl}}}}}AA`}{{A@`Ad}A@`}0{{AAn{Bf{Gf}}}AAn}{{ABfAd}ABf}>{{AA`Ad}AA`}3{{ABfc}ABf{{Aj{{Bf{ADh}}}}}}{{A@`n{Bf{AAh}}}A@`}{{AAnc}AAn{{Aj{{Bf{ADh}}}}}}{{AAn{Bf{ADh}}}AAn}{{AA`{Bf{ADh}}}AA`}{{AA`c}AA`{{Aj{{Bf{ADh}}}}}}{{AAn{Bf{AAf}}}AAn}{{AA`{Bf{AAf}}}AA`}{{AAnc}{{Ol{AAn}}}{{Bh{Kl}{{Bd{{Ol{Kl}}}}}}}}{{AAnGf}AAn}={{AAnGj}AAn}0>>{{AAnAd}AAn}?{A@`A@`}{{Ojei{Bf{m}}Ad{Bf{h}}{Bf{n}}}{{Ol{Oj}}}{{Ah{n}}}{{ABj{}{{On{c}}}}}{{Ah{n}}}{{ABj{}{{On{g}}}}}{{Ah{n}}}{{ABj{}{{On{k}}}}}}0`````{ce{}{}}0{Gjc{}}0{Gjd}``{cc{}}{{}Gj}4{c{{l{e}}}{}{}}0{cOb{}}6````{AFf{{Bf{h}}}}{AFf{{Bf{AFh}}}}{AFf{{Bf{AFj}}}}{AFl{{Bf{AFj}}}}::::999988`{{AFlOj}{{Ol{Bb}}}}````{{AFfIh}AGb}{{AG`Ih}AGb}::`99=={AFfAd}{{AFfKl}{{Ol{L`}}}}::::99??{{ADd{AD`{ACn}}{AD`{ADb}}}{{Ol{{AGd{AFb}}}}}}````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000{{GnCd{Bf{AGf}}}{{l{Cdj}}}}00{AAbAd}00{AAbCn}`{ce{}{}}00000000000000000000000000000000000````{NfNf}{ABlABl}{MlMl}{GnGn}{ACbACb}{ABnABn}{AEjAEj}{AGhAGh}{MjMj}{AGjAGj}{AEdAEd}{AE`AE`}{ADnADn}{AEbAEb}{AGlAGl}{HhHh}{{ce}d{}{}}000000000000000```{{GnGn}AGn}{{ce}AGn{}{}}```{GnCd}{GnAd}{{}Nf}{{}ABl}{{}Ml}{{}ACb}{{}AEj}{{}Mj}{{}AEd}{{}AE`}{{}ADn}{{}AEb}{{}AGl}{{}Hh}{Gjc{}}00000000000000000000000000000000000`{HhE`}0{c{{l{Nf}}}Hf}{c{{l{ABl}}}Hf}{c{{l{Ml}}}Hf}{c{{l{Gn}}}Hf}{c{{l{ACb}}}Hf}{c{{l{ABn}}}Hf}{c{{l{AEj}}}Hf}{c{{l{AGh}}}Hf}{c{{l{Mj}}}Hf}{c{{l{AGj}}}Hf}{c{{l{AEd}}}Hf}{c{{l{AE`}}}Hf}{c{{l{ADn}}}Hf}{c{{l{AEb}}}Hf}{c{{l{AGl}}}Hf}{c{{l{Hh}}}Hf}{{HhE`{ADf{GjGj}}AH`{AHd{E`E`AHb}}}{{l{dIj}}}}{Gjd}00000000000000000{{NfNf}Ad}{{ABlABl}Ad}{{MlMl}Ad}{{GnGn}Ad}{{ACbACb}Ad}{{ABnABn}Ad}{{AEjAEj}Ad}{{AGhAGh}Ad}{{MjMj}Ad}{{AGjAGj}Ad}{{AEdAEd}Ad}{{AE`AE`}Ad}{{ADnADn}Ad}{{AEbAEb}Ad}{{AGlAGl}Ad}{{ce}Ad{}{}}00000000000000000000000000000000`{{NfIh}{{l{dIj}}}}{{ABlIh}{{l{dIj}}}}{{MlIh}{{l{dIj}}}}{{GnIh}{{l{dIj}}}}0{{AAbIh}{{l{dIj}}}}{{ACbIh}{{l{dIj}}}}{{ABnIh}{{l{dIj}}}}0{{AEjIh}{{l{dIj}}}}0{{AGhIh}{{l{dIj}}}}{{MjIh}{{l{dIj}}}}{{AGjIh}{{l{dIj}}}}{{AEdIh}{{l{dIj}}}}{{AE`Ih}{{l{dIj}}}}{{ADnIh}{{l{dIj}}}}{{AEbIh}{{l{dIj}}}}{{AGlIh}{{l{dIj}}}}{{HhIh}{{l{dIj}}}}``{cc{}}000000{ABnACb}11111111111{AGjCf}{{AHf{Db{Bb}}ABl}{{l{{ADf{Bb{Db{Bb}}AFn}}j}}}}{{ABlc}dLd}{{Mlc}dLd}{{Gnc}dLd}{{ACbc}dLd}{{ABnc}dLd}{{AEjc}dLd}{{AGhc}dLd}{{Mjc}dLd}{{AGjc}dLd}{{AEdc}dLd}{{AE`c}dLd}{{ADnc}dLd}{{AEbc}dLd}{{AGlc}dLd}``````{{}Gj}00000000000000000{ce{}{}}00000000000000000{{Gn{Bf{n}}}Ad}{GnAd}0``{M`h}{AHhh}{AGjh}````{ABnAd}``{GnCd}5{{GnCd}Gn}`1{AEjAd}7{CdGn}{ABnACb}```{nGn}`{{GnGn}{{Bf{AGn}}}}```{{AHf{Db{Bb}}Ml}{{l{{ADf{Bb{Db{Bb}}AFn}}j}}}}`{{AAbADj}{{l{Ojj}}}}{{AAb{Bf{Gj}}}{{l{{An{Kl}}j}}}}{Hh{{l{{AHj{{An{Kl}}}}j}}}}`{{Nfc}lNj}{{ABlc}lNj}{{Mlc}lNj}{{Gnc}lNj}{{ACbc}lNj}{{ABnc}lNj}{{AEjc}lNj}{{AGhc}lNj}{{Mjc}lNj}{{AGjc}lNj}{{AEdc}lNj}{{AE`c}lNj}{{ADnc}lNj}{{AEbc}lNj}{{AGlc}lNj}{{Hhc}lNj}`````{ACbn}`{Hh{{l{{ADf{ADd{AD`{ACn}}{AD`{ADb}}}}j}}}}{AGj{{Bf{AHl}}}}{ce{}{}}000000000000000{cE`{}}00{{GnCd{Bf{AGf}}ceg}{{l{Cdj}}}{{Bh{Cd}{{Bd{Cd}}}}}{{Bh{Cd}{{Bd{AHn}}}}}{{Bh{AHn}{{Bd{Cd}}}}}}{{GnCd{Bf{AGf}}}{{l{Cdj}}}}00{c{{l{e}}}{}{}}00000000000{AHl{{l{AGjj}}}}111111111111111111111111{cOb{}}00000000000000000`666666666666666666`{GnCd}{GnAd}```````````````````````````````````````````````````````````````````","D":"GCh","p":[[5,"Private",2730],[1,"unit"],[5,"MetaNameSpace",6],[6,"Expr",6],[6,"PolarsError",2731],[6,"Result",2732],[1,"str"],[5,"ArrayNameSpace",6],[5,"ListNameSpace",6],[1,"bool"],[1,"slice"],[10,"AsRef",2733],[10,"Into",2733],[10,"FunctionOutputField",6],[5,"Arc",2734],[5,"SpecialEq",6],[5,"Series",2735],[17,"Output"],[6,"Option",2736],[10,"Fn",2737],[10,"Send",2738],[10,"Sync",2738],[6,"VisitRecursion",2739],[10,"FnMut",2737],[6,"FunctionExpr",6],[1,"i64"],[6,"DataType",2740],[5,"SortOptions",2741],[5,"SortMultipleOptions",2741],[10,"SeriesUdf",6],[10,"Any",2742],[6,"AggExpr",6],[5,"Vec",2743],[1,"u64"],[5,"BinaryNameSpace",1311],[6,"Operator",6],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6],[5,"String",2744],[5,"UserDefinedFunction",6],[10,"SeriesBinaryUdf",6],[5,"CategoricalNameSpace",6],[5,"When",6],[5,"Then",6],[5,"ChainedWhen",6],[5,"ChainedThen",6],[6,"Excluded",6],[10,"Clone",2745],[6,"BooleanFunction",6],[5,"DatetimeArgs",6],[5,"DurationArgs",6],[5,"RollingCovOptions",6],[5,"StrptimeOptions",6],[5,"JoinOptions",6],[6,"WindowType",6],[6,"WindowMapping",6],[10,"IntoVec",2746],[1,"u8"],[10,"ExprEvalExtension",6],[1,"usize"],[1,"f64"],[5,"Duration",2083],[6,"ClosedWindow",2747],[6,"TimeUnit",2748],[10,"BinaryUdfOutputField",6],[10,"Deserializer",2749],[6,"DslPlan",2083],[6,"NullBehavior",2750],[5,"DateLikeNameSpace",1332],[10,"Sized",2738],[10,"ListNameSpaceExtension",6],[5,"EWMOptions",2751],[5,"StructNameSpace",6],[6,"FillNullStrategy",2752],[5,"Formatter",2753],[5,"Error",2753],[10,"UdfSchema",6],[1,"u32"],[1,"u16"],[1,"f32"],[1,"i16"],[1,"i8"],[6,"ListFunction",2754],[6,"BusinessFunction",2755],[6,"TemporalFunction",2756],[6,"ArrayFunction",2757],[6,"StructFunction",2758],[6,"StringFunction",2759],[6,"RangeFunction",2760],[6,"CategoricalFunction",2761],[6,"BinaryFunction",2762],[5,"FunctionOptions",2763],[5,"Schema",2764],[6,"Context",2765],[5,"Field",2766],[5,"FieldsMapper",6],[10,"Hasher",2767],[6,"InterpolationMethod",2768],[10,"IntoListNameSpace",6],[10,"Display",2753],[6,"ClosedInterval",2769],[5,"ExprNameNameSpace",6],[10,"Literal",2083],[10,"FnOnce",2737],[5,"PythonUdfExpression",1481],[5,"UnitVec",2770],[6,"QuantileInterpolOptions",2771],[5,"RankOptions",2083],[5,"RollingGroupOptions",2083],[5,"RollingOptionsFixedWindow",2772],[5,"Float64Type",2773],[5,"ChunkedArray",2774],[10,"Copy",2738],[5,"RollingOptions",2083],[6,"SearchSortedSide",2775],[10,"Serializer",2776],[6,"IsSorted",2777],[5,"StringNameSpace",1526],[6,"ListToStructWidthStrategy",2778],[5,"TypeId",2742],[6,"Roll",2779],[6,"NonExistent",2780],[5,"UnionArgs",1388],[5,"DataFrame",2781],[8,"PolarsResult",2731],[17,"Item"],[5,"LazyFrame",1594],[10,"IntoParallelIterator",2782],[5,"PythonFunction",1481],[5,"PyAny",2783],[5,"Py",2784],[1,"char"],[5,"LazyGroupBy",1594],[5,"JoinBuilder",1594],[5,"LazyJsonLineReader",1594],[10,"AnonymousScan",2083],[5,"ScanArgsAnonymous",1594],[8,"SchemaRef",2764],[8,"IdxSize",2785],[5,"InProcessQuery",1594],[8,"PlHashMap",2786],[5,"LazyCsvReader",1594],[5,"ScanArgsIpc",1594],[5,"ScanArgsParquet",1594],[5,"OptState",1594],[10,"LazyFileListReader",1594],[5,"CloudOptions",2787],[10,"IntoIterator",2788],[5,"DynamicGroupOptions",2083],[6,"JoinType",2083],[8,"PathIterator",1594],[5,"JoinArgs",2083],[10,"IntoLazy",1594],[8,"AllowedOptimizations",1594],[5,"MeltArgs",2789],[5,"Path",2790],[5,"PathBuf",2790],[6,"IR",2791],[5,"Arena",2792],[6,"AExpr",2793],[5,"Node",2792],[1,"tuple"],[5,"RowIndex",2794],[5,"AnonymousScanArgs",2083],[8,"PyObject",2784],[5,"CsvWriterOptions",2083],[5,"IpcWriterOptions",2083],[5,"JsonWriterOptions",2083],[5,"ParquetWriteOptions",2083],[8,"String",2795],[6,"UniqueKeepStrategy",2781],[6,"JoinValidation",2083],[8,"NonZeroUsize",2796],[6,"CsvEncoding",2797],[6,"NullValues",2797],[10,"Executor",2023],[5,"Dummy",2023],[10,"PhysicalExpr",2039],[10,"PartitionedAggregation",2039],[10,"StatsEvaluator",2798],[5,"PhysicalIoHelper",2039],[6,"GroupsProxy",2799],[5,"AggregationContext",2039],[8,"Result",2753],[5,"Box",2800],[6,"Tz",2801],[6,"RankMethod",2083],[6,"LiteralValue",2083],[5,"AnonymousScanOptions",2083],[6,"Ordering",2802],[5,"DotNode",2803],[5,"RandomState",2804],[5,"HashMap",2805],[10,"PolarsTemporalGroupby",2083],[5,"Null",2083],[6,"Cow",2806],[6,"AnyValue",2807],[5,"NaiveDateTime",2808],[15,"Quantile",1224],[15,"Min",1224],[15,"Max",1224],[15,"IsBetween",1231],[15,"Any",1231],[15,"All",1231],[15,"SortBy",1234],[15,"Filter",1234],[15,"Cast",1234],[15,"Sort",1234],[15,"Gather",1234],[15,"RenameAlias",1234],[15,"Ternary",1234],[15,"Function",1234],[15,"Window",1234],[15,"AnonymousFunction",1234],[15,"Slice",1234],[15,"BinaryExpr",1234],[15,"QCut",1268],[15,"Entropy",1268],[15,"Log",1268],[15,"Hist",1268],[15,"Cut",1268],[15,"EwmMeanBy",1268],[15,"Correlation",1268],[15,"Round",1268],[15,"RoundSF",1268],[15,"Clip",1268],[15,"BackwardFill",1268],[15,"ForwardFill",1268],[15,"Random",1268],[15,"GatherEvery",1268],[15,"Rank",1268],[15,"EwmMean",1268],[15,"EwmStd",1268],[15,"EwmVar",1268],[15,"ValueCounts",1268],[15,"Replace",1268],[15,"CumCount",1268],[15,"CumSum",1268],[15,"CumProd",1268],[15,"CumMin",1268],[15,"CumMax",1268],[15,"FillNull",1268],[15,"GroupBy",2666],[15,"Sort",2666],[15,"Cache",2666],[15,"ExtContext",2666],[15,"DataFrameScan",2666],[15,"Error",2666],[15,"Select",2666],[15,"HStack",2666],[15,"Scan",2666],[15,"MapFunction",2666],[15,"Filter",2666],[15,"Distinct",2666],[15,"Slice",2666],[15,"Sink",2666],[15,"Join",2666],[15,"Union",2666],[15,"HConcat",2666],[15,"PythonScan",2666],[15,"Outer",2726],[15,"Range",2727]],"b":[[432,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[433,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[434,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[499,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[500,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[501,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[549,"impl-Expr"],[550,"impl-PartialEq-for-Expr"],[553,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[554,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[619,"impl-Display-for-Expr"],[620,"impl-Debug-for-Expr"],[622,"impl-Display-for-Operator"],[623,"impl-Debug-for-Operator"],[625,"impl-Display-for-BooleanFunction"],[626,"impl-Debug-for-BooleanFunction"],[627,"impl-Display-for-FunctionExpr"],[628,"impl-Debug-for-FunctionExpr"],[654,"impl-From%3Ci32%3E-for-Expr"],[655,"impl-From%3Ci64%3E-for-Expr"],[657,"impl-From%3Cu32%3E-for-Expr"],[658,"impl-From%3CAggExpr%3E-for-Expr"],[659,"impl-From%3Cu8%3E-for-Expr"],[660,"impl-From%3C%26str%3E-for-Expr"],[661,"impl-From%3Cbool%3E-for-Expr"],[662,"impl-From%3Cf64%3E-for-Expr"],[663,"impl-From%3Cu16%3E-for-Expr"],[664,"impl-From%3Cf32%3E-for-Expr"],[665,"impl-From%3Ci16%3E-for-Expr"],[666,"impl-From%3Ci8%3E-for-Expr"],[667,"impl-From%3Cu64%3E-for-Expr"],[670,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[671,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[672,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[673,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[675,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[676,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[677,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[678,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[679,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[680,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[681,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[683,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[684,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[685,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[687,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[718,"impl-Expr"],[719,"impl-Hash-for-Expr"],[975,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[976,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[977,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1752,"impl-From%3CDslPlan%3E-for-LazyFrame"],[1753,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[1981,"impl-LazyCsvReader%3C\'a%3E"],[1982,"impl-LazyFileListReader-for-LazyCsvReader%3C\'_%3E"],[1983,"impl-LazyJsonLineReader"],[1984,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2002,"impl-LazyFileListReader-for-LazyCsvReader%3C\'_%3E"],[2003,"impl-LazyCsvReader%3C\'a%3E"],[2004,"impl-LazyJsonLineReader"],[2005,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2403,"impl-Debug-for-Duration"],[2404,"impl-Display-for-Duration"],[2407,"impl-Display-for-JoinType"],[2408,"impl-Debug-for-JoinType"],[2409,"impl-Display-for-JoinValidation"],[2410,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4H+wAEABEAFwAKACMAAAAmAA0ANQAFADwABgBEAAIASQAAAEsAEABdABIAcQAAAHMAAwB4AA0AhwALAJQAAgCYABgAtAAIAL4AAwDDAAMAyQAHANIAAQDVAAAA1wAZAPIAAAD3AAAA+gABAP4AAAAEAQAABgEAABEBAAAUAQAAGwEAAB0BAQAiAQAAJQEzAFoBAABcAQAAXgEBAGMBAABqASUAkwEAAK0BDAC7AUIAAAIAAAICGQAdAgAAHwIAACUCAAAnAgsANAIaAFcCAABaAgEAXwIAAGUCAABoAhUAfwIAAI8CAQCSAgoAnwIDAKQCBgCsAgIAsAIAALYCAAC6AgAAwAIBAMUCBQDOAgAA0AIJAN0CAQDgAhkAGAMCABwDAAAvAwAANwMAAEQDAABHAwUAUAMAAFMDAABjAwAAZgMCAG4DAgByAwMAewMBAH8DAgCFAwEAkAMAAJIDAQCZAwAAmwMAAKMDAQCpAwEArAMAALEDAgDDAwUAygMPAOMDAADqAwAA8QMAAPYDAAD4AwAA+gMAAAAEAAAFBAAABwQAAAkEAgARBBMAJgQEAC4EMwBkBAAAZgQbAI4EAACQBBoArgQBAL8EAADDBAEAyAQTAN8EAQDiBAEA5QQBAOgEBADuBDEAIQUDACYFAgArBQIAMAUDADgFAQBBBQIARwUAAEkFAABWBQAAZQUDAG8FAQByBQAAeQUBAHwFAQCDBQAAkAUFAJwFAgCoBQIArAUDALEFAAC0BQAAtwUDAL8FIwDkBQAA5gUCAOsFCwD4BQMAAAYCAAQGAAAHBgAADAYCABAGAQAwBgMAPAYDAEMGAABFBgwAVQYBAFkGFQBwBgEAdQYRAIkGAQCMBgAAkwYAAJYGGACzBgMAuAYGANIGAQDVBgAA2QYBAOkGAADrBgoABwcBAAwHAQAQBwAAEgcAABcHAQAdBwMAIgcDACgHAAAqBwAALAcEADoHAwBHBwQATQcAAFEHAQBUBwAAYAcAAG0HAQBwBwkAewcTAJEHCQCeBwEAoQcJAKwHAAC0BwAAvwcAAMEHAADFBwEAyAcBANMHAADWBwAA4wcFAOoHBgDyBwAA9AcFAPwHAAD/BwoACwgAAA4IAAAQCAEAFAgCABkIAAAbCA4ALQgBADAIAgA0CAMAQAgAAEUIAABHCAYAUQgCAFUIAABYCAoAZAgCAGoIAABvCBMAhgglALAIHwDRCAMA2AhEAB4JQQBhCRQAfgkAAIsJEACdCQAAoAkRAMQJAADHCQAAygkBAM4JAADQCQEA0wkDANgJAADbCQAA3QkBAOAJAQDkCQEA6QkVAAAKZABmCgEAagpAAA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPKKPIFKGGPIPPPPPKNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNHONONNNNNNNNNNNNNNOOEEPKPPGKKNHHMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","Cross","CrossJoin","DataFrameJoinOps","Inner","InnerJoinIds","JoinArgs","JoinDispatch","JoinType","JoinValidation","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Outer","SeriesJoin","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_join_suffix_name","_left_join_from_series","_left_join_from_series","_outer_join_from_series","_outer_join_from_series","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default_join_ids","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","inner_join","into","into","into","join","join_nulls","left_join","merges_join_keys","needs_checks","new","outer_join","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validation","coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","all_horizontal","any_horizontal","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[201,"polars_ops::frame::join::JoinType"],[202,"polars_ops::prelude"],[204,"polars_ops::series"],[255,"polars_core::datatypes"],[256,"polars_core::datatypes"],[257,"polars_core::series"],[258,"polars_error"],[259,"core::marker"],[260,"core::option"],[261,"core::iter::traits::collect"],[262,"polars_core::datatypes"],[263,"polars_core::chunked_array::ops::sort::options"],[264,"polars_core::frame"],[265,"dyn_clone::sealed"],[266,"alloc::string"],[267,"core::fmt"],[268,"core::fmt"],[269,"polars_arrow::array::primitive"],[270,"core::convert"],[271,"core::result"],[272,"core::any"],[273,"core::fmt"]],"i":[0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,0,7,3,3,3,3,0,0,0,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,25,0,0,0,26,0,0,34,0,0,34,0,0,0,0,0,34,0,35,35,35,35,34,0,32,34,35,0,30,30,0,30,30,0,30,30,30,30,32,34,35,32,34,35,32,34,35,32,34,35,36,36,36,36,32,35,0,32,34,35,32,34,35,32,34,35,32,34,35,32,32,32,34,34,34,35,35,35,32,34,34,35,35,32,32,34,35,32,34,35,42,42,42,42,32,32,34,35,45,32,34,35,45,32,45,34,35,32,45,0,32,32,32,32,34,35,34,35,32,34,35,32,34,35,32,34,35,32,54,0,0,51,0,51,51,0,0,0,51,0,0,49,49,50,51,51,0,0,0,51,51,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,53,53,0,0,0,0,0,0,0,51,51,51,51,53,53],"f":"```````{bd}{{f{j{h}}}l}0{{fd}l}01100`{{n{j{A`}}e}{{Ad{Ab}}}Af{{Al{}{{Ah{{Aj{c}}}}}}}}2211```{AnB`}{{BbBdBf}{{Ad{Bh}}}}0{{BbBhBf}{{Ad{Bh}}}}0{BbBj}000{{Bb{j{Ab}}}{{Ad{B`}}}}0{{BbBlBf}{{Ad{Ab}}}}03322{Bb{{Ad{Ab}}}}0{BbAb}00011{Bb{{Ad{Bj}}}}0{BbB`}0{{BbAb}{{Ad{B`}}}}0{{BbBlBn}B`}0{{BbC`}{{Ad{B`}}}}0{{Bbh}Ab}077{Bb{{Ad{B`}}}}00011{{BbB`}B`}0`{CbBh}```{CdCf}```````````````````{{cCh}Cj{}}00{{Cf{j{Bd}}{j{Bd}}{Aj{Bd}}Cf}Cf}{{Cl{j{A`}}BfBf}Cf}0`{{ClCnCfD`}{{Ad{Cf}}}}0{{BdBd}Db}{{ClCfAbAbD`Bf{Aj{{j{Bd}}}}}{{Ad{Cf}}}}0{{ClCfAbAbD`}{{Ad{Cf}}}}0{ce{}{}}00000{D`D`}{DdDd}{DfDf}{{ce}Cj{}{}}00{{DhCf{Aj{Bd}}{Aj{{Dj{BlBn}}}}}{{Ad{Cf}}}}0{{DhCf{Aj{{Dj{BlBn}}}}Bf}{{Ad{{Dj{CfCf}}}}}}0{{}D`}{{}Df}{{}Dl}{Bnc{}}00000{BnCj}00{{D`D`}Bf}{{DdDd}Bf}{{DfDf}Bf}{{ce}Bf{}{}}00000000{{D`Dn}E`}{{DdDn}E`}0{{DfDn}E`}0{cc{}}{DdD`}11{{D`c}CjEb}{{Ddc}CjEb}{{Dfc}CjEb}{{EdAbDfBf}{{Ad{{Dj{EfBf}}}}}}0{{EdAbDfBf}{{Ad{{Dj{{Eh{A`}}{Eh{A`}}}}}}}}0`{{}Bn}00{{EjCfee}{{Ad{Cf}}}{{El{Bd}}}{{Al{}{{Ah{c}}}}}}{ce{}{}}00{{EjCfeeD`}{{Ad{Cf}}}{{El{Bd}}}{{Al{}{{Ah{c}}}}}}`2{DdBf}{DfBf};4{{CfCfBf}{{Ad{Cn}}}}`{D`Bd}`555{cDb{}}0{c{{En{e}}}{}{}}00000{cF`{}}00```````````{{cCh}Cj{}}{{{j{Ab}}}{{Ad{Ab}}}}0{Fb{{Aj{Bn}}}}0{FdAb}<<{{AbAbAb}{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}0{FfFf}{{ce}Cj{}{}}6{{AbBn}{{Ad{Bj}}}}{{}Ff}{Bnc{}}0{BnCj}{{FfFf}Bf}{{ce}Bf{}{}}00{{FfDn}{{En{CjFh}}}}{cc{}}{{Ffc}CjEb}{{}Bn}{ce{}{}}{AbBf}{{FjC`}{{Ad{Bf}}}}0{{{j{Ab}}}{{Ad{{Aj{Ab}}}}}}00{Ab{{Ad{Ab}}}}0{{BlBd}{{Ad{Ab}}}}25{c{{En{e}}}{}{}}0{cF`{}}{{FjBfBf}{{Ad{Cf}}}}0","D":"Dn","p":[[10,"AsBinary",4],[8,"BinaryChunked",255],[10,"BinaryNameSpaceImpl",4],[1,"u8"],[1,"slice"],[8,"BooleanChunked",255],[10,"ChunkedSet",4],[8,"IdxSize",256],[5,"Series",257],[8,"PolarsResult",258],[10,"Copy",259],[17,"Item"],[6,"Option",260],[10,"IntoIterator",261],[10,"AsList",23],[8,"ListChunked",255],[10,"ListNameSpaceImpl",23],[1,"str"],[1,"bool"],[8,"StringChunked",255],[8,"IdxCa",262],[1,"i64"],[1,"usize"],[5,"SortOptions",263],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",264],[5,"Private",265],[1,"unit"],[10,"JoinDispatch",78],[8,"LeftJoinIds",78],[5,"JoinArgs",78],[5,"String",266],[6,"JoinType",78],[6,"JoinValidation",78],[10,"CrossJoin",78],[1,"tuple"],[8,"ChunkJoinOptIds",78],[5,"Formatter",267],[8,"Result",267],[10,"Hasher",268],[10,"SeriesJoin",78],[8,"InnerJoinIds",78],[5,"PrimitiveArray",269],[10,"DataFrameJoinOps",78],[10,"AsRef",270],[6,"Result",271],[5,"TypeId",272],[10,"ArgAgg",204],[10,"SeriesSealed",204],[6,"SearchSortedSide",204],[5,"Error",267],[10,"SeriesMethods",204],[15,"Outer",201]],"b":[[152,"impl-Debug-for-JoinType"],[153,"impl-Display-for-JoinType"],[154,"impl-Display-for-JoinValidation"],[155,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANgAEgAAAAgACwABAA8AAwAVAA8AKQAyAGAABQBoABMAfgAeAJ4AAAChAAoAsQAAALMAAgC3ABYAzwAHANkAAgDfAAwA7QABAPEADAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"core::fmt"],[121,"core::fmt"],[122,"core::option"],[123,"core::hash"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,0,3,3,3,3,3,3,3,19,0,19,0,0,0,17,19,17,17,20,17,19,20,17,19,17,17,17,17,17,19,17,19,17,11,20,17,20,17,19,20,17,19,20,17,19,17,17,17,17,17,19,17,20,17,19,11,20,17,20,17,19,17,20,17,19,17,17,11,20,17,17,19,20,17,19,20,17,19,20,17,19,20,17,19,0,0],"f":"`{{cb}d{}}{ce{}{}}0{ff}{{ce}d{}{}}{{}f}{hc{}}0{hd}{{fj}{{n{l}}}}{cc{}}`{f{{Ab{A`l}}}}{f{{Ad{A`}}}}{{}h}:`7{{{Ab{A`l}}}f}{{fjl}d}{f{{Ah{Af}}}}{fAf}{c{{n{Aj}}}{{Al{j}}}}?{c{{An{e}}}{}{}}0{cB`{}}{{fj}d}{ce{}{}}{{f{Ah{Af}}}f}``````{{cb}d{}}0``222222``{BbBd}`{BbBb}{BfBf}{{ce}d{}{}}0`{{Afj}Bd}{{Bhj}Bd}{{}Bb}{hc{}}00000{hd}00{{BbBb}Bd}{{ce}Bd{}{}}00{{BbBj}{{An{dBl}}}}{{BfBj}{{An{dBl}}}}`{cc{}}00{{Afj}{{n{{C`{Bn}}}}}}{{Bhj}{{n{{C`{Bn}}}}}}{{Bbc}dCb}{{}h}00`{ce{}{}}00{BbBd}`{{AfjBn}{{n{d}}}}{{BhjBn}{{n{d}}}}`33{c{{An{e}}}{}{}}00000{cB`{}}00555{{}{{Ad{j}}}}0","D":"Dh","p":[[5,"Private",109],[1,"unit"],[5,"SQLContext",0],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",31],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",31],[1,"bool"],[6,"Context",31],[5,"DefaultFunctionRegistry",31],[5,"Formatter",120],[5,"Error",120],[5,"UserDefinedFunction",121],[6,"Option",122],[10,"Hasher",123]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[283,"polars_time::series"],[304,"chrono::naive::datetime"],[305,"polars_core::datatypes::time_unit"],[306,"polars_arrow::legacy::time_zone"],[307,"core::option"],[308,"polars_core::chunked_array::logical::datetime"],[309,"polars_error"],[310,"chrono::naive::time"],[311,"polars_core::chunked_array::logical::time"],[312,"polars_core::datatypes"],[313,"polars_core::frame"],[314,"alloc::string"],[315,"polars_core::utils"],[316,"dyn_clone::sealed"],[317,"core::fmt"],[318,"core::fmt"],[319,"core::result"],[320,"core::any"],[321,"core::clone"],[322,"polars_core::datatypes"],[323,"polars_core::frame::group_by::proxy"],[324,"polars_core::datatypes::dtype"],[325,"alloc::vec"],[326,"core::ops::function"],[327,"polars_core::series"],[328,"polars_core::datatypes"]],"i":[4,0,0,4,4,0,0,0,0,0,4,0,0,0,0,11,12,44,3,0,13,0,0,16,18,18,0,0,0,25,25,25,25,25,0,0,25,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,4,0,0,0,42,43,0,43,0,4,42,43,4,4,42,43,0,43,0,43,43,43,0,43,41,3,4,42,43,44,3,3,3,46,41,3,4,42,43,44,46,41,3,4,42,43,44,41,3,4,42,43,44,41,3,4,42,43,44,3,3,3,3,43,46,41,3,4,42,43,44,46,41,3,4,42,43,44,46,41,3,4,42,43,44,3,4,42,43,3,3,3,4,4,4,42,42,42,43,43,43,41,3,3,4,42,43,46,41,3,4,42,43,44,44,44,44,44,0,0,3,4,42,43,46,41,3,4,42,43,44,46,41,3,4,42,43,44,46,3,3,3,3,3,3,3,3,3,44,46,44,3,3,3,44,44,44,41,3,4,42,43,44,3,3,3,44,44,44,44,3,44,3,44,46,41,3,4,42,43,44,46,41,3,4,42,43,44,46,41,3,4,42,43,44,43,3,3,0,0,54,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":"`````````````{{bddfhj{n{l}}}{{Ab{A`}}}}{dAd}{{Af{n{l}}}{{Ab{Af}}}}{{Ah{n{l}}}{{Ab{Ah}}}}```{{Ajff{n{l}}}{{Ab{Aj}}}}`{{bAlAlfh}{{Ab{An}}}}{{B`{n{l}}Bbb}{{Ab{B`}}}}{{Bdcbff}{{Ab{Bf}}}{{Bj{Bh}}}}0``````````{{cBl}Bn{}}{C`Bb}{ce{}{}}0{CbCb}{{ce}Bn{}{}}{Cdc{}}0{CdBn}{{CbCb}Ad}{{ce}Ad{}{}}00{{CbCf}Ch}{cc{}}{{Cbc}BnCj}`{{}Cd}:{{Cbb}Ad};{c{{Cl{e}}}{}{}}0{cCn{}}````?=={{{D`{c}}}{{D`{c}}}{DbDd}}<;;:6{b{{n{Cb}}}}5?`{{{D`{c}}b}nDd}{{Df{Dj{Dh}}{n{j}}}{{n{c}}}{}}`{ce{}{}}6{{c{n{j}}}{{Ab{{Dn{}{{Dl{e}}}}}}}{}{}}76````````````````````````{{cBl}Bn{}}00000{{fE`{n{l}}}{{Ab{E`}}}}0033333333333333{EbEb}{ff}{hh}{EdEd}{EfEf}{EhEh}{{ce}Bn{}{}}00000{{ff}Ej}{{ce}Ej{}{}}{fE`}{fAd}{{}Ef}{Cdc{}}0000000000000{CdBn}000000{{ff}Ad}{{hh}Ad}{{EdEd}Ad}{{EfEf}Ad}{{ce}Ad{}{}}00000000000{{EbCf}Ch}{{fCf}Ch}0{{hCf}Ch}{{EdCf}Ch}{{EfCf}Ch}{cc{}}000000{{EhE`h{n{l}}}{{Ab{Eb}}}}00{{EhEbhj{n{l}}Ef}{{Ab{El}}}}{{ff{Dj{E`}}hj{n{l}}}{{Ab{En}}}}{{Eh{Dj{E`}}hj{n{F`}}AdAdEf}{{Fd{En{Fb{E`}}{Fb{E`}}}}}}{{fc}BnCj}{{hc}BnCj}{{Edc}BnCj}{{Efc}BnCj}{{}Cd}000000{ce{}{}}0000000{{f{n{b}}}Ad}{fAd}0{fE`}1{{fE`}f}12{E`f}{{fff}Eh}{El{{n{c}}}{}}`{bf}`{{ff}{{n{Ej}}}}{{EhE`{n{l}}}{{Ab{E`}}}}00::::::{cBh{}}{{fE`{n{l}}ceg}{{Ab{E`}}}{{Fh{E`}{{Ff{E`}}}}}{{Fh{E`}{{Ff{d}}}}}{{Fh{d}{{Ff{E`}}}}}}{{fE`{n{l}}}{{Ab{E`}}}}33330303{c{{Cl{e}}}{}{}}0000000000000{cCn{}}000000{Ef{{n{Fj}}}}=>``{FlFn}{G`{{Ab{Gb}}}}{G`{{Ab{Gd}}}}0{G`{{Ab{Gf}}}}22112{G`{{Ab{Gh}}}}322{{G`b}{{Ab{Fn}}}}0334","D":"Gb","p":[[1,"str"],[5,"NaiveDateTime",304],[5,"Duration",85],[6,"ClosedWindow",85],[6,"TimeUnit",305],[6,"Tz",306],[6,"Option",307],[8,"DatetimeChunked",308],[8,"PolarsResult",309],[1,"bool"],[10,"PolarsMonthEnd",0],[10,"PolarsMonthStart",0],[10,"PolarsRound",0],[5,"NaiveTime",310],[8,"TimeChunked",311],[10,"PolarsTruncate",0],[8,"StringChunked",312],[10,"PolarsUpsample",0],[5,"DataFrame",313],[5,"String",314],[10,"IntoVec",315],[5,"Private",316],[1,"unit"],[10,"AsString",28],[6,"Pattern",28],[1,"usize"],[5,"Formatter",317],[8,"Result",317],[10,"Hasher",318],[6,"Result",319],[5,"TypeId",320],[5,"DatetimeInfer",60],[10,"Clone",321],[10,"PolarsNumericType",312],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85],[6,"Label",85],[6,"StartBy",85],[5,"Window",85],[6,"Ordering",322],[5,"BoundsIter",85],[8,"GroupsSlice",323],[8,"TimeZone",324],[5,"Vec",325],[1,"tuple"],[17,"Output"],[10,"Fn",326],[1,"u32"],[10,"AsSeries",283],[5,"Series",327],[10,"TemporalMethods",283],[8,"Int32Chunked",312],[8,"Int8Chunked",312],[8,"BooleanChunked",312],[8,"Int16Chunked",312]],"b":[[187,"impl-Debug-for-Duration"],[188,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFMAyAAAAMoAAQDOAAoA4AABAOQAAgDqAAIA7gABAPMADQACAQAABAEaACMBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQCCCCCCCQCCCECCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","open_file","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","CachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[116,"polars_utils::atomic"],[136,"polars_utils::binary_search"],[138,"polars_utils::cache"],[174,"polars_utils::cell"],[194,"polars_utils::clmul"],[198,"polars_utils::contention_pool"],[213,"polars_utils::cpuid"],[215,"polars_utils::float"],[221,"polars_utils::floor_divmod"],[223,"polars_utils::functions"],[227,"polars_utils::hashing"],[259,"polars_utils::idx_vec"],[303,"polars_utils::index"],[365,"polars_utils::io"],[366,"polars_utils::iter"],[379,"polars_utils::mem"],[380,"polars_utils::min_max"],[387,"polars_utils::nulls"],[392,"polars_utils::ord"],[394,"polars_utils::partitioned"],[413,"polars_utils::slice"],[427,"polars_utils::sort"],[429,"polars_utils::sync"],[451,"polars_utils::sys"],[465,"polars_utils::total_ord"],[515,"polars_utils::unwrap"],[517,"polars_utils::vec"],[530,"num_traits"],[531,"core::cmp"],[532,"core::marker"],[533,"core::fmt"],[534,"core::marker"],[535,"core::cmp"],[536,"core::hash"],[537,"core::default"],[538,"core::ops::function"],[539,"core::result"],[540,"core::ops::function"],[541,"core::cmp"],[542,"alloc::borrow"],[543,"alloc::sync"],[544,"alloc::vec"],[545,"core::convert"],[546,"core::ops::range"],[547,"core::cmp"],[548,"core::slice::iter"],[549,"core::slice::iter"],[550,"std::fs"],[551,"std::path"],[552,"core::error"],[553,"core::iter::traits::iterator"],[554,"hashbrown::map"],[555,"hashbrown::map"],[556,"core::slice::index"],[557,"num_traits::cast"],[558,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,112,0,0,0,0,0,112,10,11,113,114,112,10,11,113,114,0,0,12,13,12,13,12,12,13,12,13,12,13,13,13,12,13,12,13,12,13,12,13,13,13,13,13,13,12,12,12,12,12,13,13,12,13,12,12,12,12,13,12,12,12,12,12,13,12,13,12,13,12,12,13,12,12,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,34,31,34,31,31,31,31,34,31,34,31,34,31,34,34,31,31,31,31,34,31,31,34,31,34,31,31,34,31,31,34,31,34,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,43,43,43,43,43,0,44,0,0,0,0,0,0,50,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,64,0,0,0,0,62,63,62,63,0,62,63,62,63,62,63,62,63,62,63,62,62,62,62,63,62,63,62,62,63,64,64,62,62,63,62,63,62,63,66,63,62,62,66,62,63,67,63,68,62,62,63,62,63,62,63,62,63,0,0,0,0,77,0,77,71,71,71,71,73,57,77,0,0,79,79,79,79,79,79,65,65,0,65,65,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,85,87,87,89,0,90,90,91,91,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,104,0,0,0,0,104,0,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,104,99,104,92,100,92,92,101,101,92,92,100,99,99,99,99,0,105,0,0,0,107,0,0,107,107,108,109,110,109,111],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Ah{c}}c}Aj{}}{ce{}{}}000{{{Ah{c}}}Al{}}{AjAj}{{{Ah{c}}}{{Ah{c}}}An}{{ce}Al{}{}}0{{AjAj}B`}{{ce}B`{}{}}{{}Aj}{{}{{Ah{c}}}{}}<<<<{AbAl}0{{AjAj}Bb}{{ce}Bb{}{}}00{{AjBd}Bf}{cc{}}0{{{Ah{c}}Aj}c{}}0{{{Ah{c}}c}{{Bh{Aj}}}{}}1{{Ajc}AlBj}{{}Ab}0{ce{}{}}0{{{Ah{c}}}Bb{}}{{{Ah{c}}}Ab{}}<{{AjAj}{{Bh{B`}}}}{{{Ah{c}}}{{Bh{c}}}{}}{{{Ah{c}}Ajc}Al{}}{{{Ah{c}}Aje}AlBl{{C`{c}{{Bn{c}}}}}}{{{Ah{c}}AjAj}Al{}}{{{Ah{c}}Aj}cBl}88{c{{Cb{e}}}{}{}}000{{{Ah{c}}Aje}{{Cb{Al`}}}Bl{{Cd{c}{{Bn{{Cb{c`}}}}}}}}{cCf{}}0{Ab{{Ah{c}}}{}}`<<{ChCh}{{ce}Al{}{}}{{}Ch}{Chc{}}{Abc{}}01{AbAl}{cc{}}{{}Ab}{ce{}{}}{ChAl}{AbCh}2>><{{{Cj{c}}c}AbCl}0``3333{{{Cn{ce}}}{{Cn{ce}}}AnAn};{{}{{Cn{ce}}}{D`Db}{}}999988{{{Dd{ceg}}cBb}e{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}88{{{Cn{eg}}c}{{Bh{g}}}{D`DbDf}{{Dh{c}}D`Db}{}}0{{{Cn{eg}}ci}g{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{{C`{e}{{Bn{g}}}}}}99{{{Cn{ce}}ce}e{D`Db}{}}99{g{{Dd{ceg}}}{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}{Ab{{Cn{ce}}}{D`Db}{}};{c{{Cb{e}}}{}{}}0{{{Cn{eg}}ck}{{Cb{gi}}}{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{}{{C`{e}{{Bn{{Cb{gi}}}}}}}}11{cCf{}}0`>>{{}{{Dn{c}}}Bl}{Abc{}}0{AbAl}{c{{Dn{c}}}{}}{cc{}}{E`c{}}{{{Dn{c}}}{}Df}{{{Dn{c}}}cDf}{{}Ab}{ce{}{}}{{{Dn{c}}}c{}}7{{}}>><{{EbEb}Eb}0{EbEb}0`44<<;9{{{Ed{c}}}cBl}65{Ab{{Ed{c}}}Bl}{{{Ed{c}}c}AlBl}{c{{Cb{e}}}{}{}}0{cCf{}}{{}Bb}0`00{EfBb}10`{{EhEh}{{Ej{EhEh}}}}{{{El{c}}e}{{El{c}}}An{{Cd{c}{{Bn{c}}}}}}{{{Cj{e}}{Bh{Ab}}}{{En{c}}}An{{F`{{Cj{c}}}}}}{{AbAb{Fb{Ab}}}{{Fb{Ab}}}}{{{El{c}}g}{{Cb{{El{c}}e}}}An{}{{Cd{c}{{Bn{{Cb{ce}}}}}}}}``{ce{}{}}0{FdFd}{{ce}Al{}{}}{Abc{}}0{FfEb}{FdEb}{AbAl}{{FdFd}Bb}{{ce}Bb{}{}}00{{FdBd}Bf}{cc{}}{{Fdc}AlBj}{{EbAb}Ab}{{}Ab}={FdBb}{{{Bh{{Cj{Fh}}}}Eb}Fd}??{Fdc{}}95{c{{Cb{e}}}{}{}}0{cCf{}}2``{{{Fj{c}}}{{Cj{c}}}{}}000{ce{}{}}0{{{Fj{c}}}Ab{}}{{{Fj{c}}}{{Fj{c}}}{}}{{ce}Al{}{}}{{}{{Fj{c}}}{}}{Abc{}}{{{Fj{c}}}e{}{}}1{{{Fj{c}}}Al{}}{AbAl}{{{Fj{c}}{Fj{c}}}BbFl}{{ce}Bb{}{}}00{{{Fj{c}}e}Al{}{{G`{}{{Fn{c}}}}}}{{{Fj{c}}Bd}Bfl}{{{Cj{c}}}{{Fj{c}}}An}{cc{}}{{{En{c}}}{{Fj{c}}}{}}{g{{Cb{ic}}}{}{}{{Gb{c}{{Fn{e}}}}}{}}{e{{Fj{c}}}{}{{G`{}{{Fn{c}}}}}}{{}Ab}{ce{}{}}{{{Fj{c}}}Bb{}}{{{Fj{c}}}{{Gd{c}}}{}}{{{Fj{c}}}{{Gf{c}}}{}}{{{Fj{c}}}Ab{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}{{Bh{c}}}{}}{{{Fj{c}}c}Al{}}0{{{Fj{c}}Ab}Al{}}8{c{{Cb{e}}}{}{}}0{cCf{}}{Ab{{Fj{c}}}{}}`````````;;;;{{{Cj{Gh}}Gh}{{Gj{Al}}}}{GlGl}{GnGn}{{ce}Al{}{}}0{Abc{}}000{AbAl}0{{GlGl}Bb}{{ce}Bb{}{}}00{Gn{{Ej{GhGh}}}}{{GlBd}Bf}{{GnBd}Bf}{cc{}}{GhGl}1{{{H`{}{{Fn{c}}}}Ab}cHb}0{GlGh}{{}Ab}0`{GnEb}{ce{}{}}0{HdBb}{GnBb}{GlBb}{cBb{}}{HdAb}{{}Gl}{{}Gn}{HfAb}{{GhGh}Gn}{{HhEb}Gh}{Gl{{Bh{Gh}}}};;{c{{Cb{e}}}{}{}}000{cCf{}}0{c{{Gj{Hj}}}{{F`{Hl}}}}``````{Hn{{`{HnGh}}}}0{Hn{{`{HnI`}}}}0{g{{Cb{Ibc}}}Id{}{{Gb{c}{{Fn{e}}}}}}{Gb{{Cb{Alc}}}Id}{{{Ij{}{{If{c}}{Ih{e}}}}}e{}{{Il{}{{Fn{c}}}}}}{{{Cj{c}}}{{Cj{c}}}j}`{{InIn}In}000{{InIn}Bb}0```{{{Hb{}{{J`{c}}}}}Bb{}}{{{Hb{}{{J`{c}}}}}c{}}{{cc}B`{hEf}}0`{ce{}{}}0{Abc{}}0{AbAl}{cc{}}{{}Ab}{{{Jb{ceg}}}{{Cj{{Jd{ceg}}}}}{}{}{}}{{{Jb{ceg}}}{{En{{Jd{ceg}}}}}{}{}{}}6{{{En{{Jd{ceg}}}}}{{Jb{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jf{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jf{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jh{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jh{ceg}}}{}{}{}}{c{{Cb{e}}}{}{}}0{cCf{}}`````{Jj{{Cj{{Jl{c}}}}}{}}{{Jne}{}{}{{K`{{Cj{c}}}}}}0{KbBb}{{{Cj{Fh}}}Eb}{Kd{{Bh{c}}}{}}0{{Kf{Fb{Ab}}}Kf}0{{e{En{Fh}}Ab}{{Cj{g}}}{Khj}{{G`{}{{Fn{c}}}}}{Kjj}}{{Kl{Cj{{Ej{GhGh}}}}{En{Gh}}}Al}`{ce{}{}}0{{{Kn{c}}}{{Kn{c}}}An}{{ce}Al{}{}}{Abc{}}0{{{Kn{c}}}c{}}{AbAl}{{{Kn{c}}Bd}Bfl}{cc{}}{{}{{Kn{c}}}{}}{{{Kn{c}}}{}{}}{{}Ab}:{{{Kn{c}}}Bb{}}33;{c{{Cb{e}}}{}{}}0{cCf{}}``==::8{L`Eb}74>221```````>>{LbLb}{LdLd}{{{Lf{c}}}{{Lf{c}}}An}?{{{Lf{c}}{Lf{c}}}B`Kh}{{ce}B`{}{}}{Abc{}}0{{{Lf{c}}}EbFf}{AbAl}{{{Lf{c}}{Lf{c}}}BbLh}{{ce}Bb{}{}}00{cc{}}{{{Lf{c}}{Lf{c}}}BbKh}0{{{Lf{c}}e}AlLjBj}{{}Ab}{ce{}{}}{{{Lf{c}}}BbHb}447{{{Lf{c}}{Lf{c}}}{{Bh{B`}}}Kh}22{{{M`{}{{Ll{c}}{Ln{e}}}}}c{}{}}{{KhKh}B`}{{LhLh}Bb}{{KhKh}Bb}0{{Ljc}AlBj}{{{Cj{Lj}}c}AlBj}223{c{{Cb{e}}}{}{}}0{cCf{}}{{{Lf{c}}}eHb{}}`{Mbc{}}``````{{{Mf{}{{Md{c}}}}g}{{En{e}}}{}{}{{Cd{c}{{Bn{e}}}}}}0{{MhAbc}Alj}{Mj{{Ej{AbAb}}}}{{Mlc}Al{}}1{{AbLd}Mn}","D":"Ib","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",530],[10,"PartialOrd",531],[10,"Copy",532],[10,"Debug",533],[10,"Send",532],[10,"Sync",532],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[5,"Arena",59],[5,"Node",59],[1,"unit"],[10,"Clone",534],[6,"Ordering",531],[1,"bool"],[5,"Formatter",533],[8,"Result",533],[6,"Option",535],[10,"Hasher",536],[10,"Default",537],[17,"Output"],[10,"FnOnce",538],[6,"Result",539],[10,"FnMut",538],[5,"TypeId",540],[5,"SyncCounter",116],[1,"slice"],[10,"Ord",531],[5,"FastFixedCache",138],[10,"Hash",536],[10,"Eq",531],[5,"CachedFunc",138],[10,"Sized",532],[10,"Borrow",541],[17,"Owned"],[10,"ToOwned",542],[5,"SyncUnsafeCell",174],[1,"never"],[1,"u64"],[5,"LowContentionPool",198],[10,"IsFloat",215],[10,"FloorDivMod",221],[1,"tuple"],[5,"Arc",543],[5,"Vec",544],[10,"AsRef",545],[5,"Range",546],[5,"BytesHash",227],[10,"DirtyHash",227],[1,"u8"],[5,"UnitVec",259],[10,"PartialEq",531],[17,"Item"],[10,"IntoIterator",547],[10,"FallibleIterator",366],[5,"Iter",548],[5,"IterMut",548],[8,"IdxSize",303],[8,"PolarsResult",549],[5,"NullableIdxSize",303],[5,"ChunkId",303],[10,"Indexable",303],[10,"IsNull",387],[10,"Bounded",303],[10,"NullCount",303],[10,"ToIdx",303],[5,"File",550],[5,"Path",551],[10,"EnumerateIdxTrait",366],[1,"u32"],[10,"FromFallibleIterator",366],[10,"Error",552],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",366],[10,"Iterator",553],[10,"MinMax",380],[17,"Inner"],[5,"PartitionedHashMap",394],[5,"HashMap",554],[5,"RawEntryBuilder",554],[5,"RawEntryBuilderMut",554],[10,"Slice2Uninit",413],[20,"MaybeUninit",555],[10,"GetSaferUnchecked",413],[10,"SliceIndex",556],[10,"SortedSlice",413],[10,"Extrema",413],[10,"SliceAble",413],[10,"TotalOrd",465],[10,"FromPrimitive",557],[5,"ThreadPool",558],[5,"SyncPtr",429],[5,"MemInfo",451],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",465],[10,"TotalEq",465],[10,"TotalHash",465],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",465],[10,"UnwrapUncheckedRelease",515],[17,"ItemIn"],[10,"ConvertVec",517],[10,"ResizeFaster",517],[10,"IntoRawParts",517],[10,"PushUnchecked",517],[10,"CapacityByFactor",517],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"b":[[282,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[284,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMkBNQAAAAgACgBMAFkAAgBdAAIAYgASAHYACQCBAAAAhAAEAIsADwCdAAUApQAJALAAAQCzAAIAuAAAALsAAADAAAwAzgABANEABgDZAAoA5QAOAPUAAgD5AAsABgEVAB0BAwAiAQYAKgEkAFABAABSAQAAVAEEAFsBFgBzAQAAdQEGAH0BCwCLAQUAkgECAJYBDQCmAQQArAEAAK8BBQC2AQEAugEBAL0BAAC/AQUAxgEEAM0BAADPAQMA1wEDAN0BCwDqAQMA7wEVAAYCBAAMAgMAEQIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
